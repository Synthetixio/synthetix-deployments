name = "synthetix-omnibus"
version = "3.2.1"
description = "Includes the full synthetix system with configurations applied"
include = [
    "tomls/settings-testnet.toml",
    "tomls/core.toml",
    "tomls/permissions.toml",
    "tomls/collaterals/weth.toml",
		"tomls/collaterals/wbtc.toml",
		"tomls/collaterals/op.toml",
    "tomls/pools/spartan-council.toml",
    "tomls/permit-all-createPool.toml",
    "tomls/permit-all-registerMarket.toml",
    "tomls/permit-all-transferCrossChain.toml",
		"tomls/markets/spot/eth.toml",
		"tomls/markets/spot/btc.toml",
		"tomls/markets/spot/snx.toml",
		"tomls/markets/spot/link.toml",
		"tomls/markets/spot/op.toml",
		"tomls/markets/perps/eth.toml",
		"tomls/markets/perps/btc.toml",
		"tomls/markets/perps/snx.toml",
		"tomls/markets/perps/link.toml",
		"tomls/markets/perps/op.toml",

		# overrides for the oracles (will replace imports from above modules to use pyth instead of chainlink)
		"tomls/oracles/pyth-eth.toml",
		"tomls/oracles/pyth-btc.toml",
		"tomls/oracles/pyth-snx.toml",
		"tomls/oracles/pyth-link.toml",
		"tomls/oracles/pyth-op.toml",
]

[setting.owner]
defaultValue = "0x48914229deDd5A9922f44441ffCCfC2Cb7856Ee9"

[setting.weth_address]
defaultValue = "0x4200000000000000000000000000000000000006"

[setting.wbtc_address]
defaultValue = "0xe7798f023fc62146e8aa1b36da45fb70855a77ea"

[setting.op_address]
defaultValue = "0x4200000000000000000000000000000000000042"

[setting.weth_aggregator_address]
defaultValue = "0xcD2A119bD1F7DF95d706DE6F2057fDD45A0503E2"

[setting.eth_aggregator_address]
defaultValue = "0xcD2A119bD1F7DF95d706DE6F2057fDD45A0503E2"

[setting.btc_aggregator_address]
defaultValue = "0xcD2A119bD1F7DF95d706DE6F2057fDD45A0503E2"

[setting.snx_aggregator_address]
defaultValue = "0xcD2A119bD1F7DF95d706DE6F2057fDD45A0503E2"

[setting.link_aggregator_address]
defaultValue = "0xcD2A119bD1F7DF95d706DE6F2057fDD45A0503E2"

[setting.op_aggregator_address]
defaultValue = "0xcD2A119bD1F7DF95d706DE6F2057fDD45A0503E2"

[setting.minimum_liquidity_ratio]
defaultValue = "2000000000000000000"

[setting.account_timeout_withdraw]
defaultValue = "86400"

[setting.deployer]
defaultValue = "0x48914229deDd5A9922f44441ffCCfC2Cb7856Ee9"

[setting.sc_pool_id]
defaultValue = "1"

[setting.sc_pool_owner]
defaultValue = "0x48914229deDd5A9922f44441ffCCfC2Cb7856Ee9"

[setting.ccip_router]
defaultValue = "0x48914229deDd5A9922f44441ffCCfC2Cb7856Ee9"

[setting.ccip_token_pool]
defaultValue = "0x48914229deDd5A9922f44441ffCCfC2Cb7856Ee9"

# TODO: can we turn this into one invoke by having `setMaxCollateralAmount` function take an array of markets?

[setting.perpsBtcSynthMaxCollateralAmount]
defaultValue = "<%= MaxUint256 %>"

[setting.perpsSnxSynthMaxCollateralAmount]
defaultValue = "<%= MaxUint256 %>"

[setting.perpsOpSynthMaxCollateralAmount]
defaultValue = "<%= MaxUint256 %>"

[setting.perpsLinkSynthMaxCollateralAmount]
defaultValue = "<%= MaxUint256 %>"

[setting.perpsEthSynthMaxCollateralAmount]
defaultValue = "<%= MaxUint256 %>"

# GLOBAL PERPS SETTINGS

[setting.perpsMinLiquidationReward]
defaultValue = "1"

[setting.perpsMaxLiquidationReward]
defaultValue = "500"

# ------------------------------

[invoke.setPerpsMaxCollateralForSnxUsd]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxCollateralAmount"
args = [
  "0",
  "<%= MaxUint256 %>"
]
depends = ["provision.perpsFactory"]

[invoke.setPerpsSynthDeductionPriority]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setSynthDeductionPriority"
args = [["0", "<%= extras.synth_eth_market_id %>"]]
depends = ["invoke.createEthSynth", "provision.perpsFactory"]

[invoke.setPerpsProxyCustomTransactorOnEthSynthMarket]
target = ["spotFactory.SpotMarketProxy"]
fromCall.func = "getMarketOwner"
fromCall.args = ["<%= extras.synth_eth_market_id %>"]
func = "setCustomTransactorFees"
args = [
  "<%= extras.synth_eth_market_id %>",
  "<%= imports.perpsFactory.contracts.PerpsMarketProxy.address %>",
  "<%= parseEther('0.0001') %>"
]
depends=["provision.perpsFactory", "invoke.createEthSynth"]

[invoke.setScPoolConfig]
target = ["system.CoreProxy"]
fromCall.func = "getPoolOwner"
fromCall.args = ["<%= settings.sc_pool_id %>"]
func = "setPoolConfiguration"
args = [
    "<%= settings.sc_pool_id %>",
    [
        { marketId = "<%= extras.synth_btc_market_id %>", weightD18 = 1, maxDebtShareValueD18 = "<%= parseEther('1') %>" },
        { marketId = "<%= extras.synth_eth_market_id %>", weightD18 = 1, maxDebtShareValueD18 = "<%= parseEther('1') %>" },
        { marketId = "<%= extras.synth_link_market_id %>", weightD18 = 1, maxDebtShareValueD18 = "<%= parseEther('1') %>" },
        { marketId = "<%= extras.synth_op_market_id %>", weightD18 = 1, maxDebtShareValueD18 = "<%= parseEther('1') %>" },
        { marketId = "<%= extras.synth_snx_market_id %>", weightD18 = 1, maxDebtShareValueD18 = "<%= parseEther('1') %>" },
        { marketId = "<%= imports.perpsFactory.extras.superMarketId %>", weightD18 = 1, maxDebtShareValueD18 = "<%= parseEther('1') %>" }
    ],
]

depends=["invoke.createScPool", "invoke.createEthSynth", "invoke.createBtcSynth", "invoke.createSnxSynth", "invoke.createLinkSynth", "invoke.createOpSynth", "provision.perpsFactory"]
