name = "synthetix-omnibus"
version = "4"
description = "Includes the full synthetix system with configurations applied"
include = [
    "tomls/settings.toml",
    "tomls/ccip-testnet.toml",
    "tomls/core.toml",
    "tomls/permissions.toml",
    "tomls/omnibus-sepolia/oracles/wsteth.toml",
    "tomls/omnibus-sepolia/oracles/susde.toml",
    "tomls/omnibus-sepolia/oracles/snx.toml",
    "tomls/collaterals/wsteth.toml",
    "tomls/collaterals/susde.toml",
    "tomls/collaterals/snx.toml",
    "tomls/markets/legacy.toml",
    "tomls/markets/spot-factory.toml",
    "tomls/markets/spot/usde.toml",
    "tomls/pools/spartan-council.toml",
    "tomls/permit-all-createPool.toml",
    "tomls/permit-all-registerMarket.toml",
    "tomls/permit-all-transferCrossChain.toml",
]

[setting.salt]
defaultValue = "snaxtest"

[setting.snx_package]
defaultValue = "synthetix:3.3.18"

[setting.spot_market_package]
defaultValue = "synthetix-spot-market:3.3.15"

[setting.legacy_market_package]
defaultValue = "synthetix-legacy-market:3.3.5"

[setting.susde_package]
defaultValue = "fake-susde-token"

depends = ["clone.susde_deploy"]

[setting.wsteth_package]
defaultValue = "fake-wsteth-token"

depends = ["clone.wsteth_deploy"]

[setting.owner]
defaultValue = "0x48914229deDd5A9922f44441ffCCfC2Cb7856Ee9"

[setting.snx_address]
defaultValue = "<%= imports.legacyMarket.imports.v2x.contracts.ProxySynthetix.address %>"

[setting.wsteth_aggregator_address]
defaultValue = "0xaaabb530434B0EeAAc9A42E25dbC6A22D7bE218E"

[setting.wsteth_chainlink_staleness_tolerance]
defaultValue = "86400"

[setting.susde_aggregator_address]
defaultValue = "0x6f7be09227d98Ce1Df812d5Bc745c0c775507E92"

[setting.susde_chainlink_staleness_tolerance]
defaultValue = "86400"

[setting.usde_aggregator_address]
defaultValue = "0x55ec7c3ed0d7CB5DF4d3d8bfEd2ecaf28b4638fb"

[setting.usde_chainlink_staleness_tolerance]
defaultValue = "86400"

[setting.snx_aggregator_address]
defaultValue = "0xc0F82A46033b8BdBA4Bb0B0e28Bc2006F64355bC"

[setting.snx_chainlink_staleness_tolerance]
defaultValue = "86400"

[setting.weth_liquidation_reward]
defaultValue = "10000000000000000000"

[setting.minimum_liquidity_ratio]
defaultValue = "2000000000000000000"

[setting.account_timeout_withdraw]
defaultValue = "86400"

[setting.deployer]
defaultValue = "0x48914229deDd5A9922f44441ffCCfC2Cb7856Ee9"

[setting.pdao]
defaultValue = "0x48914229deDd5A9922f44441ffCCfC2Cb7856Ee9"

[setting.sc_pool_id]
defaultValue = "1"

[setting.pool_owner]
defaultValue = "0x48914229deDd5A9922f44441ffCCfC2Cb7856Ee9"

[setting.ccip_router]
defaultValue = "0xd0daae2231e9cb96b94c8512223533293c3693bf"

[setting.ccip_token_pool]
defaultValue = "0x9b65749b38278060c5787cce0391ac7f1094c8e8"

[setting.synthUsdeAsyncFixedFee]
defaultValue = "0"

[setting.synthUsdeSkewScale]
defaultValue = "0"

[setting.pythFeedUrl]
defaultValue = "https://api.synthetix.io/pyth-mainnet/api/get_vaa_ccip?data={data}"

[setting.pythUsdeFeedId]
defaultValue = "0x6ec879b1e9963de5ee97e9c8710b742d6228252a5e2ca12d4ae81d7fe5ee8c5d"

[setting.pyth_price_verification_address]
defaultValue = "0xDd24F84d36BF92C65F92307595335bdFab5Bbd21"

[setting.synth_usde_max_market_collateral]
defaultValue = "<%= parseEther('100000000') %>"

# we want to enable the spot market wrapper for usde
[clone.usde]
source = "mintable-token:2.0"
target = "fake-usde-token"
options.name = "Ethena USD (fake)"
options.symbol = "USDe"
options.owner = "<%= settings.deployer %>"

[clone.susde_deploy]
source = "mintable-token:2.0"
target = "fake-susde-token"
options.name = "Ethena Staked USD (fake)"
options.symbol = "sUSDe"
options.owner = "<%= settings.deployer %>"

[clone.wsteth_deploy]
source = "mintable-token:2.0"
target = "fake-wsteth-token"
options.name = "Lido Wrapped Staked ETH (fake)"
options.symbol = "WstETH"
options.owner = "<%= settings.deployer %>"

[invoke.SpotMarketProxy_setWrapper_usde]
target = ["spotFactory.SpotMarketProxy"]
fromCall.func = "getMarketOwner"
fromCall.args = ["<%= extras.synth_usde_market_id %>"]
func = "setWrapper"
args = [
    "<%= extras.synth_usde_market_id %>",
    "<%= imports.usde.contracts.Token.address %>",
    "<%= settings.synth_usde_max_market_collateral %>",
]

[provision.pyth_erc7412_wrapper]
source = "pyth-erc7412-wrapper:3.3.15"
targetPreset = "<%= settings.target_preset %>"
options.salt = "<%= settings.salt %>"
options.pythAddress = "<%= settings.pyth_price_verification_address %>"

[invoke.setScPoolConfig]
target = ["system.CoreProxy"]
fromCall.func = "getPoolOwner"
fromCall.args = ["<%= settings.sc_pool_id %>"]
func = "setPoolConfiguration"
args = [
    "<%= settings.sc_pool_id %>",
    [
        { marketId = "<%= imports.legacyMarket.settings.marketId %>", weightD18 = 99, maxDebtShareValueD18 = "<%= parseEther('1') %>" },
        { marketId = "<%= settings.synth_usde_market_id %>", weightD18 = 1, maxDebtShareValueD18 = "<%= parseEther('1') %>" },
    ],
]
