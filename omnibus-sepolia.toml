name = "synthetix-omnibus"
version = "9"
description = "Includes the full synthetix system with configurations applied"
include = [
    "tomls/settings.toml",
    "tomls/ccip-testnet.toml",
    "tomls/omnibus-sepolia/core.toml",
    "tomls/permissions.toml",
    "tomls/oracles/wsteth.toml",
    "tomls/oracles/susde.toml",
    "tomls/oracles/snx.toml",
    "tomls/oracles/eth.toml",
    "tomls/collaterals/wsteth.toml",
    "tomls/collaterals/susde.toml",
    "tomls/collaterals/snx.toml",
    "tomls/omnibus-sepolia/collaterals/weth.toml",
    "tomls/markets/legacy.toml",
    "tomls/markets/spot-factory.toml",
    "tomls/markets/spot/usde.toml",
    "tomls/pools/spartan-council.toml",
    "tomls/permit-all-createPool.toml",
    "tomls/permit-all-registerMarket.toml",
    "tomls/permit-all-transferCrossChain.toml",
]

[setting.salt]
defaultValue = "snaxtest"

[setting.snx_package]
defaultValue = "synthetix:3.8.0"

[setting.oracle_manager_package]
defaultValue = "oracle-manager:3.8.0"

[setting.spot_market_package]
defaultValue = "synthetix-spot-market:3.6.0"

[setting.legacy_market_package]
defaultValue = "synthetix-legacy-market:3.8.0"

[setting.susde_package]
defaultValue = "fake-susde-token"

depends = ["clone.susde_deploy"]

[setting.wsteth_package]
defaultValue = "fake-wsteth-token"

depends = ["clone.wsteth_deploy"]

[setting.owner]
defaultValue = "0x48914229deDd5A9922f44441ffCCfC2Cb7856Ee9"

[setting.snx_address]
defaultValue = "<%= imports.legacyMarket.imports.v2x.contracts.ProxySynthetix.address %>"

[setting.wsteth_aggregator_address]
defaultValue = "0xaaabb530434B0EeAAc9A42E25dbC6A22D7bE218E"

[setting.wsteth_chainlink_staleness_tolerance]
defaultValue = "86400"

[setting.eth_aggregator_address]
defaultValue = "0x694AA1769357215DE4FAC081bf1f309aDC325306"
description = "https://docs.chain.link/data-feeds/price-feeds/addresses/?network=ethereum&page=1"

[setting.weth_max_pool_collateral]
defaultValue = "<%= parseEther(String(20_000)) %>"

[setting.susde_aggregator_address]
defaultValue = "0x6f7be09227d98Ce1Df812d5Bc745c0c775507E92"

[setting.susde_chainlink_staleness_tolerance]
defaultValue = "86400"

[setting.usde_aggregator_address]
defaultValue = "0x55ec7c3ed0d7CB5DF4d3d8bfEd2ecaf28b4638fb"

[setting.usde_chainlink_staleness_tolerance]
defaultValue = "86400"

[setting.snx_aggregator_address]
defaultValue = "0xc0F82A46033b8BdBA4Bb0B0e28Bc2006F64355bC"

[setting.snx_chainlink_staleness_tolerance]
defaultValue = "86400"

[setting.snx_liquidation_reward]
defaultValue = "50000000000000000000"

[setting.weth_liquidation_reward]
defaultValue = "10000000000000000000"

[setting.minimum_liquidity_ratio]
defaultValue = "2000000000000000000"

[setting.account_timeout_withdraw]
defaultValue = "86400"

[setting.deployer]
defaultValue = "0x48914229deDd5A9922f44441ffCCfC2Cb7856Ee9"

[setting.pdao]
defaultValue = "0x48914229deDd5A9922f44441ffCCfC2Cb7856Ee9"

[setting.sc_pool_id]
defaultValue = "1"

[setting.pool_owner]
defaultValue = "0x48914229deDd5A9922f44441ffCCfC2Cb7856Ee9"

[setting.ccip_router]
defaultValue = "0xd0daae2231e9cb96b94c8512223533293c3693bf"

[setting.ccip_token_pool]
defaultValue = "0x9b65749b38278060c5787cce0391ac7f1094c8e8"

[setting.synthUsdeAsyncFixedFee]
defaultValue = "0"

[setting.synthUsdeSkewScale]
defaultValue = "0"

[setting.pythFeedUrl]
defaultValue = "https://api.synthetix.io/pyth-mainnet/api/get_vaa_ccip?data={data}"

[setting.pythUsdeFeedId]
defaultValue = "0x6ec879b1e9963de5ee97e9c8710b742d6228252a5e2ca12d4ae81d7fe5ee8c5d"

[setting.pyth_price_verification_address]
defaultValue = "0xDd24F84d36BF92C65F92307595335bdFab5Bbd21"

[setting.synth_usde_max_market_collateral]
defaultValue = "<%= parseEther('100000000') %>"

# we want to enable the spot market wrapper for usde
[clone.usde]
source = "mintable-token:2.0"
target = "fake-usde-token"
options.name = "Ethena USD (fake)"
options.symbol = "USDe"
options.owner = "<%= settings.deployer %>"

[clone.susde_deploy]
source = "mintable-token:2.0"
target = "fake-susde-token"
options.name = "Ethena Staked USD (fake)"
options.symbol = "sUSDe"
options.owner = "<%= settings.deployer %>"

[clone.wsteth_deploy]
source = "mintable-token:2.0"
target = "fake-wsteth-token"
options.name = "Lido Wrapped Staked ETH (fake)"
options.symbol = "WstETH"
options.owner = "<%= settings.deployer %>"

[invoke.SpotMarketProxy_setWrapper_usde]
target = ["spotFactory.SpotMarketProxy"]
fromCall.func = "getMarketOwner"
fromCall.args = ["<%= extras.synth_usde_market_id %>"]
func = "setWrapper"
args = [
    "<%= extras.synth_usde_market_id %>",
    "<%= imports.usde.contracts.Token.address %>",
    "<%= settings.synth_usde_max_market_collateral %>",
]

[provision.pyth_erc7412_wrapper]
source = "pyth-erc7412-wrapper:3.5.0"
targetPreset = "<%= settings.target_preset %>"
options.salt = "<%= settings.salt %>"
options.pythAddress = "<%= settings.pyth_price_verification_address %>"

# --- BFP configurations  -- #
#
#

[setting.bfp_market_package]
defaultValue = "synthetix-bfp-market:3.6.0"

# Collaterals configurations
#
[setting.snxusd_max_collateral]
defaultValue = "<%= parseEther(String(1_000_000)) %>"

[setting.weth_max_collateral]
defaultValue = "<%= parseEther(String(10_000)) %>"

[setting.snxusd_skew_scale]
defaultValue = "0" # skew scale is not used for sUSD.

[setting.weth_skew_scale]
defaultValue = "<%= parseEther(String(1_000_000)) %>"

# ETH market configurations
#
[setting.maker_fee]
defaultValue = "<%= parseEther('0.0001') %>"

[setting.taker_fee]
defaultValue = "<%= parseEther('0.0006') %>"

[setting.max_market_size]
defaultValue = "<%= parseEther(String(1000)) %>"

[setting.max_funding_velocity]
defaultValue = "<%= parseEther('3') %>"

[setting.skew_scale]
defaultValue = "<%= parseEther(String(1_000_000)) %>"

[setting.funding_velocity_clamp]
defaultValue = "<%= parseEther('0.0003') %>"

[setting.min_credit_percent]
defaultValue = "<%= parseEther('0.25') %>"

[setting.min_margin_usd]
defaultValue = "<%= parseEther('1000') %>"

[setting.min_margin_ratio]
defaultValue = "<%= parseEther('0.02') %>"

[setting.incremental_margin_scalar]
defaultValue = "<%= parseEther('1') %>"

[setting.maintenance_margin_scalar]
defaultValue = "<%= parseEther('0.3') %>"

[setting.max_initial_margin_ratio]
defaultValue = "<%= parseEther('0.9') %>"

[setting.liquidation_reward_percent]
defaultValue = "<%= parseEther('0.0005') %>"

[setting.liquidation_limit_scalar]
defaultValue = "<%= parseEther('1') %>"

[setting.liquidation_max_pd]
defaultValue = "<%= parseEther('0.0012') %>"

[setting.liquidation_window_duration]
defaultValue = "90"

[setting.min_keeper_fee_usd]
defaultValue = "<%= parseEther('10') %>"

[setting.max_keeper_fee_usd]
defaultValue = "<%= parseEther('100') %>"

# --- Provision bfp market --- #
#
#

[provision.bfp_market_factory]
source = "<%= settings.bfp_market_package %>"
targetPreset = "<%= settings.target_preset %>"
options.coreProxyOwner = "<%= settings.owner %>"
options.owner = "<%= settings.owner %>"
options.salt = "<%= settings.salt %>"
options.synthetixPackage = "<%= settings.snx_package %>@<%= settings.target_preset %>"
options.synthetixPreset = "<%= settings.target_preset %>"
depends = ["provision.system"]

# --- Provision fake collaterals --- #
#
#

# Create a mintable fake ETH for collateral
#

[provision.weth_mock_collateral]
source = "mintable-token:1.8"
options.name = "Fake WETH"
options.symbol = "fWETH"
options.owner = "<%= settings.owner %>"
options.decimals = "18"

# Set weth_address so that Core is configured with the fake WETH.
#
[setting.weth_address]
defaultValue = "<%= weth_mock_collateral.MintableToken.address %>"

# --- Configure bfp --- #
#
#

# Set pyth
#

[invoke.BfpMarketProxy_setPyth]
target = ["bfp_market_factory.BfpMarketProxy"]
fromCall.func = "owner"
func = "setPyth"
args = ["<%= settings.pyth_price_verification_address %>"]

# --- Add Rewards distributors --- #
#
[invoke.BfpMarketProxy_createRewardDistributor_weth]
target = ["bfp_market_factory.BfpMarketProxy"]
fromCall.func = "owner"
func = "createRewardDistributor"
extra.weth_rewards_distributor.event = "RewardDistributorCreated"
extra.weth_rewards_distributor.arg = 0

[[invoke.BfpMarketProxy_createRewardDistributor_weth.args]]
poolId = "<%= settings.sc_pool_id %>"
name = "weth RewardDistributor"
token = "<%= settings.weth_address %>"
collateralTypes = [
    "<%= settings.snx_address %>",
    "<%= imports.wsteth.contracts.Token.address %>",
    "<%= imports.susde.contracts.Token.address %>",
]

# --- Global Market configuration --- #
#
#

[invoke.BfpMarketProxy_setMarketConfiguration]
target = ["bfp_market_factory.BfpMarketProxy"]
fromCall.func = "owner"
func = "setMarketConfiguration"

[[invoke.BfpMarketProxy_setMarketConfiguration.args]]
pythPublishTimeMin = 12
pythPublishTimeMax = 60
minOrderAge = 12
maxOrderAge = 60
minKeeperFeeUsd = "<%= settings.min_keeper_fee_usd %>"
maxKeeperFeeUsd = "<%= settings.max_keeper_fee_usd %>"
keeperProfitMarginUsd = "<%= settings.keeper_profit_margin_usd %>"
keeperProfitMarginPercent = "<%= settings.keeper_profit_margin_percent %>"
keeperSettlementGasUnits = 1200000
keeperCancellationGasUnits = 600000
keeperFlagGasUnits = 1200000
keeperLiquidateMarginGasUnits = 1200000
keeperLiquidationGasUnits = 1200000
keeperLiquidationEndorsed = "<%= settings.deployer %>"                         # TODO, this is currently deployer, change to a keeper
collateralDiscountScalar = 1
minCollateralDiscount = "<%= settings.min_collateral_discount %>"
maxCollateralDiscount = "<%= parseEther('0.1') %>"
utilizationBreakpointPercent = "<%= parseEther('0.025') %>"
lowUtilizationSlopePercent = "<%= settings.low_utilization_slope_percent  %>"
highUtilizationSlopePercent = "<%= settings.high_utilization_slope_percent %>"

# --- Set eth oracle node id --- #
#
#

[invoke.BfpMarketProxy_setEthOracleNodeId]
target = ["bfp_market_factory.BfpMarketProxy"]
fromCall.func = "owner"
func = "setEthOracleNodeId"
args = ["<%= settings.eth_oracle_id %>"]

# --- Create Market --- #
#
#

[invoke.BfpMarketProxy_createMarket_eth]
target = ["bfp_market_factory.BfpMarketProxy"]
fromCall.func = "owner"
func = "createMarket"
args = [{ name = "<%= formatBytes32String('ETHPERP') %>", minDelegateTime = 86400 }]
extra.eth_market_id.event = "MarketCreated"
extra.eth_market_id.arg = 0

# --- Set Specific BFP Market Configuration --- #
#
#

[invoke.BfpMarketProxy_setMarketConfigurationById_eth]
target = ["bfp_market_factory.BfpMarketProxy"]
fromCall.func = "owner"
func = "setMarketConfigurationById"

[[invoke.BfpMarketProxy_setMarketConfigurationById_eth.args]]
oracleNodeId = "<%= settings.eth_oracle_id %>"
pythPriceFeedId = "0xff61491a931112ddf1bd8147cd1b641375f79f5825126d665480874634fd0ace" # https://pyth.network/developers/price-feed-ids#pyth-evm-mainnet"
marketId = "<%= settings.eth_market_id %>"
makerFee = "<%= settings.maker_fee %>"
takerFee = "<%= settings.taker_fee %>"
maxMarketSize = "<%= settings.max_market_size %>"
maxFundingVelocity = "<%= settings.max_funding_velocity %>"
skewScale = "<%= settings.skew_scale %>"
fundingVelocityClamp = "<%= settings.funding_velocity_clamp %>"
minCreditPercent = "<%= settings.min_credit_percent %>"
minMarginUsd = "<%= settings.min_margin_usd %>"
minMarginRatio = "<%= settings.min_margin_ratio %>"
incrementalMarginScalar = "<%= settings.incremental_margin_scalar %>"
maintenanceMarginScalar = "<%= settings.maintenance_margin_scalar %>"
maxInitialMarginRatio = "<%= settings.max_initial_margin_ratio %>"
liquidationRewardPercent = "<%= settings.liquidation_reward_percent %>"
liquidationLimitScalar = "<%= settings.liquidation_limit_scalar %>"
liquidationWindowDuration = "<%= settings.liquidation_window_duration %>"
liquidationMaxPd = "<%= settings.liquidation_max_pd %>"

[invoke.BfpMarketProxy_setMarginCollateralConfiguration]
target = ["bfp_market_factory.BfpMarketProxy"]
fromCall.func = "owner"
func = "setMarginCollateralConfiguration"
args = [
    [ # collateral addresses
        "<%= system.USDProxy.address %>",
        "<%= settings.weth_address %>",
    ],
    [ # oracle node ids
        "<%= imports.system.settings.const_one_oracle_id %>",
        "<%= settings.eth_oracle_id %>",
    ],
    [ # maxAllowances
        "<%= settings.snxusd_max_collateral %>",
        "<%= settings.weth_max_collateral %>",
    ],
    [ # skew_scales
        "<%= settings.snxusd_skew_scale %>",
        "<%= settings.weth_skew_scale %>",
    ],
    [ # rewardDistributors
        "0x0000000000000000000000000000000000000000",
        "<%= settings.weth_rewards_distributor %>",
    ],
]

# --- Enable all BFP features --- #
#
#

[invoke.BfpMarketProxy_enableAllFeatures]
target = ["bfp_market_factory.BfpMarketProxy"]
fromCall.func = "owner"
func = "enableAllFeatures"

# --- Configure maximum market collateral in Core --- #
#
#

[invoke.CoreProxy_configureMaximumMarketCollateral_weth]
target = ["system.CoreProxy"]
fromCall.func = "owner"
func = "configureMaximumMarketCollateral"
args = [
    "<%= settings.eth_market_id %>",
    "<%= settings.weth_address %>",
    "<%= settings.weth_max_pool_collateral %>",
]

# --- Register Reward Distributors with Core --- #
#
#

[invoke.CoreProxy_registerRewardsDistributor_weth]
target = ["system.CoreProxy"]
fromCall.func = "getPoolOwner"
fromCall.args = ["<%= settings.sc_pool_id %>"]
func = "registerRewardsDistributor"
args = [
    "<%= settings.sc_pool_id %>",
    "<%= settings.weth_address %>",
    "<%= settings.weth_rewards_distributor %>",
]
