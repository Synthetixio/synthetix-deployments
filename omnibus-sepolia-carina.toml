name = "synthetix-omnibus"
preset = "carina"
version = "1"
description = "Includes the full synthetix system with configurations applied"
include = [
    "tomls/settings.toml",
    "tomls/core.toml",
    "tomls/permissions.toml",
    "tomls/oracles/eth.toml",
    "tomls/collaterals/weth.toml",
    "tomls/collaterals/snx.toml",
    "tomls/pools/spartan-council.toml",
]

# --- pkg/import settings --- #
#
#

[setting.salt]
defaultValue = "carina"

[setting.target_preset]
defaultValue = "carina"

[setting.snx_package]
defaultValue = "synthetix:3.3.18"

[setting.bfp_market_package]
defaultValue = "synthetix-bfp-market:1.0.0-alpha.2"

[setting.wsteth_to_steth_ratio_oracle]
defaultValue = "wsteth-to-steth-ratio-oracle:3.3.18"

# --- Address settings --- #
#
#

[setting.owner]
defaultValue = "0x431D454Bd4d352A0b1f45AE11EF1182bBEec6a7B"

[setting.deployer]
defaultValue = "<%= settings.owner %>"

[setting.snx_address]
defaultValue = "0x29Ba9b0C440CE9e7B0E46138B5Fda83c22467006"
description = "https://github.com/Synthetixio/synthetix-docs/blob/master/content/addresses.md"

[setting.snx_aggregator_address]
defaultValue = "0xc0F82A46033b8BdBA4Bb0B0e28Bc2006F64355bC"
description = "https://docs.chain.link/data-feeds/price-feeds/addresses?network=ethereum&page=1#sepolia-testnet"

[setting.snx_chainlink_staleness_tolerance]
defaultValue = "3600"

[setting.weth_address]
defaultValue = "0x7b79995e5f793a07bc00c21412e50ecae098e7f9"

[setting.wsteth_address]
defaultValue = "0xb82381a3fbd3fafa77b3a7be693342618240067b"
description = "wstETH token address https://sepolia.etherscan.io/token/0xb82381a3fbd3fafa77b3a7be693342618240067b"

[setting.steth_aggregator_address]
defaultValue = "0x694AA1769357215DE4FAC081bf1f309aDC325306"
description = "https://docs.chain.link/data-feeds/price-feeds/addresses/?network=ethereum&page=1 is actually ETH/USD."

[setting.pyth_address]
defaultValue = "0xDd24F84d36BF92C65F92307595335bdFab5Bbd21"
description = "https://docs.pyth.network/price-feeds/contract-addresses/evm#testnets"

# --- Synthetix pool settings -- #
#
#

[setting.eth_aggregator_address]
defaultValue = "0x694AA1769357215DE4FAC081bf1f309aDC325306"
description = "https://docs.chain.link/data-feeds/price-feeds/addresses/?network=ethereum&page=1"

[setting.weth_liquidation_reward]
defaultValue = "<%= parseEther('10') %>"

[setting.minimum_liquidity_ratio]
defaultValue = "<%= parseEther('2') %>"

[setting.account_timeout_withdraw]
defaultValue = "86400"

[setting.sc_pool_id]
defaultValue = "1"

[setting.pool_owner]
defaultValue = "<%= settings.owner %>"

[setting.wsteth_issuance_ratio_d18]
defaultValue = "<%= parseEther('3') %>"

[setting.wsteth_liquidation_ratio_d18]
defaultValue = "<%= parseEther('1.5') %>"

[setting.wsteth_liquidation_reward_d18]
defaultValue = "<%= parseEther('0.01') %>"

[setting.wstethMinDelegationD18]
defaultValue = "<%= parseEther('0.01') %>"

# --- BFP configurations  -- #
#
#

# Collaterals
[setting.susd_max_collateral]
defaultValue = "<%= parseEther(String(100_000_000)) %>"

[setting.weth_max_collateral]
defaultValue = "<%= parseEther(String(1_000_000)) %>"

[setting.wsteth_max_collateral]
defaultValue = "<%= parseEther(String(1_000_000)) %>"

[setting.susd_skew_scale]
defaultValue = "0" # skew scale is not used for sUSD.

[setting.weth_skew_scale]
defaultValue = "<%= parseEther(String(1_000_000)) %>"

[setting.wsteth_skew_scale]
defaultValue = "<%= parseEther(String(1_000_000)) %>"

# Global market configurations
[setting.min_keeper_fee_usd]
defaultValue = "<%= parseEther('15') %>"

[setting.max_keeper_fee_usd]
defaultValue = "<%= parseEther('500') %>"

[setting.keeper_profit_margin_usd]
defaultValue = "<%= parseEther('20') %>"

[setting.keeper_profit_margin_percent]
defaultValue = "<%= parseEther('0.2') %>"

[setting.collateral_discount_scalar]
defaultValue = "<%= parseEther('1') %>"

[setting.min_collateral_discount]
defaultValue = "<%= parseEther('0.01') %>"

[setting.max_collateral_discount]
defaultValue = "<%= parseEther('0.05') %>"

[setting.utilization_breakpoint_percent]
defaultValue = "<%= parseEther('0.80') %>"

[setting.low_utilization_slope_percent]
defaultValue = "<%= parseEther('0.000025') %>"

[setting.high_utilization_slope_percent]
defaultValue = "<%= parseEther('0.01') %>"

# ETH market configurations
[setting.maker_fee]
defaultValue = "<%= parseEther('0.0002') %>"

[setting.taker_fee]
defaultValue = "<%= parseEther('0.0006') %>"

[setting.max_market_size]
defaultValue = "<%= parseEther(String(27_000)) %>"

[setting.max_funding_velocity]
defaultValue = "<%= parseEther('9') %>"

[setting.skew_scale]
defaultValue = "<%= parseEther(String(1_000_000)) %>"

[setting.funding_velocity_clamp]
defaultValue = "<%= parseEther('0.00001') %>"

[setting.min_credit_percent]
defaultValue = "<%= parseEther('1') %>"

[setting.min_margin_usd]
defaultValue = "<%= parseEther('500') %>"

[setting.min_margin_ratio]
defaultValue = "<%= parseEther('0.05') %>"

[setting.incremental_margin_scalar]
defaultValue = "<%= parseEther('1') %>"

[setting.maintenance_margin_scalar]
defaultValue = "<%= parseEther('0.5') %>"

[setting.max_initial_margin_ratio]
defaultValue = "<%= parseEther('0.9') %>"

[setting.liquidation_reward_percent]
defaultValue = "<%= parseEther('0.00002') %>"

[setting.liquidation_limit_scalar]
defaultValue = "<%= parseEther('1') %>"

[setting.liquidation_max_pd]
defaultValue = "<%= parseEther('0.0016') %>"

# --- Provision bfp market --- #
#
#

[provision.bfp_market_factory]
source = "<%= settings.bfp_market_package %>"
targetPreset = "<%= settings.target_preset %>"
options.coreProxyOwner = "<%= settings.owner %>"
options.owner = "<%= settings.owner %>"
options.salt = "<%= settings.salt %>"
options.synthetixPackage = "<%= settings.snx_package %>@<%= settings.target_preset %>"
options.synthetixPreset = "<%= settings.target_preset %>"
depends = ["provision.system"]

# --- Configure oracles for markets --- #
#
#

# wstETH/stETH oracle
[provision.wsteth_to_steth_ratio_oracle]
source = "<%= settings.wsteth_to_steth_ratio_oracle %>"
targetPreset = "<%= settings.target_preset %>"
options.wsteth = "<%= settings.wsteth_address %>"

[invoke.register_node_wsteth_to_steth_ratio_oracle]
target = ["system.oracle_manager.Proxy"]
func = "registerNode"
args = [
    # external node
    2,
    # contract
    "<%= defaultAbiCoder.encode(['address'], [imports.wsteth_to_steth_ratio_oracle.contracts.WstEthToStEthRatioOracle.address]) %>",
    [
    ],
]
extra.wsteth_to_steth_ratio_oracle_id.event = "NodeRegistered"
extra.wsteth_to_steth_ratio_oracle_id.arg = 0
depends = ["provision.wsteth_to_steth_ratio_oracle"]

# stETH/USD oracle
#
#
#
[invoke.register_node_steth_oracle_node]
target = ["system.oracle_manager.Proxy"]
func = "registerNode"
args = [
    # chainlink aggregator type
    3,
    # contract, twap, decimals
    "<%= defaultAbiCoder.encode(['address', 'uint256', 'uint8'], [settings.steth_aggregator_address, 0, 8]) %>",
    [
    ],
]
extra.steth_oracle_node_id.event = "NodeRegistered"
extra.steth_oracle_node_id.arg = 0
depends = ["provision.system"]

# wstETH/USD
[invoke.register_node_wsteth_oracle_node]
target = ["system.oracle_manager.Proxy"]
func = "registerNode"
args = [
    # reducer node
    1,
    # mulDecimal
    "<%= defaultAbiCoder.encode(['uint256'], [7]) %>",
    # stETH/USD, wstETH/stETH
    ["<%= settings.steth_oracle_node_id %>", "<%= settings.wsteth_to_steth_ratio_oracle_id %>"],
]
extra.wsteth_oracle_node_id.event = "NodeRegistered"
extra.wsteth_oracle_node_id.arg = 0

# --- Configure bfp --- #
#
#

# --- Set pyth --- #
#
#
#
[invoke.set_pyth]
target = ["bfp_market_factory.BfpMarketProxy"]
fromCall.func = "owner"
func = "setPyth"
args = ["<%= settings.pyth_address %>"]

# --- Add Rewards distributors --- #
#
#

[invoke.create_wsteth_rewards_distributor]
target = ["bfp_market_factory.BfpMarketProxy"]
fromCall.func = "owner"
func = "createRewardDistributor"
extra.wsteth_rewards_distributor.event = "RewardDistributorCreated"
extra.wsteth_rewards_distributor.arg = 0

[[invoke.create_wsteth_rewards_distributor.args]]
poolId = "<%= settings.sc_pool_id %>"
name = "wsteth RewardDistributor"
token = "<%= settings.wsteth_address %>"
collateralTypes = [
    "<%= settings.wsteth_address %>",
    "<%= settings.weth_address %>",
    "<%= settings.snx_address %>",
]

[invoke.create_weth_rewards_distributor]
target = ["bfp_market_factory.BfpMarketProxy"]
fromCall.func = "owner"
func = "createRewardDistributor"
extra.weth_rewards_distributor.event = "RewardDistributorCreated"
extra.weth_rewards_distributor.arg = 0

[[invoke.create_weth_rewards_distributor.args]]
poolId = "<%= settings.sc_pool_id %>"
name = "weth RewardDistributor"
token = "<%= settings.weth_address %>"
collateralTypes = [
    "<%= settings.wsteth_address %>",
    "<%= settings.weth_address %>",
    "<%= settings.snx_address %>",
]

# --- Global Market configuration --- #
#
#

[invoke.set_global_market_configuration]
target = ["bfp_market_factory.BfpMarketProxy"]
fromCall.func = "owner"
func = "setMarketConfiguration"

[[invoke.set_global_market_configuration.args]]
pythPublishTimeMin = 12
pythPublishTimeMax = 60
minOrderAge = 12
maxOrderAge = 60
minKeeperFeeUsd = "<%= settings.min_keeper_fee_usd %>"
maxKeeperFeeUsd = "<%= settings.max_keeper_fee_usd %>"
keeperProfitMarginUsd = "<%= settings.keeper_profit_margin_usd %>"
keeperProfitMarginPercent = "<%= settings.keeper_profit_margin_percent %>"
keeperSettlementGasUnits = 1200000
keeperCancellationGasUnits = 600000
keeperFlagGasUnits = 1200000
keeperLiquidateMarginGasUnits = 1200000
keeperLiquidationGasUnits = 1200000
keeperLiquidationEndorsed = "<%= settings.deployer %>"                          # TODO, this is currently owner, change to a keeper
collateralDiscountScalar = "<%= settings.collateral_discount_scalar %>"
minCollateralDiscount = "<%= settings.min_collateral_discount %>"
maxCollateralDiscount = "<%= settings.max_collateral_discount %>"
utilizationBreakpointPercent = "<%= settings.utilization_breakpoint_percent %>"
lowUtilizationSlopePercent = "<%= settings.low_utilization_slope_percent  %>"
highUtilizationSlopePercent = "<%= settings.high_utilization_slope_percent %>"

# --- Set eth oracle node id --- #
#
#
#
[invoke.set_eth_oracle_node_id]
target = ["bfp_market_factory.BfpMarketProxy"]
fromCall.func = "owner"
func = "setEthOracleNodeId"
args = ["<%= settings.eth_oracle_id %>"]

# --- Create Market --- #
#
#
#
[invoke.create_market]
target = ["bfp_market_factory.BfpMarketProxy"]
fromCall.func = "owner"
func = "createMarket"
args = [{ name = "<%= formatBytes32String('ETHPERP') %>" }]
extra.eth_market_id.event = "MarketCreated"
extra.eth_market_id.arg = 0

# --- Set Specific BFP Market Configuration --- #
#
#

[invoke.set_eth_market_configuration]
target = ["bfp_market_factory.BfpMarketProxy"]
fromCall.func = "owner"
func = "setMarketConfigurationById"

[[invoke.set_eth_market_configuration.args]]
marketId = "<%= settings.eth_market_id %>"
oracleNodeId = "<%= settings.eth_oracle_id %>"
pythPriceFeedId = "0xff61491a931112ddf1bd8147cd1b641375f79f5825126d665480874634fd0ace" # https://pyth.network/developers/price-feed-ids#pyth-evm-mainnet"
makerFee = "<%= settings.maker_fee %>"
takerFee = "<%= settings.taker_fee %>"
maxMarketSize = "<%= settings.max_market_size %>"
maxFundingVelocity = "<%= settings.max_funding_velocity %>"
skewScale = "<%= settings.skew_scale %>"
fundingVelocityClamp = "<%= settings.funding_velocity_clamp %>"
minCreditPercent = "<%= settings.min_credit_percent %>"
minMarginUsd = "<%= settings.min_margin_usd %>"
minMarginRatio = "<%= settings.min_margin_ratio %>"
incrementalMarginScalar = "<%= settings.incremental_margin_scalar %>"
maintenanceMarginScalar = "<%= settings.maintenance_margin_scalar %>"
maxInitialMarginRatio = "<%= settings.max_initial_margin_ratio %>"
liquidationRewardPercent = "<%= settings.liquidation_reward_percent %>"
liquidationLimitScalar = "<%= settings.liquidation_limit_scalar %>"
liquidationWindowDuration = 30
liquidationMaxPd = "<%= settings.liquidation_max_pd %>"

# --- Configure collateral for BFP --- #
#
#

[invoke.set_margin_collateral_configuration]
target = ["bfp_market_factory.BfpMarketProxy"]
fromCall.func = "owner"
func = "setMarginCollateralConfiguration"
args = [
    [ # collateral addresses
        "<%= system.USDProxy.address %>",
        "<%= settings.weth_address %>",
        "<%= settings.wsteth_address %>",
    ],
    [ # oracle node ids
        "<%= imports.system.settings.const_one_oracle_id %>",
        "<%= settings.eth_oracle_id %>",
        "<%= settings.wsteth_oracle_node_id %>",
    ],
    [ # maxAllowances
        "<%= settings.susd_max_collateral %>",
        "<%= settings.weth_max_collateral %>",
        "<%= settings.wsteth_max_collateral %>",
    ],
    [ # skew_scales
        "<%= settings.susd_skew_scale %>",
        "<%= settings.weth_skew_scale %>",
        "<%= settings.wsteth_skew_scale %>",
    ],
    [ # rewardDistributors
        "0x0000000000000000000000000000000000000000",
        "<%= settings.weth_rewards_distributor %>",
        "<%= settings.wsteth_rewards_distributor %>",
    ],
]

# --- Configure Core --- #
#
#

# Add all perp market collateral as core collateral.
# ETH and SNX have already been added from imports.
#
#
#
[invoke.configure_wsteth_collateral]
target = ["system.CoreProxy"]
fromCall.func = "owner"
func = "configureCollateral"

[[invoke.configure_wsteth_collateral.args]]
tokenAddress = "<%= settings.wsteth_address %>"
oracleNodeId = "<%= settings.wsteth_oracle_node_id %>"
issuanceRatioD18 = "<%= settings.wsteth_issuance_ratio_d18 %>"
liquidationRatioD18 = "<%= settings.wsteth_liquidation_ratio_d18 %>"
liquidationRewardD18 = "<%= settings.wsteth_liquidation_reward_d18 %>"
minDelegationD18 = "<%= settings.wstethMinDelegationD18 %>"
depositingEnabled = false

# --- Configure maximum market collateral in Core --- #
#
#

[invoke.weth_maximum_market_collateral]
target = ["system.CoreProxy"]
fromCall.func = "owner"
func = "configureMaximumMarketCollateral"
args = [
    "<%= settings.eth_market_id %>",
    "<%= settings.weth_address %>",
    "<%= settings.weth_max_collateral %>",
]

[invoke.wsteth_maximum_market_collateral]
target = ["system.CoreProxy"]
fromCall.func = "owner"
func = "configureMaximumMarketCollateral"
args = [
    "<%= settings.eth_market_id %>",
    "<%= settings.wsteth_address %>",
    "<%= settings.wsteth_max_collateral %>",
]

# --- Register Reward Distributors with Core --- #
#
#

[invoke.register_wsteth_rewards_distributor]
target = ["system.CoreProxy"]
fromCall.func = "getPoolOwner"
fromCall.args = ["<%= settings.sc_pool_id %>"]
func = "registerRewardsDistributor"
args = [
    "<%= settings.sc_pool_id %>",
    "<%= settings.wsteth_address %>",
    "<%= settings.wsteth_rewards_distributor %>",
]

[invoke.register_weth_rewards_distributor]
target = ["system.CoreProxy"]
fromCall.func = "getPoolOwner"
fromCall.args = ["<%= settings.sc_pool_id %>"]
func = "registerRewardsDistributor"
args = [
    "<%= settings.sc_pool_id %>",
    "<%= settings.weth_address %>",
    "<%= settings.weth_rewards_distributor %>",
]

# --- Configure SC pool after market creation--- #
#
#

[invoke.set_pool_configuration_sc]
target = ["system.CoreProxy"]
fromCall.func = "getPoolOwner"
fromCall.args = ["<%= settings.sc_pool_id %>"]
func = "setPoolConfiguration"
args = [
    "<%= settings.sc_pool_id %>",
    [
        { marketId = "<%= settings.eth_market_id %>", weightD18 = 1, maxDebtShareValueD18 = "<%= parseEther('1') %>" },
    ],
]
