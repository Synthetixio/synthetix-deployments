[var.eth_spot_settings]
synth_eth_max_collateral_amount = "<%= parseEther(String(1_000)) %>"
synth_eth_skew_scale = "<%= parseEther(String(350_000)) %>"

[invoke.SpotMarketProxy_createSynth_eth]
target = ["spotFactory.SpotMarketProxy"]
from = "<%= settings.pdao %>"
func = "createSynth"
args = ["Synthetic Ether", "sETH", "<%= settings.owner %>"]
extra.synth_eth_market_id.event = "SynthRegistered"
extra.synth_eth_market_id.arg = 0
extra.synth_eth_token_address.event = "SynthRegistered"
extra.synth_eth_token_address.arg = 1
depends = ["invoke.SpotMarketProxy_addToFeatureFlagAllowlist_createSynth_pdao"]

[invoke.SpotMarketProxy_updatePriceData_eth]
target = ["spotFactory.SpotMarketProxy"]
fromCall.func = "getMarketOwner"
fromCall.args = ["<%= extras.synth_eth_market_id %>"]
func = "updatePriceData"
args = [
    "<%= extras.synth_eth_market_id %>",
    "<%= extras.eth_oracle_id %>",
    "<%= extras.eth_oracle_id %>",
    "<%= settings.big_cap_strict_staleness_tolerance %>",
]

# WETH is already configured but we will set the max market collateral
[invoke.CoreProxy_configureMaximumMarketCollateral_WETH]
target = ["system.CoreProxy"]
fromCall.func = "owner"
fromCall.args = []
func = "configureMaximumMarketCollateral"
args = [
    "<%= extras.synth_eth_market_id %>",
    "<%= settings.weth_address %>",
    "<%= settings.synth_eth_max_collateral_amount %>",
]

[invoke.SpotMarketProxy_setMarketSkewScale_eth]
target = ["spotFactory.SpotMarketProxy"]
fromCall.func = "getMarketOwner"
fromCall.args = ["<%= extras.synth_eth_market_id %>"]
func = "setMarketSkewScale"
args = ["<%= extras.synth_eth_market_id %>", "<%= settings.synth_eth_skew_scale %>"]

[invoke.SpotMarketProxy_setWrapper_eth]
target = ["spotFactory.SpotMarketProxy"]
fromCall.func = "getMarketOwner"
fromCall.args = ["<%= extras.synth_eth_market_id %>"]
func = "setWrapper"
args = [
    "<%= extras.synth_eth_market_id %>",
    "<%= settings.weth_address %>",
    "<%= settings.synth_eth_max_collateral_amount %>",
]

[invoke.SpotMarketProxy_addSettlementStrategy_eth]
target = ["spotFactory.SpotMarketProxy"]
fromCall.func = "getMarketOwner"
fromCall.args = ["<%= extras.synth_eth_market_id %>"]
func = "addSettlementStrategy"
args = [
    "<%= extras.synth_eth_market_id %>",
    { strategyType = "1", settlementDelay = "0", settlementWindowDuration = "1", priceVerificationContract = "0x0000000000000000000000000000000000000000", feedId = "0x0000000000000000000000000000000000000000000000000000000000000000", url = "", settlementReward = 0, minimumUsdExchangeAmount = "0", maxRoundingLoss = "1", priceDeviationTolerance = "0", disabled = false },
]
extra.synth_eth_settlement_strategy_id.event = "SettlementStrategyAdded"
extra.synth_eth_settlement_strategy_id.arg = 1

[invoke.SpotMarketProxy_setSettlementStrategy_eth]
target = ["spotFactory.SpotMarketProxy"]
fromCall.func = "getMarketOwner"
fromCall.args = ["<%= extras.synth_eth_market_id %>"]
func = "setSettlementStrategy"
args = [
    "<%= extras.synth_eth_market_id %>",
    "<%= extras.synth_eth_settlement_strategy_id %>",
    { strategyType = "1", settlementDelay = "<%= settings.big_cap_settlement_delay %>", settlementWindowDuration = "<%= settings.big_cap_settlement_window_duration %>", priceVerificationContract = "<%= imports.pyth_erc7412_wrapper.contracts.PythERC7412Wrapper.address %>", feedId = "<%= settings.pyth_feed_id_eth %>", url = "<%= settings.pyth_feed_url %>", settlementReward = "<%= settings.settlement_reward %>", minimumUsdExchangeAmount = "<%= settings.settlement_minimum_usd_exchange_amount %>", maxRoundingLoss = "<%= settings.settlement_max_rounding_loss %>", priceDeviationTolerance = "<%= settings.price_deviation_tolerance %>", disabled = true },
]

[invoke.CoreProxy_configureCollateral_sETH]
target = ["system.CoreProxy"]
fromCall.func = "owner"
func = "configureCollateral"  # "args" see below in the multiline block

[[invoke.CoreProxy_configureCollateral_sETH.args]]
tokenAddress = "<%= extras.synth_eth_token_address %>"
oracleNodeId = "<%= extras.eth_oracle_id %>"
issuanceRatioD18 = "<%= parseEther('2') %>"
liquidationRatioD18 = "<%= parseEther('1.1') %>"
liquidationRewardD18 = "<%= parseEther('1') %>"
minDelegationD18 = "<%= parseEther('1') %>"
depositingEnabled = false

[invoke.CoreProxy_configureMaximumMarketCollateral_sETH]
target = ["system.CoreProxy"]
fromCall.func = "owner"
fromCall.args = []
func = "configureMaximumMarketCollateral"
args = [
    "<%= imports.perpsFactory.extras.superMarketId %>",
    "<%= extras.synth_eth_token_address %>",
    "<%= settings.synth_eth_max_collateral_amount %>",
]

[invoke.SpotMarketProxy_setAtomicFixedFee_sETH]
target = ["spotFactory.SpotMarketProxy"]
fromCall.func = "getMarketOwner"
fromCall.args = ["<%= extras.synth_eth_market_id %>"]
func = "setAtomicFixedFee"
args = ["<%= extras.synth_eth_market_id %>", "<%= parseEther(String(0.30)) %>"]

[invoke.SpotMarketProxy_setCollateralLeverage_sETH]
target = ["spotFactory.SpotMarketProxy"]
fromCall.func = "getMarketOwner"
fromCall.args = ["<%= extras.synth_eth_market_id %>"]
func = "setCollateralLeverage"
args = ["<%= extras.synth_eth_market_id %>", "<%= parseEther('10') %>"]
