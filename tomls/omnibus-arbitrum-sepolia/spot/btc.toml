[var.btc_spot_settings]
synth_btc_max_collateral_amount = "75"
synth_btc_skew_scale = "3500"

[provision.btc_mock_collateral]
source = "mintable-token:1.8"
target = "synthetix-mock-tokens:1.8@btc"
options.name = "Fake BTC Coin"
options.symbol = "fBTC"
options.owner = "<%= settings.owner %>"
options.decimals = "18"

[setting.btc_address]
defaultValue = "<%= imports.btc_mock_collateral.contracts.MintableToken.address %>"
description = "Mock usdc address"

[invoke.SpotMarketProxy_createSynth_btc]
target = ["spotFactory.SpotMarketProxy"]
fromCall.func = "owner"
func = "createSynth"
args = ["Synthetic Bitcoin", "sBTC", "<%= settings.owner %>"]
extra.synth_btc_market_id.event = "SynthRegistered"
extra.synth_btc_market_id.arg = 0
extra.synth_btc_token_address.event = "SynthRegistered"
extra.synth_btc_token_address.arg = 1

[invoke.SpotMarketProxy_updatePriceData_btc]
target = ["spotFactory.SpotMarketProxy"]
fromCall.func = "getMarketOwner"
fromCall.args = ["<%= extras.synth_btc_market_id %>"]
func = "updatePriceData"
args = [
    "<%= extras.synth_btc_market_id %>",
    "<%= extras.btc_oracle_id %>",
    "<%= extras.btc_oracle_id %>",
    "<%= settings.big_cap_strict_staleness_tolerance %>",
]

[invoke.SpotMarketProxy_setMarketSkewScale_btc]
target = ["spotFactory.SpotMarketProxy"]
fromCall.func = "getMarketOwner"
fromCall.args = ["<%= extras.synth_eth_market_id %>"]
func = "setMarketSkewScale"
args = ["<%= extras.synth_btc_market_id %>", "<%= parseEther(settings.synth_btc_skew_scale) %>"]
depends = ['var.btc_spot_settings']

[invoke.SpotMarketProxy_setWrapper_btc]
target = ["spotFactory.SpotMarketProxy"]
fromCall.func = "getMarketOwner"
fromCall.args = ["<%= extras.synth_btc_market_id %>"]
func = "setWrapper"
args = [
    "<%= extras.synth_btc_market_id %>",
    "<%= settings.btc_address %>",
    "<%= parseEther(settings.synth_btc_max_collateral_amount) %>",
]
depends = ['var.btc_spot_settings']

[invoke.SpotMarketProxy_addSettlementStrategy_btc]
target = ["spotFactory.SpotMarketProxy"]
fromCall.func = "getMarketOwner"
fromCall.args = ["<%= extras.synth_btc_market_id %>"]
func = "addSettlementStrategy"
args = [
    "<%= extras.synth_btc_market_id %>",
    { strategyType = "1", settlementDelay = "0", settlementWindowDuration = "1", priceVerificationContract = "0x0000000000000000000000000000000000000000", feedId = "0x0000000000000000000000000000000000000000000000000000000000000000", url = "", settlementReward = 0, minimumUsdExchangeAmount = "0", maxRoundingLoss = "1", priceDeviationTolerance = "0", disabled = false },
]
extra.synth_btc_settlement_strategy_id.event = "SettlementStrategyAdded"
extra.synth_btc_settlement_strategy_id.arg = 1

[invoke.SpotMarketProxy_setSettlementStrategy_sBTC]
target = ["spotFactory.SpotMarketProxy"]
fromCall.func = "getMarketOwner"
fromCall.args = ["<%= extras.synth_btc_market_id %>"]
func = "setSettlementStrategy"
args = [
    "<%= extras.synth_btc_market_id %>",
    "<%= extras.synth_btc_settlement_strategy_id %>",
    { strategyType = "1", settlementDelay = "<%= settings.big_cap_settlement_delay %>", settlementWindowDuration = "<%= settings.big_cap_settlement_window_duration %>", priceVerificationContract = "<%= imports.pyth_erc7412_wrapper.contracts.PythERC7412Wrapper.address %>", feedId = "<%= settings.pyth_feed_id_btc %>", url = "<%= settings.pyth_feed_url %>", settlementReward = "<%= settings.settlement_reward %>", minimumUsdExchangeAmount = "<%= settings.settlement_minimum_usd_exchange_amount %>", maxRoundingLoss = "<%= settings.settlement_max_rounding_loss %>", priceDeviationTolerance = "<%= settings.price_deviation_tolerance %>", disabled = false },
]

[invoke.CoreProxy_configureCollateral_wBTC]
target = ["system.CoreProxy"]
fromCall.func = "owner"
func = "configureCollateral"
args = [
    { tokenAddress = "<%= settings.btc_address %>", oracleNodeId = "<%= extras.btc_oracle_id %>", issuanceRatioD18 = "<%= parseEther('2') %>", liquidationRatioD18 = "<%= parseEther('1.1') %>", liquidationRewardD18 = "<%= parseEther('0.5') %>", minDelegationD18 = "<%= parseEther('0.5') %>", depositingEnabled = false },
]

[invoke.CoreProxy_configureMaximumMarketCollateral_wBTC]
target = ["system.CoreProxy"]
fromCall.func = "owner"
fromCall.args = []
func = "configureMaximumMarketCollateral"
args = [
    "<%= extras.synth_btc_market_id %>",
    "<%= settings.btc_address %>",
    "<%= parseEther(settings.synth_btc_max_collateral_amount) %>",
]

[invoke.CoreProxy_configureCollateral_sBTC]
target = ["system.CoreProxy"]
fromCall.func = "owner"
func = "configureCollateral"
args = [
    { tokenAddress = "<%= extras.synth_btc_token_address %>", oracleNodeId = "<%= extras.btc_oracle_id %>", issuanceRatioD18 = "<%= parseEther('2') %>", liquidationRatioD18 = "<%= parseEther('1.1') %>", liquidationRewardD18 = "<%= parseEther('0.5') %>", minDelegationD18 = "<%= parseEther('0.5') %>", depositingEnabled = false },
]

[invoke.CoreProxy_configureMaximumMarketCollateral_sBTC]
target = ["system.CoreProxy"]
fromCall.func = "owner"
fromCall.args = []
func = "configureMaximumMarketCollateral"
args = [
    "<%= imports.perpsFactory.extras.superMarketId %>",
    "<%= extras.synth_btc_token_address %>",
    "<%= parseEther(settings.synth_btc_max_collateral_amount) %>",
]
