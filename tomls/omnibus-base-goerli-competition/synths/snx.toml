include = ["../../oracles/synths/snx.toml"]

# Synth Configuration
[setting.synthSnxAsyncFixedFee]
defaultValue = "0.001"

[setting.synthSnxSkewScale]
defaultValue = "4000000"

[invoke.setPerpsProxyCustomTransactorOnSnxSynthMarket]
target = ["spotFactory.SpotMarketProxy"]
fromCall.func = "getMarketOwner"
fromCall.args = ["<%= extras.synth_snx_market_id %>"]
func = "setCustomTransactorFees"
args = [
    "<%= extras.synth_snx_market_id %>",
    "<%= imports.perpsFactory.contracts.PerpsMarketProxy.address %>",
    "<%= parseEther(settings.synthSnxAsyncFixedFee) %>",
]
depends = ["provision.perpsFactory", "invoke.createSnxSynth"]

[invoke.setExternalNodeCustomTransactorOnSnxSynthMarket]
target = ["spotFactory.SpotMarketProxy"]
fromCall.func = "getMarketOwner"
fromCall.args = ["<%= extras.synth_snx_market_id %>"]
func = "setCustomTransactorFees"
args = [
    "<%= extras.synth_snx_market_id %>",
    "<%= settings.spotMarketExternalNodeAddress %>",
    "<%= parseEther(settings.synthSnxAsyncFixedFee) %>",
]
depends = ["provision.perpsFactory", "invoke.createSnxSynth"]

[invoke.configuresSNXCollateral]
target = ["system.CoreProxy"]
fromCall.func = "owner"
func = "configureCollateral"
args = [
    { tokenAddress = "<%= extras.synth_snx_token_address %>", oracleNodeId = "<%= extras.synth_snx_oracle_id %>", issuanceRatioD18 = "<%= parseEther('2') %>", liquidationRatioD18 = "<%= parseEther('1.1') %>", liquidationRewardD18 = "<%= parseEther('0.5') %>", minDelegationD18 = "<%= parseEther('0.5') %>", depositingEnabled = false },
]
depends = ["invoke.setSynthPriceSnx", "invoke.registerSynthSnxOracleNode"]

[invoke.setSynthSnxMaxMarketCollateral]
target = ["system.CoreProxy"]
fromCall.func = "owner"
fromCall.args = []
func = "configureMaximumMarketCollateral"
args = [
    "<%= imports.perpsFactory.extras.superMarketId %>",
    "<%= extras.synth_snx_token_address %>",
    "<%= parseEther(settings.perpsSnxMaxMarketSize) %>",
]
depends = ["invoke.createSnxSynth", "provision.perpsFactory"]
