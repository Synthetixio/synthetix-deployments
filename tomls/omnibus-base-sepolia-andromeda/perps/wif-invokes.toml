[setting.perpsWifMarketId]

[setting.perpsWifSkewScale]

[setting.perpsWifMaxFundingVelocity]

[setting.perpsWifMakerFeeRatio]

[setting.perpsWifTakerFeeRatio]

[setting.perpsWifMaxMarketSize]

[setting.perpsWifInitialMarginRatio]

[setting.perpsWifMaintenanceMarginFraction]

[setting.perpsWifFlagRewardRatioD18]

[setting.perpsWifMaxLiquidationLimitAccumulationMultiplier]

[setting.perpsWifMaxSecondsInLiquidationWindow]

[setting.perpsWifMaxLiquidationPd]

[setting.perpsWifEndorsedLiquidator]

[setting.perpsWifMinimumPositionMargin]

[setting.perpsWifLockedOiRatio]

[invoke.createWifPerpsMarket]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "createMarket"
args = ["<%= settings.perpsWifMarketId %>", "Wif", "WIF"]

[invoke.setPerpsPriceWif]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "updatePriceData"
args = [
    "<%= settings.perpsWifMarketId %>",
    "<%= extras.wif_oracle_id %>",
    "<%= settings.bigCapStrictStalenessTolerance %>",
]
depends = ["invoke.createWifPerpsMarket"]

# Do not modify this step. Edit [invoke.setPerpsWifSettlementStrategy] instead.
[invoke.addPerpsWifSettlementStrategy]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "addSettlementStrategy"
args = [
    "<%= settings.perpsWifMarketId %>",
    { strategyType = "0", settlementDelay = "0", settlementWindowDuration = "1", priceVerificationContract = "0x0000000000000000000000000000000000000000", feedId = "0x0000000000000000000000000000000000000000000000000000000000000000", settlementReward = "0", disabled = false, commitmentPriceDelay = "0" },
]
extra.wif_pyth_settlement_strategy.event = "SettlementStrategyAdded"
extra.wif_pyth_settlement_strategy.arg = 2
depends = ["invoke.createWifPerpsMarket"]

[invoke.setPerpsWifSettlementStrategy]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setSettlementStrategy"
args = [
    "<%= settings.perpsWifMarketId %>",
    "<%= extras.wif_pyth_settlement_strategy %>",                                                                                                                                                                                                                                                                                                                                                                                                                         # Settlement Strategy ID
    { strategyType = "0", settlementDelay = "<%= settings.bigCapSettlementDelay %>", settlementWindowDuration = "<%= settings.bigCapSettlementWindowDuration %>", priceVerificationContract = "<%= imports.pyth_erc7412_wrapper.contracts.PythERC7412Wrapper.address %>", feedId = "<%= settings.pythWifFeedId %>", settlementReward = "<%= parseEther(settings.settlementReward) %>", disabled = false, commitmentPriceDelay = "<%= settings.commitmentPriceDelay %>" },
]
depends = [
    'provision.perpsFactory',
    'setting.perpsWifMarketId',
    'invoke.addPerpsWifSettlementStrategy',
    'provision.pyth_erc7412_wrapper',
    'setting.bigCapSettlementDelay',
    'setting.bigCapSettlementWindowDuration',
    'setting.pythWifFeedId',
    'setting.settlementReward',
    'setting.commitmentPriceDelay',
]

[invoke.setPerpsWifFundingParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setFundingParameters"
args = [
    "<%= settings.perpsWifMarketId %>",
    "<%= parseEther(settings.perpsWifSkewScale) %>",
    "<%= parseEther(settings.perpsWifMaxFundingVelocity) %>",
]
depends = ["invoke.createWifPerpsMarket"]

[invoke.setPerpsWifOrderFees]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setOrderFees"
args = [
    "<%= settings.perpsWifMarketId %>",
    "<%= parseEther(settings.perpsWifMakerFeeRatio) %>",
    "<%= parseEther(settings.perpsWifTakerFeeRatio) %>",
]
depends = ["invoke.createWifPerpsMarket"]

[invoke.setPerpsWifMaxMarketSize]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketSize"
args = ["<%= settings.perpsWifMarketId %>", "<%= parseEther(settings.perpsWifMaxMarketSize) %>"]
depends = ["invoke.createWifPerpsMarket"]

[invoke.setPerpsWifMaxMarketValue]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketValue"
args = ["<%= settings.perpsWifMarketId %>", "<%= parseEther(settings.perpsWifMaxMarketValue) %>"]
depends = ["invoke.createWifPerpsMarket"]

[invoke.setPerpsWifMaxLiquidationParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxLiquidationParameters"
args = [
    "<%= settings.perpsWifMarketId %>",
    "<%= parseEther(settings.perpsWifMaxLiquidationLimitAccumulationMultiplier) %>",
    "<%= settings.perpsWifMaxSecondsInLiquidationWindow %>",
    "<%= parseEther(settings.perpsWifMaxLiquidationPd) %>",
    "<%= settings.perpsWifEndorsedLiquidator %>",
]
depends = ["invoke.createWifPerpsMarket"]

[invoke.setPerpsWifLiquidationParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLiquidationParameters"
args = [
    "<%= settings.perpsWifMarketId %>",
    "<%= parseEther(settings.perpsWifInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsWifMinimumInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsWifMaintenanceMarginScalar) %>",
    "<%= parseEther(settings.perpsWifFlagRewardRatioD18) %>",
    "<%= parseEther(settings.perpsWifMinimumPositionMargin) %>",
]
depends = ["invoke.createWifPerpsMarket"]

[invoke.setPerpsWifLockedOiRatio]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLockedOiRatio"
args = ["<%= settings.perpsWifMarketId %>", "<%= parseEther(settings.perpsWifLockedOiRatio) %>"]
depends = ["invoke.createWifPerpsMarket"]
