[setting.perpsAptMarketId]

[setting.perpsAptSkewScale]

[setting.perpsAptMaxFundingVelocity]

[setting.perpsAptMakerFeeRatio]

[setting.perpsAptTakerFeeRatio]

[setting.perpsAptMaxMarketSize]

[setting.perpsAptInitialMarginRatio]

[setting.perpsAptMaintenanceMarginFraction]

[setting.perpsAptFlagRewardRatioD18]

[setting.perpsAptMaxLiquidationLimitAccumulationMultiplier]

[setting.perpsAptMaxSecondsInLiquidationWindow]

[setting.perpsAptMaxLiquidationPd]

[setting.perpsAptEndorsedLiquidator]

[setting.perpsAptMinimumPositionMargin]

[setting.perpsAptLockedOiRatio]

[invoke.createAptPerpsMarket]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "createMarket"
args = ["<%= settings.perpsAptMarketId %>", "Aptos", "APT"]

[invoke.setPerpsPriceApt]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "updatePriceData"
args = [
    "<%= settings.perpsAptMarketId %>",
    "<%= extras.apt_oracle_id %>",
    "<%= settings.bigCapStrictStalenessTolerance %>",
]
depends = ["invoke.createAptPerpsMarket"]

# Do not modify this step. Edit [invoke.setPerpsAptSettlementStrategy] instead.
[invoke.addPerpsAptSettlementStrategy]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "addSettlementStrategy"
args = [
    "<%= settings.perpsAptMarketId %>",
    { strategyType = "0", settlementDelay = "0", settlementWindowDuration = "1", priceVerificationContract = "0x0000000000000000000000000000000000000000", feedId = "0x0000000000000000000000000000000000000000000000000000000000000000", settlementReward = "0", disabled = false, commitmentPriceDelay = "0" },
]
extra.apt_pyth_settlement_strategy.event = "SettlementStrategyAdded"
extra.apt_pyth_settlement_strategy.arg = 2
depends = ["invoke.createAptPerpsMarket"]

[invoke.setPerpsAptSettlementStrategy]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setSettlementStrategy"
args = [
    "<%= settings.perpsAptMarketId %>",
    "<%= extras.apt_pyth_settlement_strategy %>",                                                                                                                                                                                                                                                                                                                                                                                                                         # Settlement Strategy ID
    { strategyType = "0", settlementDelay = "<%= settings.bigCapSettlementDelay %>", settlementWindowDuration = "<%= settings.bigCapSettlementWindowDuration %>", priceVerificationContract = "<%= imports.pyth_erc7412_wrapper.contracts.PythERC7412Wrapper.address %>", feedId = "<%= settings.pythAptFeedId %>", settlementReward = "<%= parseEther(settings.settlementReward) %>", disabled = false, commitmentPriceDelay = "<%= settings.commitmentPriceDelay %>" },
]
depends = [
    'provision.perpsLowCapFactory',
    'setting.perpsAptMarketId',
    'invoke.addPerpsAptSettlementStrategy',
    'provision.pyth_erc7412_wrapper',
    'setting.bigCapSettlementDelay',
    'setting.bigCapSettlementWindowDuration',
    'setting.pythAptFeedId',
    'setting.settlementReward',
    'setting.commitmentPriceDelay',
]
[invoke.setPerpsAptFundingParameters]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setFundingParameters"
args = [
    "<%= settings.perpsAptMarketId %>",
    "<%= parseEther(settings.perpsAptSkewScale) %>",
    "<%= parseEther(settings.perpsAptMaxFundingVelocity) %>",
]
depends = ["invoke.createAptPerpsMarket"]

[invoke.setPerpsAptOrderFees]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setOrderFees"
args = [
    "<%= settings.perpsAptMarketId %>",
    "<%= parseEther(settings.perpsAptMakerFeeRatio) %>",
    "<%= parseEther(settings.perpsAptTakerFeeRatio) %>",
]
depends = ["invoke.createAptPerpsMarket"]

[invoke.setPerpsAptMaxMarketSize]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketSize"
args = ["<%= settings.perpsAptMarketId %>", "<%= parseEther(settings.perpsAptMaxMarketSize) %>"]
depends = ["invoke.createAptPerpsMarket"]

[invoke.setPerpsAptMaxMarketValue]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketValue"
args = ["<%= settings.perpsAptMarketId %>", "<%= parseEther(settings.perpsAptMaxMarketValue) %>"]
depends = ["invoke.createAptPerpsMarket"]

[invoke.setPerpsAptMaxLiquidationParameters]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxLiquidationParameters"
args = [
    "<%= settings.perpsAptMarketId %>",
    "<%= parseEther(settings.perpsAptMaxLiquidationLimitAccumulationMultiplier) %>",
    "<%= settings.perpsAptMaxSecondsInLiquidationWindow %>",
    "<%= parseEther(settings.perpsAptMaxLiquidationPd) %>",
    "<%= settings.perpsAptEndorsedLiquidator %>",
]
depends = ["invoke.createAptPerpsMarket"]

[invoke.setPerpsAptLiquidationParameters]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLiquidationParameters"
args = [
    "<%= settings.perpsAptMarketId %>",
    "<%= parseEther(settings.perpsAptInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsAptMinimumInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsAptMaintenanceMarginScalar) %>",
    "<%= parseEther(settings.perpsAptFlagRewardRatioD18) %>",
    "<%= parseEther(settings.perpsAptMinimumPositionMargin) %>",
]
depends = ["invoke.createAptPerpsMarket"]

[invoke.setPerpsAptLockedOiRatio]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLockedOiRatio"
args = ["<%= settings.perpsAptMarketId %>", "<%= parseEther(settings.perpsAptLockedOiRatio) %>"]
depends = ["invoke.createAptPerpsMarket"]
