[setting.perpsNearMarketId]

[setting.perpsNearSkewScale]

[setting.perpsNearMaxFundingVelocity]

[setting.perpsNearMakerFeeRatio]

[setting.perpsNearTakerFeeRatio]

[setting.perpsNearMaxMarketSize]

[setting.perpsNearInitialMarginRatio]

[setting.perpsNearMaintenanceMarginFraction]

[setting.perpsNearFlagRewardRatioD18]

[setting.perpsNearMaxLiquidationLimitAccumulationMultiplier]

[setting.perpsNearMaxSecondsInLiquidationWindow]

[setting.perpsNearMaxLiquidationPd]

[setting.perpsNearEndorsedLiquidator]

[setting.perpsNearMinimumPositionMargin]

[setting.perpsNearLockedOiRatio]

[invoke.createNearPerpsMarket]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "createMarket"
args = ["<%= settings.perpsNearMarketId %>", "Near Protocol", "NEAR"]

[invoke.setPerpsPriceNear]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "updatePriceData"
args = [
    "<%= settings.perpsNearMarketId %>",
    "<%= extras.near_oracle_id %>",
    "<%= settings.bigCapStrictStalenessTolerance %>",
]
depends = ["invoke.createNearPerpsMarket"]

# Do not modify this step. Edit [invoke.setPerpsNearSettlementStrategy] instead.
[invoke.addPerpsNearSettlementStrategy]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "addSettlementStrategy"
args = [
    "<%= settings.perpsNearMarketId %>",
    { strategyType = "0", settlementDelay = "0", settlementWindowDuration = "1", priceVerificationContract = "0x0000000000000000000000000000000000000000", feedId = "0x0000000000000000000000000000000000000000000000000000000000000000", settlementReward = "0", disabled = false, commitmentPriceDelay = "0" },
]
extra.near_pyth_settlement_strategy.event = "SettlementStrategyAdded"
extra.near_pyth_settlement_strategy.arg = 2
depends = ["invoke.createNearPerpsMarket"]

[invoke.setPerpsNearSettlementStrategy]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setSettlementStrategy"
args = [
    "<%= settings.perpsNearMarketId %>",
    "<%= extras.near_pyth_settlement_strategy %>",                                                                                                                                                                                                                                                                                                                                                                                                                         # Settlement Strategy ID
    { strategyType = "0", settlementDelay = "<%= settings.bigCapSettlementDelay %>", settlementWindowDuration = "<%= settings.bigCapSettlementWindowDuration %>", priceVerificationContract = "<%= imports.pyth_erc7412_wrapper.contracts.PythERC7412Wrapper.address %>", feedId = "<%= settings.pythNearFeedId %>", settlementReward = "<%= parseEther(settings.settlementReward) %>", disabled = false, commitmentPriceDelay = "<%= settings.commitmentPriceDelay %>" },
]
depends = [
    'provision.perpsFactory',
    'setting.perpsNearMarketId',
    'invoke.addPerpsNearSettlementStrategy',
    'provision.pyth_erc7412_wrapper',
    'setting.bigCapSettlementDelay',
    'setting.bigCapSettlementWindowDuration',
    'setting.pythNearFeedId',
    'setting.settlementReward',
    'setting.commitmentPriceDelay',
]
[invoke.setPerpsNearFundingParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setFundingParameters"
args = [
    "<%= settings.perpsNearMarketId %>",
    "<%= parseEther(settings.perpsNearSkewScale) %>",
    "<%= parseEther(settings.perpsNearMaxFundingVelocity) %>",
]
depends = ["invoke.createNearPerpsMarket"]

[invoke.setPerpsNearOrderFees]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setOrderFees"
args = [
    "<%= settings.perpsNearMarketId %>",
    "<%= parseEther(settings.perpsNearMakerFeeRatio) %>",
    "<%= parseEther(settings.perpsNearTakerFeeRatio) %>",
]
depends = ["invoke.createNearPerpsMarket"]

[invoke.setPerpsNearMaxMarketSize]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketSize"
args = ["<%= settings.perpsNearMarketId %>", "<%= parseEther(settings.perpsNearMaxMarketSize) %>"]
depends = ["invoke.createNearPerpsMarket"]

[invoke.setPerpsNearMaxMarketValue]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketValue"
args = ["<%= settings.perpsNearMarketId %>", "<%= parseEther(settings.perpsNearMaxMarketValue) %>"]
depends = ["invoke.createNearPerpsMarket"]

[invoke.setPerpsNearMaxLiquidationParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxLiquidationParameters"
args = [
    "<%= settings.perpsNearMarketId %>",
    "<%= parseEther(settings.perpsNearMaxLiquidationLimitAccumulationMultiplier) %>",
    "<%= settings.perpsNearMaxSecondsInLiquidationWindow %>",
    "<%= parseEther(settings.perpsNearMaxLiquidationPd) %>",
    "<%= settings.perpsNearEndorsedLiquidator %>",
]
depends = ["invoke.createNearPerpsMarket"]

[invoke.setPerpsNearLiquidationParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLiquidationParameters"
args = [
    "<%= settings.perpsNearMarketId %>",
    "<%= parseEther(settings.perpsNearInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsNearMinimumInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsNearMaintenanceMarginScalar) %>",
    "<%= parseEther(settings.perpsNearFlagRewardRatioD18) %>",
    "<%= parseEther(settings.perpsNearMinimumPositionMargin) %>",
]
depends = ["invoke.createNearPerpsMarket"]

[invoke.setPerpsNearLockedOiRatio]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLockedOiRatio"
args = ["<%= settings.perpsNearMarketId %>", "<%= parseEther(settings.perpsNearLockedOiRatio) %>"]
depends = ["invoke.createNearPerpsMarket"]
