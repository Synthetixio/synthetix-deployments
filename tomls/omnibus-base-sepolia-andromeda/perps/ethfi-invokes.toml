[setting.perpsEthfiMarketId]

[setting.perpsEthfiSkewScale]

[setting.perpsEthfiMaxFundingVelocity]

[setting.perpsEthfiMakerFeeRatio]

[setting.perpsEthfiTakerFeeRatio]

[setting.perpsEthfiMaxMarketSize]

[setting.perpsEthfiInitialMarginRatio]

[setting.perpsEthfiMaintenanceMarginFraction]

[setting.perpsEthfiFlagRewardRatioD18]

[setting.perpsEthfiMaxLiquidationLimitAccumulationMultiplier]

[setting.perpsEthfiMaxSecondsInLiquidationWindow]

[setting.perpsEthfiMaxLiquidationPd]

[setting.perpsEthfiEndorsedLiquidator]

[setting.perpsEthfiMinimumPositionMargin]

[setting.perpsEthfiLockedOiRatio]

[invoke.createEthfiPerpsMarket]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "createMarket"
args = ["<%= settings.perpsEthfiMarketId %>", "Ether.fi", "ETHFI"]

[invoke.setPerpsPriceEthfi]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "updatePriceData"
args = [
    "<%= settings.perpsEthfiMarketId %>",
    "<%= extras.ethfi_oracle_id %>",
    "<%= settings.bigCapStrictStalenessTolerance %>",
]
depends = ["invoke.createEthfiPerpsMarket"]

# Do not modify this step. Edit [invoke.setPerpsEthfiSettlementStrategy] instead.
[invoke.addPerpsEthfiSettlementStrategy]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "addSettlementStrategy"
args = [
    "<%= settings.perpsEthfiMarketId %>",
    { strategyType = "0", settlementDelay = "0", settlementWindowDuration = "1", priceVerificationContract = "0x0000000000000000000000000000000000000000", feedId = "0x0000000000000000000000000000000000000000000000000000000000000000", settlementReward = "0", disabled = false, commitmentPriceDelay = "0" },
]
extra.ethfi_pyth_settlement_strategy.event = "SettlementStrategyAdded"
extra.ethfi_pyth_settlement_strategy.arg = 2
depends = ["invoke.createEthfiPerpsMarket"]

[invoke.setPerpsEthfiSettlementStrategy]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setSettlementStrategy"
args = [
    "<%= settings.perpsEthfiMarketId %>",
    "<%= extras.ethfi_pyth_settlement_strategy %>",                                                                                                                                                                                                                                                                                                                                                                                                                         # Settlement Strategy ID
    { strategyType = "0", settlementDelay = "<%= settings.bigCapSettlementDelay %>", settlementWindowDuration = "<%= settings.bigCapSettlementWindowDuration %>", priceVerificationContract = "<%= imports.pyth_erc7412_wrapper.contracts.PythERC7412Wrapper.address %>", feedId = "<%= settings.pythEthfiFeedId %>", settlementReward = "<%= parseEther(settings.settlementReward) %>", disabled = false, commitmentPriceDelay = "<%= settings.commitmentPriceDelay %>" },
]
depends = [
    'provision.perpsFactory',
    'setting.perpsEthfiMarketId',
    'invoke.addPerpsEthfiSettlementStrategy',
    'provision.pyth_erc7412_wrapper',
    'setting.bigCapSettlementDelay',
    'setting.bigCapSettlementWindowDuration',
    'setting.pythEthfiFeedId',
    'setting.settlementReward',
    'setting.commitmentPriceDelay',
]
[invoke.setPerpsEthfiFundingParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setFundingParameters"
args = [
    "<%= settings.perpsEthfiMarketId %>",
    "<%= parseEther(settings.perpsEthfiSkewScale) %>",
    "<%= parseEther(settings.perpsEthfiMaxFundingVelocity) %>",
]
depends = ["invoke.createEthfiPerpsMarket"]

[invoke.setPerpsEthfiOrderFees]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setOrderFees"
args = [
    "<%= settings.perpsEthfiMarketId %>",
    "<%= parseEther(settings.perpsEthfiMakerFeeRatio) %>",
    "<%= parseEther(settings.perpsEthfiTakerFeeRatio) %>",
]
depends = ["invoke.createEthfiPerpsMarket"]

[invoke.setPerpsEthfiMaxMarketSize]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketSize"
args = ["<%= settings.perpsEthfiMarketId %>", "<%= parseEther(settings.perpsEthfiMaxMarketSize) %>"]
depends = ["invoke.createEthfiPerpsMarket"]

[invoke.setPerpsEthfiMaxMarketValue]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketValue"
args = [
    "<%= settings.perpsEthfiMarketId %>",
    "<%= parseEther(settings.perpsEthfiMaxMarketValue) %>",
]
depends = ["invoke.createEthfiPerpsMarket"]

[invoke.setPerpsEthfiMaxLiquidationParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxLiquidationParameters"
args = [
    "<%= settings.perpsEthfiMarketId %>",
    "<%= parseEther(settings.perpsEthfiMaxLiquidationLimitAccumulationMultiplier) %>",
    "<%= settings.perpsEthfiMaxSecondsInLiquidationWindow %>",
    "<%= parseEther(settings.perpsEthfiMaxLiquidationPd) %>",
    "<%= settings.perpsEthfiEndorsedLiquidator %>",
]
depends = ["invoke.createEthfiPerpsMarket"]

[invoke.setPerpsEthfiLiquidationParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLiquidationParameters"
args = [
    "<%= settings.perpsEthfiMarketId %>",
    "<%= parseEther(settings.perpsEthfiInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsEthfiMinimumInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsEthfiMaintenanceMarginScalar) %>",
    "<%= parseEther(settings.perpsEthfiFlagRewardRatioD18) %>",
    "<%= parseEther(settings.perpsEthfiMinimumPositionMargin) %>",
]
depends = ["invoke.createEthfiPerpsMarket"]

[invoke.setPerpsEthfiLockedOiRatio]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLockedOiRatio"
args = ["<%= settings.perpsEthfiMarketId %>", "<%= parseEther(settings.perpsEthfiLockedOiRatio) %>"]
depends = ["invoke.createEthfiPerpsMarket"]
