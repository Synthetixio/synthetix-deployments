[setting.perpsFxsMarketId]

[setting.perpsFxsSkewScale]

[setting.perpsFxsMaxFundingVelocity]

[setting.perpsFxsMakerFeeRatio]

[setting.perpsFxsTakerFeeRatio]

[setting.perpsFxsMaxMarketSize]

[setting.perpsFxsInitialMarginRatio]

[setting.perpsFxsMaintenanceMarginFraction]

[setting.perpsFxsFlagRewardRatioD18]

[setting.perpsFxsMaxLiquidationLimitAccumulationMultiplier]

[setting.perpsFxsMaxSecondsInLiquidationWindow]

[setting.perpsFxsMaxLiquidationPd]

[setting.perpsFxsEndorsedLiquidator]

[setting.perpsFxsMinimumPositionMargin]

[setting.perpsFxsLockedOiRatio]

[invoke.createFxsPerpsMarket]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "createMarket"
args = ["<%= settings.perpsFxsMarketId %>", "Fraxshare", "FXS"]

[invoke.setPerpsPriceFxs]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "updatePriceData"
args = [
    "<%= settings.perpsFxsMarketId %>",
    "<%= extras.fxs_oracle_id %>",
    "<%= settings.bigCapStrictStalenessTolerance %>",
]
depends = ["invoke.createFxsPerpsMarket"]

# Do not modify this step. Edit [invoke.setPerpsFxsSettlementStrategy] instead.
[invoke.addPerpsFxsSettlementStrategy]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "addSettlementStrategy"
args = [
    "<%= settings.perpsFxsMarketId %>",
    { strategyType = "0", settlementDelay = "0", settlementWindowDuration = "1", priceVerificationContract = "0x0000000000000000000000000000000000000000", feedId = "0x0000000000000000000000000000000000000000000000000000000000000000", settlementReward = "0", disabled = false, commitmentPriceDelay = "0" },
]
extra.fxs_pyth_settlement_strategy.event = "SettlementStrategyAdded"
extra.fxs_pyth_settlement_strategy.arg = 2
depends = ["invoke.createFxsPerpsMarket"]

[invoke.setPerpsFxsSettlementStrategy]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setSettlementStrategy"
args = [
    "<%= settings.perpsFxsMarketId %>",
    "<%= extras.fxs_pyth_settlement_strategy %>",                                                                                                                                                                                                                                                                                                                                                                                                                         # Settlement Strategy ID
    { strategyType = "0", settlementDelay = "<%= settings.bigCapSettlementDelay %>", settlementWindowDuration = "<%= settings.bigCapSettlementWindowDuration %>", priceVerificationContract = "<%= imports.pyth_erc7412_wrapper.contracts.PythERC7412Wrapper.address %>", feedId = "<%= settings.pythFxsFeedId %>", settlementReward = "<%= parseEther(settings.settlementReward) %>", disabled = false, commitmentPriceDelay = "<%= settings.commitmentPriceDelay %>" },
]
depends = [
    'provision.perpsFactory',
    'setting.perpsFxsMarketId',
    'invoke.addPerpsFxsSettlementStrategy',
    'provision.pyth_erc7412_wrapper',
    'setting.bigCapSettlementDelay',
    'setting.bigCapSettlementWindowDuration',
    'setting.pythFxsFeedId',
    'setting.settlementReward',
    'setting.commitmentPriceDelay',
]
[invoke.setPerpsFxsFundingParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setFundingParameters"
args = [
    "<%= settings.perpsFxsMarketId %>",
    "<%= parseEther(settings.perpsFxsSkewScale) %>",
    "<%= parseEther(settings.perpsFxsMaxFundingVelocity) %>",
]
depends = ["invoke.createFxsPerpsMarket"]

[invoke.setPerpsFxsOrderFees]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setOrderFees"
args = [
    "<%= settings.perpsFxsMarketId %>",
    "<%= parseEther(settings.perpsFxsMakerFeeRatio) %>",
    "<%= parseEther(settings.perpsFxsTakerFeeRatio) %>",
]
depends = ["invoke.createFxsPerpsMarket"]

[invoke.setPerpsFxsMaxMarketSize]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketSize"
args = ["<%= settings.perpsFxsMarketId %>", "<%= parseEther(settings.perpsFxsMaxMarketSize) %>"]
depends = ["invoke.createFxsPerpsMarket"]

[invoke.setPerpsFxsMaxMarketValue]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketValue"
args = ["<%= settings.perpsFxsMarketId %>", "<%= parseEther(settings.perpsFxsMaxMarketValue) %>"]
depends = ["invoke.createFxsPerpsMarket"]

[invoke.setPerpsFxsMaxLiquidationParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxLiquidationParameters"
args = [
    "<%= settings.perpsFxsMarketId %>",
    "<%= parseEther(settings.perpsFxsMaxLiquidationLimitAccumulationMultiplier) %>",
    "<%= settings.perpsFxsMaxSecondsInLiquidationWindow %>",
    "<%= parseEther(settings.perpsFxsMaxLiquidationPd) %>",
    "<%= settings.perpsFxsEndorsedLiquidator %>",
]
depends = ["invoke.createFxsPerpsMarket"]

[invoke.setPerpsFxsLiquidationParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLiquidationParameters"
args = [
    "<%= settings.perpsFxsMarketId %>",
    "<%= parseEther(settings.perpsFxsInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsFxsMinimumInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsFxsMaintenanceMarginScalar) %>",
    "<%= parseEther(settings.perpsFxsFlagRewardRatioD18) %>",
    "<%= parseEther(settings.perpsFxsMinimumPositionMargin) %>",
]
depends = ["invoke.createFxsPerpsMarket"]

[invoke.setPerpsFxsLockedOiRatio]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLockedOiRatio"
args = ["<%= settings.perpsFxsMarketId %>", "<%= parseEther(settings.perpsFxsLockedOiRatio) %>"]
depends = ["invoke.createFxsPerpsMarket"]
