[setting.perpsBomeMarketId]

[setting.perpsBomeSkewScale]

[setting.perpsBomeMaxFundingVelocity]

[setting.perpsBomeMakerFeeRatio]

[setting.perpsBomeTakerFeeRatio]

[setting.perpsBomeMaxMarketSize]

[setting.perpsBomeInitialMarginRatio]

[setting.perpsBomeMaintenanceMarginFraction]

[setting.perpsBomeFlagRewardRatioD18]

[setting.perpsBomeMaxLiquidationLimitAccumulationMultiplier]

[setting.perpsBomeMaxSecondsInLiquidationWindow]

[setting.perpsBomeMaxLiquidationPd]

[setting.perpsBomeEndorsedLiquidator]

[setting.perpsBomeMinimumPositionMargin]

[setting.perpsBomeLockedOiRatio]

[invoke.createBomePerpsMarket]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "createMarket"
args = ["<%= settings.perpsBomeMarketId %>", "BOOK OF MEME", "BOME"]

[invoke.setPerpsPriceBome]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "updatePriceData"
args = [
    "<%= settings.perpsBomeMarketId %>",
    "<%= extras.bome_oracle_id %>",
    "<%= settings.bigCapStrictStalenessTolerance %>",
]
depends = ["invoke.createBomePerpsMarket"]

# Do not modify this step. Edit [invoke.setPerpsBomeSettlementStrategy] instead.
[invoke.addPerpsBomeSettlementStrategy]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "addSettlementStrategy"
args = [
    "<%= settings.perpsBomeMarketId %>",
    { strategyType = "0", settlementDelay = "0", settlementWindowDuration = "1", priceVerificationContract = "0x0000000000000000000000000000000000000000", feedId = "0x0000000000000000000000000000000000000000000000000000000000000000", settlementReward = "0", disabled = false, commitmentPriceDelay = "0" },
]
extra.bome_pyth_settlement_strategy.event = "SettlementStrategyAdded"
extra.bome_pyth_settlement_strategy.arg = 2
depends = ["invoke.createBomePerpsMarket"]

[invoke.setPerpsBomeSettlementStrategy]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setSettlementStrategy"
args = [
    "<%= settings.perpsBomeMarketId %>",
    "<%= extras.bome_pyth_settlement_strategy %>",                                                                                                                                                                                                                                                                                                                                                                                                                         # Settlement Strategy ID
    { strategyType = "0", settlementDelay = "<%= settings.bigCapSettlementDelay %>", settlementWindowDuration = "<%= settings.bigCapSettlementWindowDuration %>", priceVerificationContract = "<%= imports.pyth_erc7412_wrapper.contracts.PythERC7412Wrapper.address %>", feedId = "<%= settings.pythBomeFeedId %>", settlementReward = "<%= parseEther(settings.settlementReward) %>", disabled = false, commitmentPriceDelay = "<%= settings.commitmentPriceDelay %>" },
]
depends = [
    'provision.perpsFactory',
    'setting.perpsBomeMarketId',
    'invoke.addPerpsBomeSettlementStrategy',
    'provision.pyth_erc7412_wrapper',
    'setting.bigCapSettlementDelay',
    'setting.bigCapSettlementWindowDuration',
    'setting.pythBomeFeedId',
    'setting.settlementReward',
    'setting.commitmentPriceDelay',
]
[invoke.setPerpsBomeFundingParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setFundingParameters"
args = [
    "<%= settings.perpsBomeMarketId %>",
    "<%= parseEther(settings.perpsBomeSkewScale) %>",
    "<%= parseEther(settings.perpsBomeMaxFundingVelocity) %>",
]
depends = ["invoke.createBomePerpsMarket"]

[invoke.setPerpsBomeOrderFees]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setOrderFees"
args = [
    "<%= settings.perpsBomeMarketId %>",
    "<%= parseEther(settings.perpsBomeMakerFeeRatio) %>",
    "<%= parseEther(settings.perpsBomeTakerFeeRatio) %>",
]
depends = ["invoke.createBomePerpsMarket"]

[invoke.setPerpsBomeMaxMarketSize]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketSize"
args = ["<%= settings.perpsBomeMarketId %>", "<%= parseEther(settings.perpsBomeMaxMarketSize) %>"]
depends = ["invoke.createBomePerpsMarket"]

[invoke.setPerpsBomeMaxMarketValue]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketValue"
args = ["<%= settings.perpsBomeMarketId %>", "<%= parseEther(settings.perpsBomeMaxMarketValue) %>"]
depends = ["invoke.createBomePerpsMarket"]

[invoke.setPerpsBomeMaxLiquidationParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxLiquidationParameters"
args = [
    "<%= settings.perpsBomeMarketId %>",
    "<%= parseEther(settings.perpsBomeMaxLiquidationLimitAccumulationMultiplier) %>",
    "<%= settings.perpsBomeMaxSecondsInLiquidationWindow %>",
    "<%= parseEther(settings.perpsBomeMaxLiquidationPd) %>",
    "<%= settings.perpsBomeEndorsedLiquidator %>",
]
depends = ["invoke.createBomePerpsMarket"]

[invoke.setPerpsBomeLiquidationParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLiquidationParameters"
args = [
    "<%= settings.perpsBomeMarketId %>",
    "<%= parseEther(settings.perpsBomeInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsBomeMinimumInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsBomeMaintenanceMarginScalar) %>",
    "<%= parseEther(settings.perpsBomeFlagRewardRatioD18) %>",
    "<%= parseEther(settings.perpsBomeMinimumPositionMargin) %>",
]
depends = ["invoke.createBomePerpsMarket"]

[invoke.setPerpsBomeLockedOiRatio]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLockedOiRatio"
args = ["<%= settings.perpsBomeMarketId %>", "<%= parseEther(settings.perpsBomeLockedOiRatio) %>"]
depends = ["invoke.createBomePerpsMarket"]
