[setting.perpsCompMarketId]

[setting.perpsCompSkewScale]

[setting.perpsCompMaxFundingVelocity]

[setting.perpsCompMakerFeeRatio]

[setting.perpsCompTakerFeeRatio]

[setting.perpsCompMaxMarketSize]

[setting.perpsCompInitialMarginRatio]

[setting.perpsCompMaintenanceMarginFraction]

[setting.perpsCompFlagRewardRatioD18]

[setting.perpsCompMaxLiquidationLimitAccumulationMultiplier]

[setting.perpsCompMaxSecondsInLiquidationWindow]

[setting.perpsCompMaxLiquidationPd]

[setting.perpsCompEndorsedLiquidator]

[setting.perpsCompMinimumPositionMargin]

[setting.perpsCompLockedOiRatio]

[invoke.createCompPerpsMarket]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "createMarket"
args = ["<%= settings.perpsCompMarketId %>", "Compound", "COMP"]

[invoke.setPerpsPriceComp]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "updatePriceData"
args = [
    "<%= settings.perpsCompMarketId %>",
    "<%= extras.comp_oracle_id %>",
    "<%= settings.bigCapStrictStalenessTolerance %>",
]
depends = ["invoke.createCompPerpsMarket"]

# Do not modify this step. Edit [invoke.setPerpsCompSettlementStrategy] instead.
[invoke.addPerpsCompSettlementStrategy]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "addSettlementStrategy"
args = [
    "<%= settings.perpsCompMarketId %>",
    { strategyType = "0", settlementDelay = "0", settlementWindowDuration = "1", priceVerificationContract = "0x0000000000000000000000000000000000000000", feedId = "0x0000000000000000000000000000000000000000000000000000000000000000", settlementReward = "0", disabled = false, commitmentPriceDelay = "0" },
]
extra.comp_pyth_settlement_strategy.event = "SettlementStrategyAdded"
extra.comp_pyth_settlement_strategy.arg = 2
depends = ["invoke.createCompPerpsMarket"]

[invoke.setPerpsCompSettlementStrategy]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setSettlementStrategy"
args = [
    "<%= settings.perpsCompMarketId %>",
    "<%= extras.comp_pyth_settlement_strategy %>",                                                                                                                                                                                                                                                                                                                                                                                                                         # Settlement Strategy ID
    { strategyType = "0", settlementDelay = "<%= settings.bigCapSettlementDelay %>", settlementWindowDuration = "<%= settings.bigCapSettlementWindowDuration %>", priceVerificationContract = "<%= imports.pyth_erc7412_wrapper.contracts.PythERC7412Wrapper.address %>", feedId = "<%= settings.pythCompFeedId %>", settlementReward = "<%= parseEther(settings.settlementReward) %>", disabled = false, commitmentPriceDelay = "<%= settings.commitmentPriceDelay %>" },
]
depends = [
    'provision.perpsFactory',
    'setting.perpsCompMarketId',
    'invoke.addPerpsCompSettlementStrategy',
    'provision.pyth_erc7412_wrapper',
    'setting.bigCapSettlementDelay',
    'setting.bigCapSettlementWindowDuration',
    'setting.pythCompFeedId',
    'setting.settlementReward',
    'setting.commitmentPriceDelay',
]
[invoke.setPerpsCompFundingParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setFundingParameters"
args = [
    "<%= settings.perpsCompMarketId %>",
    "<%= parseEther(settings.perpsCompSkewScale) %>",
    "<%= parseEther(settings.perpsCompMaxFundingVelocity) %>",
]
depends = ["invoke.createCompPerpsMarket"]

[invoke.setPerpsCompOrderFees]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setOrderFees"
args = [
    "<%= settings.perpsCompMarketId %>",
    "<%= parseEther(settings.perpsCompMakerFeeRatio) %>",
    "<%= parseEther(settings.perpsCompTakerFeeRatio) %>",
]
depends = ["invoke.createCompPerpsMarket"]

[invoke.setPerpsCompMaxMarketSize]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketSize"
args = ["<%= settings.perpsCompMarketId %>", "<%= parseEther(settings.perpsCompMaxMarketSize) %>"]
depends = ["invoke.createCompPerpsMarket"]

[invoke.setPerpsCompMaxMarketValue]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketValue"
args = ["<%= settings.perpsCompMarketId %>", "<%= parseEther(settings.perpsCompMaxMarketValue) %>"]
depends = ["invoke.createCompPerpsMarket"]

[invoke.setPerpsCompMaxLiquidationParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxLiquidationParameters"
args = [
    "<%= settings.perpsCompMarketId %>",
    "<%= parseEther(settings.perpsCompMaxLiquidationLimitAccumulationMultiplier) %>",
    "<%= settings.perpsCompMaxSecondsInLiquidationWindow %>",
    "<%= parseEther(settings.perpsCompMaxLiquidationPd) %>",
    "<%= settings.perpsCompEndorsedLiquidator %>",
]
depends = ["invoke.createCompPerpsMarket"]

[invoke.setPerpsCompLiquidationParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLiquidationParameters"
args = [
    "<%= settings.perpsCompMarketId %>",
    "<%= parseEther(settings.perpsCompInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsCompMinimumInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsCompMaintenanceMarginScalar) %>",
    "<%= parseEther(settings.perpsCompFlagRewardRatioD18) %>",
    "<%= parseEther(settings.perpsCompMinimumPositionMargin) %>",
]
depends = ["invoke.createCompPerpsMarket"]

[invoke.setPerpsCompLockedOiRatio]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLockedOiRatio"
args = ["<%= settings.perpsCompMarketId %>", "<%= parseEther(settings.perpsCompLockedOiRatio) %>"]
depends = ["invoke.createCompPerpsMarket"]
