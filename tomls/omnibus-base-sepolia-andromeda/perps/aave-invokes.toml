[setting.perpsAaveMarketId]

[setting.perpsAaveSkewScale]

[setting.perpsAaveMaxFundingVelocity]

[setting.perpsAaveMakerFeeRatio]

[setting.perpsAaveTakerFeeRatio]

[setting.perpsAaveMaxMarketSize]

[setting.perpsAaveInitialMarginRatio]

[setting.perpsAaveMaintenanceMarginFraction]

[setting.perpsAaveFlagRewardRatioD18]

[setting.perpsAaveMaxLiquidationLimitAccumulationMultiplier]

[setting.perpsAaveMaxSecondsInLiquidationWindow]

[setting.perpsAaveMaxLiquidationPd]

[setting.perpsAaveEndorsedLiquidator]

[setting.perpsAaveMinimumPositionMargin]

[setting.perpsAaveLockedOiRatio]

[invoke.createAavePerpsMarket]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "createMarket"
args = ["<%= settings.perpsAaveMarketId %>", "Aave", "AAVE"]

[invoke.setPerpsPriceAave]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "updatePriceData"
args = [
    "<%= settings.perpsAaveMarketId %>",
    "<%= extras.aave_oracle_id %>",
    "<%= settings.bigCapStrictStalenessTolerance %>",
]
depends = ["invoke.createAavePerpsMarket"]

# Do not modify this step. Edit [invoke.setPerpsAaveSettlementStrategy] instead.
[invoke.addPerpsAaveSettlementStrategy]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "addSettlementStrategy"
args = [
    "<%= settings.perpsAaveMarketId %>",
    { strategyType = "0", settlementDelay = "0", settlementWindowDuration = "1", priceVerificationContract = "0x0000000000000000000000000000000000000000", feedId = "0x0000000000000000000000000000000000000000000000000000000000000000", settlementReward = "0", disabled = false, commitmentPriceDelay = "0" },
]
extra.aave_pyth_settlement_strategy.event = "SettlementStrategyAdded"
extra.aave_pyth_settlement_strategy.arg = 2
depends = ["invoke.createAavePerpsMarket"]

[invoke.setPerpsAaveSettlementStrategy]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setSettlementStrategy"
args = [
    "<%= settings.perpsAaveMarketId %>",
    "<%= extras.aave_pyth_settlement_strategy %>",                                                                                                                                                                                                                                                                                                                                                                                                                         # Settlement Strategy ID
    { strategyType = "0", settlementDelay = "<%= settings.bigCapSettlementDelay %>", settlementWindowDuration = "<%= settings.bigCapSettlementWindowDuration %>", priceVerificationContract = "<%= imports.pyth_erc7412_wrapper.contracts.PythERC7412Wrapper.address %>", feedId = "<%= settings.pythAaveFeedId %>", settlementReward = "<%= parseEther(settings.settlementReward) %>", disabled = false, commitmentPriceDelay = "<%= settings.commitmentPriceDelay %>" },
]
depends = [
    'provision.perpsLowCapFactory',
    'setting.perpsAaveMarketId',
    'invoke.addPerpsAaveSettlementStrategy',
    'provision.pyth_erc7412_wrapper',
    'setting.bigCapSettlementDelay',
    'setting.bigCapSettlementWindowDuration',
    'setting.pythAaveFeedId',
    'setting.settlementReward',
    'setting.commitmentPriceDelay',
]
[invoke.setPerpsAaveFundingParameters]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setFundingParameters"
args = [
    "<%= settings.perpsAaveMarketId %>",
    "<%= parseEther(settings.perpsAaveSkewScale) %>",
    "<%= parseEther(settings.perpsAaveMaxFundingVelocity) %>",
]
depends = ["invoke.createAavePerpsMarket"]

[invoke.setPerpsAaveOrderFees]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setOrderFees"
args = [
    "<%= settings.perpsAaveMarketId %>",
    "<%= parseEther(settings.perpsAaveMakerFeeRatio) %>",
    "<%= parseEther(settings.perpsAaveTakerFeeRatio) %>",
]
depends = ["invoke.createAavePerpsMarket"]

[invoke.setPerpsAaveMaxMarketSize]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketSize"
args = ["<%= settings.perpsAaveMarketId %>", "<%= parseEther(settings.perpsAaveMaxMarketSize) %>"]
depends = ["invoke.createAavePerpsMarket"]

[invoke.setPerpsAaveMaxMarketValue]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketValue"
args = ["<%= settings.perpsAaveMarketId %>", "<%= parseEther(settings.perpsAaveMaxMarketValue) %>"]
depends = ["invoke.createAavePerpsMarket"]

[invoke.setPerpsAaveMaxLiquidationParameters]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxLiquidationParameters"
args = [
    "<%= settings.perpsAaveMarketId %>",
    "<%= parseEther(settings.perpsAaveMaxLiquidationLimitAccumulationMultiplier) %>",
    "<%= settings.perpsAaveMaxSecondsInLiquidationWindow %>",
    "<%= parseEther(settings.perpsAaveMaxLiquidationPd) %>",
    "<%= settings.perpsAaveEndorsedLiquidator %>",
]
depends = ["invoke.createAavePerpsMarket"]

[invoke.setPerpsAaveLiquidationParameters]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLiquidationParameters"
args = [
    "<%= settings.perpsAaveMarketId %>",
    "<%= parseEther(settings.perpsAaveInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsAaveMinimumInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsAaveMaintenanceMarginScalar) %>",
    "<%= parseEther(settings.perpsAaveFlagRewardRatioD18) %>",
    "<%= parseEther(settings.perpsAaveMinimumPositionMargin) %>",
]
depends = ["invoke.createAavePerpsMarket"]

[invoke.setPerpsAaveLockedOiRatio]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLockedOiRatio"
args = ["<%= settings.perpsAaveMarketId %>", "<%= parseEther(settings.perpsAaveLockedOiRatio) %>"]
depends = ["invoke.createAavePerpsMarket"]
