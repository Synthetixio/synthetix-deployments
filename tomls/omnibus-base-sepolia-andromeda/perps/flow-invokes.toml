[setting.perpsFlowMarketId]

[setting.perpsFlowSkewScale]

[setting.perpsFlowMaxFundingVelocity]

[setting.perpsFlowMakerFeeRatio]

[setting.perpsFlowTakerFeeRatio]

[setting.perpsFlowMaxMarketSize]

[setting.perpsFlowInitialMarginRatio]

[setting.perpsFlowMaintenanceMarginFraction]

[setting.perpsFlowFlagRewardRatioD18]

[setting.perpsFlowMaxLiquidationLimitAccumulationMultiplier]

[setting.perpsFlowMaxSecondsInLiquidationWindow]

[setting.perpsFlowMaxLiquidationPd]

[setting.perpsFlowEndorsedLiquidator]

[setting.perpsFlowMinimumPositionMargin]

[setting.perpsFlowLockedOiRatio]

[invoke.createFlowPerpsMarket]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "createMarket"
args = ["<%= settings.perpsFlowMarketId %>", "Flow", "FLOW"]

[invoke.setPerpsPriceFlow]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "updatePriceData"
args = [
    "<%= settings.perpsFlowMarketId %>",
    "<%= extras.flow_oracle_id %>",
    "<%= settings.bigCapStrictStalenessTolerance %>",
]
depends = ["invoke.createFlowPerpsMarket"]

# Do not modify this step. Edit [invoke.setPerpsFlowSettlementStrategy] instead.
[invoke.addPerpsFlowSettlementStrategy]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "addSettlementStrategy"
args = [
    "<%= settings.perpsFlowMarketId %>",
    { strategyType = "0", settlementDelay = "0", settlementWindowDuration = "1", priceVerificationContract = "0x0000000000000000000000000000000000000000", feedId = "0x0000000000000000000000000000000000000000000000000000000000000000", settlementReward = "0", disabled = false, commitmentPriceDelay = "0" },
]
extra.flow_pyth_settlement_strategy.event = "SettlementStrategyAdded"
extra.flow_pyth_settlement_strategy.arg = 2
depends = ["invoke.createFlowPerpsMarket"]

[invoke.setPerpsFlowSettlementStrategy]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setSettlementStrategy"
args = [
    "<%= settings.perpsFlowMarketId %>",
    "<%= extras.flow_pyth_settlement_strategy %>",                                                                                                                                                                                                                                                                                                                                                                                                                         # Settlement Strategy ID
    { strategyType = "0", settlementDelay = "<%= settings.bigCapSettlementDelay %>", settlementWindowDuration = "<%= settings.bigCapSettlementWindowDuration %>", priceVerificationContract = "<%= imports.pyth_erc7412_wrapper.contracts.PythERC7412Wrapper.address %>", feedId = "<%= settings.pythFlowFeedId %>", settlementReward = "<%= parseEther(settings.settlementReward) %>", disabled = false, commitmentPriceDelay = "<%= settings.commitmentPriceDelay %>" },
]
depends = [
    'provision.perpsFactory',
    'setting.perpsFlowMarketId',
    'invoke.addPerpsFlowSettlementStrategy',
    'provision.pyth_erc7412_wrapper',
    'setting.bigCapSettlementDelay',
    'setting.bigCapSettlementWindowDuration',
    'setting.pythFlowFeedId',
    'setting.settlementReward',
    'setting.commitmentPriceDelay',
]
[invoke.setPerpsFlowFundingParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setFundingParameters"
args = [
    "<%= settings.perpsFlowMarketId %>",
    "<%= parseEther(settings.perpsFlowSkewScale) %>",
    "<%= parseEther(settings.perpsFlowMaxFundingVelocity) %>",
]
depends = ["invoke.createFlowPerpsMarket"]

[invoke.setPerpsFlowOrderFees]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setOrderFees"
args = [
    "<%= settings.perpsFlowMarketId %>",
    "<%= parseEther(settings.perpsFlowMakerFeeRatio) %>",
    "<%= parseEther(settings.perpsFlowTakerFeeRatio) %>",
]
depends = ["invoke.createFlowPerpsMarket"]

[invoke.setPerpsFlowMaxMarketSize]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketSize"
args = ["<%= settings.perpsFlowMarketId %>", "<%= parseEther(settings.perpsFlowMaxMarketSize) %>"]
depends = ["invoke.createFlowPerpsMarket"]

[invoke.setPerpsFlowMaxMarketValue]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketValue"
args = ["<%= settings.perpsFlowMarketId %>", "<%= parseEther(settings.perpsFlowMaxMarketValue) %>"]
depends = ["invoke.createFlowPerpsMarket"]

[invoke.setPerpsFlowMaxLiquidationParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxLiquidationParameters"
args = [
    "<%= settings.perpsFlowMarketId %>",
    "<%= parseEther(settings.perpsFlowMaxLiquidationLimitAccumulationMultiplier) %>",
    "<%= settings.perpsFlowMaxSecondsInLiquidationWindow %>",
    "<%= parseEther(settings.perpsFlowMaxLiquidationPd) %>",
    "<%= settings.perpsFlowEndorsedLiquidator %>",
]
depends = ["invoke.createFlowPerpsMarket"]

[invoke.setPerpsFlowLiquidationParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLiquidationParameters"
args = [
    "<%= settings.perpsFlowMarketId %>",
    "<%= parseEther(settings.perpsFlowInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsFlowMinimumInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsFlowMaintenanceMarginScalar) %>",
    "<%= parseEther(settings.perpsFlowFlagRewardRatioD18) %>",
    "<%= parseEther(settings.perpsFlowMinimumPositionMargin) %>",
]
depends = ["invoke.createFlowPerpsMarket"]

[invoke.setPerpsFlowLockedOiRatio]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLockedOiRatio"
args = ["<%= settings.perpsFlowMarketId %>", "<%= parseEther(settings.perpsFlowLockedOiRatio) %>"]
depends = ["invoke.createFlowPerpsMarket"]
