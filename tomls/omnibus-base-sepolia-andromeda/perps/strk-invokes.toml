[setting.perpsStrkMarketId]

[setting.perpsStrkSkewScale]

[setting.perpsStrkMaxFundingVelocity]

[setting.perpsStrkMakerFeeRatio]

[setting.perpsStrkTakerFeeRatio]

[setting.perpsStrkMaxMarketSize]

[setting.perpsStrkInitialMarginRatio]

[setting.perpsStrkMaintenanceMarginFraction]

[setting.perpsStrkFlagRewardRatioD18]

[setting.perpsStrkMaxLiquidationLimitAccumulationMultiplier]

[setting.perpsStrkMaxSecondsInLiquidationWindow]

[setting.perpsStrkMaxLiquidationPd]

[setting.perpsStrkEndorsedLiquidator]

[setting.perpsStrkMinimumPositionMargin]

[setting.perpsStrkLockedOiRatio]

[invoke.createStrkPerpsMarket]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "createMarket"
args = ["<%= settings.perpsStrkMarketId %>", "Starknet", "STRK"]

[invoke.setPerpsPriceStrk]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "updatePriceData"
args = [
    "<%= settings.perpsStrkMarketId %>",
    "<%= extras.strk_oracle_id %>",
    "<%= settings.bigCapStrictStalenessTolerance %>",
]
depends = ["invoke.createStrkPerpsMarket"]

# Do not modify this step. Edit [invoke.setPerpsStrkSettlementStrategy] instead.
[invoke.addPerpsStrkSettlementStrategy]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "addSettlementStrategy"
args = [
    "<%= settings.perpsStrkMarketId %>",
    { strategyType = "0", settlementDelay = "0", settlementWindowDuration = "1", priceVerificationContract = "0x0000000000000000000000000000000000000000", feedId = "0x0000000000000000000000000000000000000000000000000000000000000000", settlementReward = "0", disabled = false, commitmentPriceDelay = "0" },
]
extra.strk_pyth_settlement_strategy.event = "SettlementStrategyAdded"
extra.strk_pyth_settlement_strategy.arg = 2
depends = ["invoke.createStrkPerpsMarket"]

[invoke.setPerpsStrkSettlementStrategy]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setSettlementStrategy"
args = [
    "<%= settings.perpsStrkMarketId %>",
    "<%= extras.strk_pyth_settlement_strategy %>",                                                                                                                                                                                                                                                                                                                                                                                                                         # Settlement Strategy ID
    { strategyType = "0", settlementDelay = "<%= settings.bigCapSettlementDelay %>", settlementWindowDuration = "<%= settings.bigCapSettlementWindowDuration %>", priceVerificationContract = "<%= imports.pyth_erc7412_wrapper.contracts.PythERC7412Wrapper.address %>", feedId = "<%= settings.pythStrkFeedId %>", settlementReward = "<%= parseEther(settings.settlementReward) %>", disabled = false, commitmentPriceDelay = "<%= settings.commitmentPriceDelay %>" },
]
depends = [
    'provision.perpsFactory',
    'setting.perpsStrkMarketId',
    'invoke.addPerpsStrkSettlementStrategy',
    'provision.pyth_erc7412_wrapper',
    'setting.bigCapSettlementDelay',
    'setting.bigCapSettlementWindowDuration',
    'setting.pythStrkFeedId',
    'setting.settlementReward',
    'setting.commitmentPriceDelay',
]
[invoke.setPerpsStrkFundingParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setFundingParameters"
args = [
    "<%= settings.perpsStrkMarketId %>",
    "<%= parseEther(settings.perpsStrkSkewScale) %>",
    "<%= parseEther(settings.perpsStrkMaxFundingVelocity) %>",
]
depends = ["invoke.createStrkPerpsMarket"]

[invoke.setPerpsStrkOrderFees]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setOrderFees"
args = [
    "<%= settings.perpsStrkMarketId %>",
    "<%= parseEther(settings.perpsStrkMakerFeeRatio) %>",
    "<%= parseEther(settings.perpsStrkTakerFeeRatio) %>",
]
depends = ["invoke.createStrkPerpsMarket"]

[invoke.setPerpsStrkMaxMarketSize]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketSize"
args = ["<%= settings.perpsStrkMarketId %>", "<%= parseEther(settings.perpsStrkMaxMarketSize) %>"]
depends = ["invoke.createStrkPerpsMarket"]

[invoke.setPerpsStrkMaxMarketValue]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketValue"
args = ["<%= settings.perpsStrkMarketId %>", "<%= parseEther(settings.perpsStrkMaxMarketValue) %>"]
depends = ["invoke.createStrkPerpsMarket"]

[invoke.setPerpsStrkMaxLiquidationParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxLiquidationParameters"
args = [
    "<%= settings.perpsStrkMarketId %>",
    "<%= parseEther(settings.perpsStrkMaxLiquidationLimitAccumulationMultiplier) %>",
    "<%= settings.perpsStrkMaxSecondsInLiquidationWindow %>",
    "<%= parseEther(settings.perpsStrkMaxLiquidationPd) %>",
    "<%= settings.perpsStrkEndorsedLiquidator %>",
]
depends = ["invoke.createStrkPerpsMarket"]

[invoke.setPerpsStrkLiquidationParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLiquidationParameters"
args = [
    "<%= settings.perpsStrkMarketId %>",
    "<%= parseEther(settings.perpsStrkInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsStrkMinimumInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsStrkMaintenanceMarginScalar) %>",
    "<%= parseEther(settings.perpsStrkFlagRewardRatioD18) %>",
    "<%= parseEther(settings.perpsStrkMinimumPositionMargin) %>",
]
depends = ["invoke.createStrkPerpsMarket"]

[invoke.setPerpsStrkLockedOiRatio]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLockedOiRatio"
args = ["<%= settings.perpsStrkMarketId %>", "<%= parseEther(settings.perpsStrkLockedOiRatio) %>"]
depends = ["invoke.createStrkPerpsMarket"]
