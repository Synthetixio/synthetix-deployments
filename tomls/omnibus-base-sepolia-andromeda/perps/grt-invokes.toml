[setting.perpsGrtMarketId]

[setting.perpsGrtSkewScale]

[setting.perpsGrtMaxFundingVelocity]

[setting.perpsGrtMakerFeeRatio]

[setting.perpsGrtTakerFeeRatio]

[setting.perpsGrtMaxMarketSize]

[setting.perpsGrtInitialMarginRatio]

[setting.perpsGrtMaintenanceMarginFraction]

[setting.perpsGrtFlagRewardRatioD18]

[setting.perpsGrtMaxLiquidationLimitAccumulationMultiplier]

[setting.perpsGrtMaxSecondsInLiquidationWindow]

[setting.perpsGrtMaxLiquidationPd]

[setting.perpsGrtEndorsedLiquidator]

[setting.perpsGrtMinimumPositionMargin]

[setting.perpsGrtLockedOiRatio]

[invoke.createGrtPerpsMarket]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "createMarket"
args = ["<%= settings.perpsGrtMarketId %>", "The Graph", "GRT"]

[invoke.setPerpsPriceGrt]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "updatePriceData"
args = [
    "<%= settings.perpsGrtMarketId %>",
    "<%= extras.grt_oracle_id %>",
    "<%= settings.bigCapStrictStalenessTolerance %>",
]
depends = ["invoke.createGrtPerpsMarket"]

# Do not modify this step. Edit [invoke.setPerpsGrtSettlementStrategy] instead.
[invoke.addPerpsGrtSettlementStrategy]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "addSettlementStrategy"
args = [
    "<%= settings.perpsGrtMarketId %>",
    { strategyType = "0", settlementDelay = "0", settlementWindowDuration = "1", priceVerificationContract = "0x0000000000000000000000000000000000000000", feedId = "0x0000000000000000000000000000000000000000000000000000000000000000", settlementReward = "0", disabled = false, commitmentPriceDelay = "0" },
]
extra.grt_pyth_settlement_strategy.event = "SettlementStrategyAdded"
extra.grt_pyth_settlement_strategy.arg = 2
depends = ["invoke.createGrtPerpsMarket"]

[invoke.setPerpsGrtSettlementStrategy]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setSettlementStrategy"
args = [
    "<%= settings.perpsGrtMarketId %>",
    "<%= extras.grt_pyth_settlement_strategy %>",                                                                                                                                                                                                                                                                                                                                                                                                                         # Settlement Strategy ID
    { strategyType = "0", settlementDelay = "<%= settings.bigCapSettlementDelay %>", settlementWindowDuration = "<%= settings.bigCapSettlementWindowDuration %>", priceVerificationContract = "<%= imports.pyth_erc7412_wrapper.contracts.PythERC7412Wrapper.address %>", feedId = "<%= settings.pythGrtFeedId %>", settlementReward = "<%= parseEther(settings.settlementReward) %>", disabled = false, commitmentPriceDelay = "<%= settings.commitmentPriceDelay %>" },
]
depends = [
    'provision.perpsFactory',
    'setting.perpsGrtMarketId',
    'invoke.addPerpsGrtSettlementStrategy',
    'provision.pyth_erc7412_wrapper',
    'setting.bigCapSettlementDelay',
    'setting.bigCapSettlementWindowDuration',
    'setting.pythGrtFeedId',
    'setting.settlementReward',
    'setting.commitmentPriceDelay',
]
[invoke.setPerpsGrtFundingParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setFundingParameters"
args = [
    "<%= settings.perpsGrtMarketId %>",
    "<%= parseEther(settings.perpsGrtSkewScale) %>",
    "<%= parseEther(settings.perpsGrtMaxFundingVelocity) %>",
]
depends = ["invoke.createGrtPerpsMarket"]

[invoke.setPerpsGrtOrderFees]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setOrderFees"
args = [
    "<%= settings.perpsGrtMarketId %>",
    "<%= parseEther(settings.perpsGrtMakerFeeRatio) %>",
    "<%= parseEther(settings.perpsGrtTakerFeeRatio) %>",
]
depends = ["invoke.createGrtPerpsMarket"]

[invoke.setPerpsGrtMaxMarketSize]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketSize"
args = ["<%= settings.perpsGrtMarketId %>", "<%= parseEther(settings.perpsGrtMaxMarketSize) %>"]
depends = ["invoke.createGrtPerpsMarket"]

[invoke.setPerpsGrtMaxMarketValue]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketValue"
args = ["<%= settings.perpsGrtMarketId %>", "<%= parseEther(settings.perpsGrtMaxMarketValue) %>"]
depends = ["invoke.createGrtPerpsMarket"]

[invoke.setPerpsGrtMaxLiquidationParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxLiquidationParameters"
args = [
    "<%= settings.perpsGrtMarketId %>",
    "<%= parseEther(settings.perpsGrtMaxLiquidationLimitAccumulationMultiplier) %>",
    "<%= settings.perpsGrtMaxSecondsInLiquidationWindow %>",
    "<%= parseEther(settings.perpsGrtMaxLiquidationPd) %>",
    "<%= settings.perpsGrtEndorsedLiquidator %>",
]
depends = ["invoke.createGrtPerpsMarket"]

[invoke.setPerpsGrtLiquidationParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLiquidationParameters"
args = [
    "<%= settings.perpsGrtMarketId %>",
    "<%= parseEther(settings.perpsGrtInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsGrtMinimumInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsGrtMaintenanceMarginScalar) %>",
    "<%= parseEther(settings.perpsGrtFlagRewardRatioD18) %>",
    "<%= parseEther(settings.perpsGrtMinimumPositionMargin) %>",
]
depends = ["invoke.createGrtPerpsMarket"]

[invoke.setPerpsGrtLockedOiRatio]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLockedOiRatio"
args = ["<%= settings.perpsGrtMarketId %>", "<%= parseEther(settings.perpsGrtLockedOiRatio) %>"]
depends = ["invoke.createGrtPerpsMarket"]
