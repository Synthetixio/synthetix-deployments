[setting.perpsLtcMarketId]

[setting.perpsLtcSkewScale]

[setting.perpsLtcMaxFundingVelocity]

[setting.perpsLtcMakerFeeRatio]

[setting.perpsLtcTakerFeeRatio]

[setting.perpsLtcMaxMarketSize]

[setting.perpsLtcInitialMarginRatio]

[setting.perpsLtcMaintenanceMarginFraction]

[setting.perpsLtcFlagRewardRatioD18]

[setting.perpsLtcMaxLiquidationLimitAccumulationMultiplier]

[setting.perpsLtcMaxSecondsInLiquidationWindow]

[setting.perpsLtcMaxLiquidationPd]

[setting.perpsLtcEndorsedLiquidator]

[setting.perpsLtcMinimumPositionMargin]

[setting.perpsLtcLockedOiRatio]

[invoke.createLtcPerpsMarket]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "createMarket"
args = ["<%= settings.perpsLtcMarketId %>", "Litecoin", "LTC"]

[invoke.setPerpsPriceLtc]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "updatePriceData"
args = [
    "<%= settings.perpsLtcMarketId %>",
    "<%= extras.ltc_oracle_id %>",
    "<%= settings.bigCapStrictStalenessTolerance %>",
]
depends = ["invoke.createLtcPerpsMarket"]

# Do not modify this step. Edit [invoke.setPerpsLtcSettlementStrategy] instead.
[invoke.addPerpsLtcSettlementStrategy]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "addSettlementStrategy"
args = [
    "<%= settings.perpsLtcMarketId %>",
    { strategyType = "0", settlementDelay = "0", settlementWindowDuration = "1", priceVerificationContract = "0x0000000000000000000000000000000000000000", feedId = "0x0000000000000000000000000000000000000000000000000000000000000000", settlementReward = "0", disabled = false, commitmentPriceDelay = "0" },
]
extra.ltc_pyth_settlement_strategy.event = "SettlementStrategyAdded"
extra.ltc_pyth_settlement_strategy.arg = 2
depends = ["invoke.createLtcPerpsMarket"]

[invoke.setPerpsLtcSettlementStrategy]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setSettlementStrategy"
args = [
    "<%= settings.perpsLtcMarketId %>",
    "<%= extras.ltc_pyth_settlement_strategy %>",                                                                                                                                                                                                                                                                                                                                                                                                                         # Settlement Strategy ID
    { strategyType = "0", settlementDelay = "<%= settings.bigCapSettlementDelay %>", settlementWindowDuration = "<%= settings.bigCapSettlementWindowDuration %>", priceVerificationContract = "<%= imports.pyth_erc7412_wrapper.contracts.PythERC7412Wrapper.address %>", feedId = "<%= settings.pythLtcFeedId %>", settlementReward = "<%= parseEther(settings.settlementReward) %>", disabled = false, commitmentPriceDelay = "<%= settings.commitmentPriceDelay %>" },
]
depends = [
    'provision.perpsFactory',
    'setting.perpsLtcMarketId',
    'invoke.addPerpsLtcSettlementStrategy',
    'provision.pyth_erc7412_wrapper',
    'setting.bigCapSettlementDelay',
    'setting.bigCapSettlementWindowDuration',
    'setting.pythLtcFeedId',
    'setting.settlementReward',
    'setting.commitmentPriceDelay',
]
[invoke.setPerpsLtcFundingParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setFundingParameters"
args = [
    "<%= settings.perpsLtcMarketId %>",
    "<%= parseEther(settings.perpsLtcSkewScale) %>",
    "<%= parseEther(settings.perpsLtcMaxFundingVelocity) %>",
]
depends = ["invoke.createLtcPerpsMarket"]

[invoke.setPerpsLtcOrderFees]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setOrderFees"
args = [
    "<%= settings.perpsLtcMarketId %>",
    "<%= parseEther(settings.perpsLtcMakerFeeRatio) %>",
    "<%= parseEther(settings.perpsLtcTakerFeeRatio) %>",
]
depends = ["invoke.createLtcPerpsMarket"]

[invoke.setPerpsLtcMaxMarketSize]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketSize"
args = ["<%= settings.perpsLtcMarketId %>", "<%= parseEther(settings.perpsLtcMaxMarketSize) %>"]
depends = ["invoke.createLtcPerpsMarket"]

[invoke.setPerpsLtcMaxMarketValue]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketValue"
args = ["<%= settings.perpsLtcMarketId %>", "<%= parseEther(settings.perpsLtcMaxMarketValue) %>"]
depends = ["invoke.createLtcPerpsMarket"]

[invoke.setPerpsLtcMaxLiquidationParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxLiquidationParameters"
args = [
    "<%= settings.perpsLtcMarketId %>",
    "<%= parseEther(settings.perpsLtcMaxLiquidationLimitAccumulationMultiplier) %>",
    "<%= settings.perpsLtcMaxSecondsInLiquidationWindow %>",
    "<%= parseEther(settings.perpsLtcMaxLiquidationPd) %>",
    "<%= settings.perpsLtcEndorsedLiquidator %>",
]
depends = ["invoke.createLtcPerpsMarket"]

[invoke.setPerpsLtcLiquidationParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLiquidationParameters"
args = [
    "<%= settings.perpsLtcMarketId %>",
    "<%= parseEther(settings.perpsLtcInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsLtcMinimumInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsLtcMaintenanceMarginScalar) %>",
    "<%= parseEther(settings.perpsLtcFlagRewardRatioD18) %>",
    "<%= parseEther(settings.perpsLtcMinimumPositionMargin) %>",
]
depends = ["invoke.createLtcPerpsMarket"]

[invoke.setPerpsLtcLockedOiRatio]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLockedOiRatio"
args = ["<%= settings.perpsLtcMarketId %>", "<%= parseEther(settings.perpsLtcLockedOiRatio) %>"]
depends = ["invoke.createLtcPerpsMarket"]
