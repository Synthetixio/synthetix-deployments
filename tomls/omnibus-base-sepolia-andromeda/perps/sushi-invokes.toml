[setting.perpsSushiMarketId]

[setting.perpsSushiSkewScale]

[setting.perpsSushiMaxFundingVelocity]

[setting.perpsSushiMakerFeeRatio]

[setting.perpsSushiTakerFeeRatio]

[setting.perpsSushiMaxMarketSize]

[setting.perpsSushiInitialMarginRatio]

[setting.perpsSushiMaintenanceMarginFraction]

[setting.perpsSushiFlagRewardRatioD18]

[setting.perpsSushiMaxLiquidationLimitAccumulationMultiplier]

[setting.perpsSushiMaxSecondsInLiquidationWindow]

[setting.perpsSushiMaxLiquidationPd]

[setting.perpsSushiEndorsedLiquidator]

[setting.perpsSushiMinimumPositionMargin]

[setting.perpsSushiLockedOiRatio]

[invoke.createSushiPerpsMarket]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "createMarket"
args = ["<%= settings.perpsSushiMarketId %>", "Sushiswap", "SUSHI"]

[invoke.setPerpsPriceSushi]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "updatePriceData"
args = [
    "<%= settings.perpsSushiMarketId %>",
    "<%= extras.sushi_oracle_id %>",
    "<%= settings.bigCapStrictStalenessTolerance %>",
]
depends = ["invoke.createSushiPerpsMarket"]

# Do not modify this step. Edit [invoke.setPerpsSushiSettlementStrategy] instead.
[invoke.addPerpsSushiSettlementStrategy]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "addSettlementStrategy"
args = [
    "<%= settings.perpsSushiMarketId %>",
    { strategyType = "0", settlementDelay = "0", settlementWindowDuration = "1", priceVerificationContract = "0x0000000000000000000000000000000000000000", feedId = "0x0000000000000000000000000000000000000000000000000000000000000000", settlementReward = "0", disabled = false, commitmentPriceDelay = "0" },
]
extra.sushi_pyth_settlement_strategy.event = "SettlementStrategyAdded"
extra.sushi_pyth_settlement_strategy.arg = 2
depends = ["invoke.createSushiPerpsMarket"]

[invoke.setPerpsSushiSettlementStrategy]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setSettlementStrategy"
args = [
    "<%= settings.perpsSushiMarketId %>",
    "<%= extras.sushi_pyth_settlement_strategy %>",                                                                                                                                                                                                                                                                                                                                                                                                                         # Settlement Strategy ID
    { strategyType = "0", settlementDelay = "<%= settings.bigCapSettlementDelay %>", settlementWindowDuration = "<%= settings.bigCapSettlementWindowDuration %>", priceVerificationContract = "<%= imports.pyth_erc7412_wrapper.contracts.PythERC7412Wrapper.address %>", feedId = "<%= settings.pythSushiFeedId %>", settlementReward = "<%= parseEther(settings.settlementReward) %>", disabled = false, commitmentPriceDelay = "<%= settings.commitmentPriceDelay %>" },
]
depends = [
    'provision.perpsLowCapFactory',
    'setting.perpsSushiMarketId',
    'invoke.addPerpsSushiSettlementStrategy',
    'provision.pyth_erc7412_wrapper',
    'setting.bigCapSettlementDelay',
    'setting.bigCapSettlementWindowDuration',
    'setting.pythSushiFeedId',
    'setting.settlementReward',
    'setting.commitmentPriceDelay',
]
[invoke.setPerpsSushiFundingParameters]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setFundingParameters"
args = [
    "<%= settings.perpsSushiMarketId %>",
    "<%= parseEther(settings.perpsSushiSkewScale) %>",
    "<%= parseEther(settings.perpsSushiMaxFundingVelocity) %>",
]
depends = ["invoke.createSushiPerpsMarket"]

[invoke.setPerpsSushiOrderFees]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setOrderFees"
args = [
    "<%= settings.perpsSushiMarketId %>",
    "<%= parseEther(settings.perpsSushiMakerFeeRatio) %>",
    "<%= parseEther(settings.perpsSushiTakerFeeRatio) %>",
]
depends = ["invoke.createSushiPerpsMarket"]

[invoke.setPerpsSushiMaxMarketSize]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketSize"
args = ["<%= settings.perpsSushiMarketId %>", "<%= parseEther(settings.perpsSushiMaxMarketSize) %>"]
depends = ["invoke.createSushiPerpsMarket"]

[invoke.setPerpsSushiMaxMarketValue]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketValue"
args = [
    "<%= settings.perpsSushiMarketId %>",
    "<%= parseEther(settings.perpsSushiMaxMarketValue) %>",
]
depends = ["invoke.createSushiPerpsMarket"]

[invoke.setPerpsSushiMaxLiquidationParameters]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxLiquidationParameters"
args = [
    "<%= settings.perpsSushiMarketId %>",
    "<%= parseEther(settings.perpsSushiMaxLiquidationLimitAccumulationMultiplier) %>",
    "<%= settings.perpsSushiMaxSecondsInLiquidationWindow %>",
    "<%= parseEther(settings.perpsSushiMaxLiquidationPd) %>",
    "<%= settings.perpsSushiEndorsedLiquidator %>",
]
depends = ["invoke.createSushiPerpsMarket"]

[invoke.setPerpsSushiLiquidationParameters]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLiquidationParameters"
args = [
    "<%= settings.perpsSushiMarketId %>",
    "<%= parseEther(settings.perpsSushiInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsSushiMinimumInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsSushiMaintenanceMarginScalar) %>",
    "<%= parseEther(settings.perpsSushiFlagRewardRatioD18) %>",
    "<%= parseEther(settings.perpsSushiMinimumPositionMargin) %>",
]
depends = ["invoke.createSushiPerpsMarket"]

[invoke.setPerpsSushiLockedOiRatio]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLockedOiRatio"
args = ["<%= settings.perpsSushiMarketId %>", "<%= parseEther(settings.perpsSushiLockedOiRatio) %>"]
depends = ["invoke.createSushiPerpsMarket"]
