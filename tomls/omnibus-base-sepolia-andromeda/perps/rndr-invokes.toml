[setting.perpsRndrMarketId]

[setting.perpsRndrSkewScale]

[setting.perpsRndrMaxFundingVelocity]

[setting.perpsRndrMakerFeeRatio]

[setting.perpsRndrTakerFeeRatio]

[setting.perpsRndrMaxMarketSize]

[setting.perpsRndrInitialMarginRatio]

[setting.perpsRndrMaintenanceMarginFraction]

[setting.perpsRndrFlagRewardRatioD18]

[setting.perpsRndrMaxLiquidationLimitAccumulationMultiplier]

[setting.perpsRndrMaxSecondsInLiquidationWindow]

[setting.perpsRndrMaxLiquidationPd]

[setting.perpsRndrEndorsedLiquidator]

[setting.perpsRndrMinimumPositionMargin]

[setting.perpsRndrLockedOiRatio]

[invoke.createRndrPerpsMarket]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "createMarket"
args = ["<%= settings.perpsRndrMarketId %>", "Render", "RNDR"]

[invoke.setPerpsPriceRndr]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "updatePriceData"
args = [
    "<%= settings.perpsRndrMarketId %>",
    "<%= extras.rndr_oracle_id %>",
    "<%= settings.bigCapStrictStalenessTolerance %>",
]
depends = ["invoke.createRndrPerpsMarket"]

# Do not modify this step. Edit [invoke.setPerpsRndrSettlementStrategy] instead.
[invoke.addPerpsRndrSettlementStrategy]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "addSettlementStrategy"
args = [
    "<%= settings.perpsRndrMarketId %>",
    { strategyType = "0", settlementDelay = "0", settlementWindowDuration = "1", priceVerificationContract = "0x0000000000000000000000000000000000000000", feedId = "0x0000000000000000000000000000000000000000000000000000000000000000", settlementReward = "0", disabled = false, commitmentPriceDelay = "0" },
]
extra.rndr_pyth_settlement_strategy.event = "SettlementStrategyAdded"
extra.rndr_pyth_settlement_strategy.arg = 2
depends = ["invoke.createRndrPerpsMarket"]

[invoke.setPerpsRndrSettlementStrategy]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setSettlementStrategy"
args = [
    "<%= settings.perpsRndrMarketId %>",
    "<%= extras.rndr_pyth_settlement_strategy %>",                                                                                                                                                                                                                                                                                                                                                                                                                         # Settlement Strategy ID
    { strategyType = "0", settlementDelay = "<%= settings.bigCapSettlementDelay %>", settlementWindowDuration = "<%= settings.bigCapSettlementWindowDuration %>", priceVerificationContract = "<%= imports.pyth_erc7412_wrapper.contracts.PythERC7412Wrapper.address %>", feedId = "<%= settings.pythRndrFeedId %>", settlementReward = "<%= parseEther(settings.settlementReward) %>", disabled = false, commitmentPriceDelay = "<%= settings.commitmentPriceDelay %>" },
]
depends = [
    'provision.perpsFactory',
    'setting.perpsRndrMarketId',
    'invoke.addPerpsRndrSettlementStrategy',
    'provision.pyth_erc7412_wrapper',
    'setting.bigCapSettlementDelay',
    'setting.bigCapSettlementWindowDuration',
    'setting.pythRndrFeedId',
    'setting.settlementReward',
    'setting.commitmentPriceDelay',
]
[invoke.setPerpsRndrFundingParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setFundingParameters"
args = [
    "<%= settings.perpsRndrMarketId %>",
    "<%= parseEther(settings.perpsRndrSkewScale) %>",
    "<%= parseEther(settings.perpsRndrMaxFundingVelocity) %>",
]
depends = ["invoke.createRndrPerpsMarket"]

[invoke.setPerpsRndrOrderFees]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setOrderFees"
args = [
    "<%= settings.perpsRndrMarketId %>",
    "<%= parseEther(settings.perpsRndrMakerFeeRatio) %>",
    "<%= parseEther(settings.perpsRndrTakerFeeRatio) %>",
]
depends = ["invoke.createRndrPerpsMarket"]

[invoke.setPerpsRndrMaxMarketSize]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketSize"
args = ["<%= settings.perpsRndrMarketId %>", "<%= parseEther(settings.perpsRndrMaxMarketSize) %>"]
depends = ["invoke.createRndrPerpsMarket"]

[invoke.setPerpsRndrMaxMarketValue]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketValue"
args = ["<%= settings.perpsRndrMarketId %>", "<%= parseEther(settings.perpsRndrMaxMarketValue) %>"]
depends = ["invoke.createRndrPerpsMarket"]

[invoke.setPerpsRndrMaxLiquidationParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxLiquidationParameters"
args = [
    "<%= settings.perpsRndrMarketId %>",
    "<%= parseEther(settings.perpsRndrMaxLiquidationLimitAccumulationMultiplier) %>",
    "<%= settings.perpsRndrMaxSecondsInLiquidationWindow %>",
    "<%= parseEther(settings.perpsRndrMaxLiquidationPd) %>",
    "<%= settings.perpsRndrEndorsedLiquidator %>",
]
depends = ["invoke.createRndrPerpsMarket"]

[invoke.setPerpsRndrLiquidationParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLiquidationParameters"
args = [
    "<%= settings.perpsRndrMarketId %>",
    "<%= parseEther(settings.perpsRndrInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsRndrMinimumInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsRndrMaintenanceMarginScalar) %>",
    "<%= parseEther(settings.perpsRndrFlagRewardRatioD18) %>",
    "<%= parseEther(settings.perpsRndrMinimumPositionMargin) %>",
]
depends = ["invoke.createRndrPerpsMarket"]

[invoke.setPerpsRndrLockedOiRatio]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLockedOiRatio"
args = ["<%= settings.perpsRndrMarketId %>", "<%= parseEther(settings.perpsRndrLockedOiRatio) %>"]
depends = ["invoke.createRndrPerpsMarket"]
