[setting.perpsSeiMarketId]

[setting.perpsSeiSkewScale]

[setting.perpsSeiMaxFundingVelocity]

[setting.perpsSeiMakerFeeRatio]

[setting.perpsSeiTakerFeeRatio]

[setting.perpsSeiMaxMarketSize]

[setting.perpsSeiInitialMarginRatio]

[setting.perpsSeiMaintenanceMarginFraction]

[setting.perpsSeiFlagRewardRatioD18]

[setting.perpsSeiMaxLiquidationLimitAccumulationMultiplier]

[setting.perpsSeiMaxSecondsInLiquidationWindow]

[setting.perpsSeiMaxLiquidationPd]

[setting.perpsSeiEndorsedLiquidator]

[setting.perpsSeiMinimumPositionMargin]

[setting.perpsSeiLockedOiRatio]

[invoke.createSeiPerpsMarket]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "createMarket"
args = ["<%= settings.perpsSeiMarketId %>", "Sei", "SEI"]

[invoke.setPerpsPriceSei]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "updatePriceData"
args = [
    "<%= settings.perpsSeiMarketId %>",
    "<%= extras.sei_oracle_id %>",
    "<%= settings.bigCapStrictStalenessTolerance %>",
]
depends = ["invoke.createSeiPerpsMarket"]

# Do not modify this step. Edit [invoke.setPerpsSeiSettlementStrategy] instead.
[invoke.addPerpsSeiSettlementStrategy]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "addSettlementStrategy"
args = [
    "<%= settings.perpsSeiMarketId %>",
    { strategyType = "0", settlementDelay = "0", settlementWindowDuration = "1", priceVerificationContract = "0x0000000000000000000000000000000000000000", feedId = "0x0000000000000000000000000000000000000000000000000000000000000000", settlementReward = "0", disabled = false, commitmentPriceDelay = "0" },
]
extra.sei_pyth_settlement_strategy.event = "SettlementStrategyAdded"
extra.sei_pyth_settlement_strategy.arg = 2
depends = ["invoke.createSeiPerpsMarket"]

[invoke.setPerpsSeiSettlementStrategy]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setSettlementStrategy"
args = [
    "<%= settings.perpsSeiMarketId %>",
    "<%= extras.sei_pyth_settlement_strategy %>",                                                                                                                                                                                                                                                                                                                                                                                                                         # Settlement Strategy ID
    { strategyType = "0", settlementDelay = "<%= settings.bigCapSettlementDelay %>", settlementWindowDuration = "<%= settings.bigCapSettlementWindowDuration %>", priceVerificationContract = "<%= imports.pyth_erc7412_wrapper.contracts.PythERC7412Wrapper.address %>", feedId = "<%= settings.pythSeiFeedId %>", settlementReward = "<%= parseEther(settings.settlementReward) %>", disabled = false, commitmentPriceDelay = "<%= settings.commitmentPriceDelay %>" },
]
depends = [
    'provision.perpsLowCapFactory',
    'setting.perpsSeiMarketId',
    'invoke.addPerpsSeiSettlementStrategy',
    'provision.pyth_erc7412_wrapper',
    'setting.bigCapSettlementDelay',
    'setting.bigCapSettlementWindowDuration',
    'setting.pythSeiFeedId',
    'setting.settlementReward',
    'setting.commitmentPriceDelay',
]
[invoke.setPerpsSeiFundingParameters]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setFundingParameters"
args = [
    "<%= settings.perpsSeiMarketId %>",
    "<%= parseEther(settings.perpsSeiSkewScale) %>",
    "<%= parseEther(settings.perpsSeiMaxFundingVelocity) %>",
]
depends = ["invoke.createSeiPerpsMarket"]

[invoke.setPerpsSeiOrderFees]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setOrderFees"
args = [
    "<%= settings.perpsSeiMarketId %>",
    "<%= parseEther(settings.perpsSeiMakerFeeRatio) %>",
    "<%= parseEther(settings.perpsSeiTakerFeeRatio) %>",
]
depends = ["invoke.createSeiPerpsMarket"]

[invoke.setPerpsSeiMaxMarketSize]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketSize"
args = ["<%= settings.perpsSeiMarketId %>", "<%= parseEther(settings.perpsSeiMaxMarketSize) %>"]
depends = ["invoke.createSeiPerpsMarket"]

[invoke.setPerpsSeiMaxMarketValue]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketValue"
args = ["<%= settings.perpsSeiMarketId %>", "<%= parseEther(settings.perpsSeiMaxMarketValue) %>"]
depends = ["invoke.createSeiPerpsMarket"]

[invoke.setPerpsSeiMaxLiquidationParameters]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxLiquidationParameters"
args = [
    "<%= settings.perpsSeiMarketId %>",
    "<%= parseEther(settings.perpsSeiMaxLiquidationLimitAccumulationMultiplier) %>",
    "<%= settings.perpsSeiMaxSecondsInLiquidationWindow %>",
    "<%= parseEther(settings.perpsSeiMaxLiquidationPd) %>",
    "<%= settings.perpsSeiEndorsedLiquidator %>",
]
depends = ["invoke.createSeiPerpsMarket"]

[invoke.setPerpsSeiLiquidationParameters]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLiquidationParameters"
args = [
    "<%= settings.perpsSeiMarketId %>",
    "<%= parseEther(settings.perpsSeiInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsSeiMinimumInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsSeiMaintenanceMarginScalar) %>",
    "<%= parseEther(settings.perpsSeiFlagRewardRatioD18) %>",
    "<%= parseEther(settings.perpsSeiMinimumPositionMargin) %>",
]
depends = ["invoke.createSeiPerpsMarket"]

[invoke.setPerpsSeiLockedOiRatio]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLockedOiRatio"
args = ["<%= settings.perpsSeiMarketId %>", "<%= parseEther(settings.perpsSeiLockedOiRatio) %>"]
depends = ["invoke.createSeiPerpsMarket"]
