[setting.perpsInjMarketId]

[setting.perpsInjSkewScale]

[setting.perpsInjMaxFundingVelocity]

[setting.perpsInjMakerFeeRatio]

[setting.perpsInjTakerFeeRatio]

[setting.perpsInjMaxMarketSize]

[setting.perpsInjInitialMarginRatio]

[setting.perpsInjMaintenanceMarginFraction]

[setting.perpsInjFlagRewardRatioD18]

[setting.perpsInjMaxLiquidationLimitAccumulationMultiplier]

[setting.perpsInjMaxSecondsInLiquidationWindow]

[setting.perpsInjMaxLiquidationPd]

[setting.perpsInjEndorsedLiquidator]

[setting.perpsInjMinimumPositionMargin]

[setting.perpsInjLockedOiRatio]

[invoke.createInjPerpsMarket]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "createMarket"
args = ["<%= settings.perpsInjMarketId %>", "Injective", "INJ"]

[invoke.setPerpsPriceInj]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "updatePriceData"
args = [
    "<%= settings.perpsInjMarketId %>",
    "<%= extras.inj_oracle_id %>",
    "<%= settings.bigCapStrictStalenessTolerance %>",
]
depends = ["invoke.createInjPerpsMarket"]

# Do not modify this step. Edit [invoke.setPerpsInjSettlementStrategy] instead.
[invoke.addPerpsInjSettlementStrategy]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "addSettlementStrategy"
args = [
    "<%= settings.perpsInjMarketId %>",
    { strategyType = "0", settlementDelay = "0", settlementWindowDuration = "1", priceVerificationContract = "0x0000000000000000000000000000000000000000", feedId = "0x0000000000000000000000000000000000000000000000000000000000000000", settlementReward = "0", disabled = false, commitmentPriceDelay = "0" },
]
extra.inj_pyth_settlement_strategy.event = "SettlementStrategyAdded"
extra.inj_pyth_settlement_strategy.arg = 2
depends = ["invoke.createInjPerpsMarket"]

[invoke.setPerpsInjSettlementStrategy]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setSettlementStrategy"
args = [
    "<%= settings.perpsInjMarketId %>",
    "<%= extras.inj_pyth_settlement_strategy %>",                                                                                                                                                                                                                                                                                                                                                                                                                         # Settlement Strategy ID
    { strategyType = "0", settlementDelay = "<%= settings.bigCapSettlementDelay %>", settlementWindowDuration = "<%= settings.bigCapSettlementWindowDuration %>", priceVerificationContract = "<%= imports.pyth_erc7412_wrapper.contracts.PythERC7412Wrapper.address %>", feedId = "<%= settings.pythInjFeedId %>", settlementReward = "<%= parseEther(settings.settlementReward) %>", disabled = false, commitmentPriceDelay = "<%= settings.commitmentPriceDelay %>" },
]
depends = [
    'provision.perpsFactory',
    'setting.perpsInjMarketId',
    'invoke.addPerpsInjSettlementStrategy',
    'provision.pyth_erc7412_wrapper',
    'setting.bigCapSettlementDelay',
    'setting.bigCapSettlementWindowDuration',
    'setting.pythInjFeedId',
    'setting.settlementReward',
    'setting.commitmentPriceDelay',
]
[invoke.setPerpsInjFundingParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setFundingParameters"
args = [
    "<%= settings.perpsInjMarketId %>",
    "<%= parseEther(settings.perpsInjSkewScale) %>",
    "<%= parseEther(settings.perpsInjMaxFundingVelocity) %>",
]
depends = ["invoke.createInjPerpsMarket"]

[invoke.setPerpsInjOrderFees]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setOrderFees"
args = [
    "<%= settings.perpsInjMarketId %>",
    "<%= parseEther(settings.perpsInjMakerFeeRatio) %>",
    "<%= parseEther(settings.perpsInjTakerFeeRatio) %>",
]
depends = ["invoke.createInjPerpsMarket"]

[invoke.setPerpsInjMaxMarketSize]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketSize"
args = ["<%= settings.perpsInjMarketId %>", "<%= parseEther(settings.perpsInjMaxMarketSize) %>"]
depends = ["invoke.createInjPerpsMarket"]

[invoke.setPerpsInjMaxMarketValue]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketValue"
args = ["<%= settings.perpsInjMarketId %>", "<%= parseEther(settings.perpsInjMaxMarketValue) %>"]
depends = ["invoke.createInjPerpsMarket"]

[invoke.setPerpsInjMaxLiquidationParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxLiquidationParameters"
args = [
    "<%= settings.perpsInjMarketId %>",
    "<%= parseEther(settings.perpsInjMaxLiquidationLimitAccumulationMultiplier) %>",
    "<%= settings.perpsInjMaxSecondsInLiquidationWindow %>",
    "<%= parseEther(settings.perpsInjMaxLiquidationPd) %>",
    "<%= settings.perpsInjEndorsedLiquidator %>",
]
depends = ["invoke.createInjPerpsMarket"]

[invoke.setPerpsInjLiquidationParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLiquidationParameters"
args = [
    "<%= settings.perpsInjMarketId %>",
    "<%= parseEther(settings.perpsInjInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsInjMinimumInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsInjMaintenanceMarginScalar) %>",
    "<%= parseEther(settings.perpsInjFlagRewardRatioD18) %>",
    "<%= parseEther(settings.perpsInjMinimumPositionMargin) %>",
]
depends = ["invoke.createInjPerpsMarket"]

[invoke.setPerpsInjLockedOiRatio]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLockedOiRatio"
args = ["<%= settings.perpsInjMarketId %>", "<%= parseEther(settings.perpsInjLockedOiRatio) %>"]
depends = ["invoke.createInjPerpsMarket"]
