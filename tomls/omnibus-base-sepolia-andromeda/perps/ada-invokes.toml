[setting.perpsAdaMarketId]

[setting.perpsAdaSkewScale]

[setting.perpsAdaMaxFundingVelocity]

[setting.perpsAdaMakerFeeRatio]

[setting.perpsAdaTakerFeeRatio]

[setting.perpsAdaMaxMarketSize]

[setting.perpsAdaInitialMarginRatio]

[setting.perpsAdaMaintenanceMarginFraction]

[setting.perpsAdaFlagRewardRatioD18]

[setting.perpsAdaMaxLiquidationLimitAccumulationMultiplier]

[setting.perpsAdaMaxSecondsInLiquidationWindow]

[setting.perpsAdaMaxLiquidationPd]

[setting.perpsAdaEndorsedLiquidator]

[setting.perpsAdaMinimumPositionMargin]

[setting.perpsAdaLockedOiRatio]

[invoke.createAdaPerpsMarket]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "createMarket"
args = ["<%= settings.perpsAdaMarketId %>", "Cardano", "ADA"]

[invoke.setPerpsPriceAda]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "updatePriceData"
args = [
    "<%= settings.perpsAdaMarketId %>",
    "<%= extras.ada_oracle_id %>",
    "<%= settings.bigCapStrictStalenessTolerance %>",
]
depends = ["invoke.createAdaPerpsMarket"]

# Do not modify this step. Edit [invoke.setPerpsAdaSettlementStrategy] instead.
[invoke.addPerpsAdaSettlementStrategy]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "addSettlementStrategy"
args = [
    "<%= settings.perpsAdaMarketId %>",
    { strategyType = "0", settlementDelay = "0", settlementWindowDuration = "1", priceVerificationContract = "0x0000000000000000000000000000000000000000", feedId = "0x0000000000000000000000000000000000000000000000000000000000000000", settlementReward = "0", disabled = false, commitmentPriceDelay = "0" },
]
extra.ada_pyth_settlement_strategy.event = "SettlementStrategyAdded"
extra.ada_pyth_settlement_strategy.arg = 2
depends = ["invoke.createAdaPerpsMarket"]

[invoke.setPerpsAdaSettlementStrategy]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setSettlementStrategy"
args = [
    "<%= settings.perpsAdaMarketId %>",
    "<%= extras.ada_pyth_settlement_strategy %>",                                                                                                                                                                                                                                                                                                                                                                                                                         # Settlement Strategy ID
    { strategyType = "0", settlementDelay = "<%= settings.bigCapSettlementDelay %>", settlementWindowDuration = "<%= settings.bigCapSettlementWindowDuration %>", priceVerificationContract = "<%= imports.pyth_erc7412_wrapper.contracts.PythERC7412Wrapper.address %>", feedId = "<%= settings.pythAdaFeedId %>", settlementReward = "<%= parseEther(settings.settlementReward) %>", disabled = false, commitmentPriceDelay = "<%= settings.commitmentPriceDelay %>" },
]
depends = [
    'provision.perpsLowCapFactory',
    'setting.perpsAdaMarketId',
    'invoke.addPerpsAdaSettlementStrategy',
    'provision.pyth_erc7412_wrapper',
    'setting.bigCapSettlementDelay',
    'setting.bigCapSettlementWindowDuration',
    'setting.pythAdaFeedId',
    'setting.settlementReward',
    'setting.commitmentPriceDelay',
]
[invoke.setPerpsAdaFundingParameters]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setFundingParameters"
args = [
    "<%= settings.perpsAdaMarketId %>",
    "<%= parseEther(settings.perpsAdaSkewScale) %>",
    "<%= parseEther(settings.perpsAdaMaxFundingVelocity) %>",
]
depends = ["invoke.createAdaPerpsMarket"]

[invoke.setPerpsAdaOrderFees]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setOrderFees"
args = [
    "<%= settings.perpsAdaMarketId %>",
    "<%= parseEther(settings.perpsAdaMakerFeeRatio) %>",
    "<%= parseEther(settings.perpsAdaTakerFeeRatio) %>",
]
depends = ["invoke.createAdaPerpsMarket"]

[invoke.setPerpsAdaMaxMarketSize]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketSize"
args = ["<%= settings.perpsAdaMarketId %>", "<%= parseEther(settings.perpsAdaMaxMarketSize) %>"]
depends = ["invoke.createAdaPerpsMarket"]

[invoke.setPerpsAdaMaxMarketValue]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketValue"
args = ["<%= settings.perpsAdaMarketId %>", "<%= parseEther(settings.perpsAdaMaxMarketValue) %>"]
depends = ["invoke.createAdaPerpsMarket"]

[invoke.setPerpsAdaMaxLiquidationParameters]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxLiquidationParameters"
args = [
    "<%= settings.perpsAdaMarketId %>",
    "<%= parseEther(settings.perpsAdaMaxLiquidationLimitAccumulationMultiplier) %>",
    "<%= settings.perpsAdaMaxSecondsInLiquidationWindow %>",
    "<%= parseEther(settings.perpsAdaMaxLiquidationPd) %>",
    "<%= settings.perpsAdaEndorsedLiquidator %>",
]
depends = ["invoke.createAdaPerpsMarket"]

[invoke.setPerpsAdaLiquidationParameters]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLiquidationParameters"
args = [
    "<%= settings.perpsAdaMarketId %>",
    "<%= parseEther(settings.perpsAdaInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsAdaMinimumInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsAdaMaintenanceMarginScalar) %>",
    "<%= parseEther(settings.perpsAdaFlagRewardRatioD18) %>",
    "<%= parseEther(settings.perpsAdaMinimumPositionMargin) %>",
]
depends = ["invoke.createAdaPerpsMarket"]

[invoke.setPerpsAdaLockedOiRatio]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLockedOiRatio"
args = ["<%= settings.perpsAdaMarketId %>", "<%= parseEther(settings.perpsAdaLockedOiRatio) %>"]
depends = ["invoke.createAdaPerpsMarket"]
