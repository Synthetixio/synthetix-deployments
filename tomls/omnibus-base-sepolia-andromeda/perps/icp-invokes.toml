[setting.perpsIcpMarketId]

[setting.perpsIcpSkewScale]

[setting.perpsIcpMaxFundingVelocity]

[setting.perpsIcpMakerFeeRatio]

[setting.perpsIcpTakerFeeRatio]

[setting.perpsIcpMaxMarketSize]

[setting.perpsIcpInitialMarginRatio]

[setting.perpsIcpMaintenanceMarginFraction]

[setting.perpsIcpFlagRewardRatioD18]

[setting.perpsIcpMaxLiquidationLimitAccumulationMultiplier]

[setting.perpsIcpMaxSecondsInLiquidationWindow]

[setting.perpsIcpMaxLiquidationPd]

[setting.perpsIcpEndorsedLiquidator]

[setting.perpsIcpMinimumPositionMargin]

[setting.perpsIcpLockedOiRatio]

[invoke.createIcpPerpsMarket]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "createMarket"
args = ["<%= settings.perpsIcpMarketId %>", "Internet Computer", "ICP"]

[invoke.setPerpsPriceIcp]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "updatePriceData"
args = [
    "<%= settings.perpsIcpMarketId %>",
    "<%= extras.icp_oracle_id %>",
    "<%= settings.bigCapStrictStalenessTolerance %>",
]
depends = ["invoke.createIcpPerpsMarket"]

# Do not modify this step. Edit [invoke.setPerpsIcpSettlementStrategy] instead.
[invoke.addPerpsIcpSettlementStrategy]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "addSettlementStrategy"
args = [
    "<%= settings.perpsIcpMarketId %>",
    { strategyType = "0", settlementDelay = "0", settlementWindowDuration = "1", priceVerificationContract = "0x0000000000000000000000000000000000000000", feedId = "0x0000000000000000000000000000000000000000000000000000000000000000", settlementReward = "0", disabled = false, commitmentPriceDelay = "0" },
]
extra.icp_pyth_settlement_strategy.event = "SettlementStrategyAdded"
extra.icp_pyth_settlement_strategy.arg = 2
depends = ["invoke.createIcpPerpsMarket"]

[invoke.setPerpsIcpSettlementStrategy]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setSettlementStrategy"
args = [
    "<%= settings.perpsIcpMarketId %>",
    "<%= extras.icp_pyth_settlement_strategy %>",                                                                                                                                                                                                                                                                                                                                                                                                                         # Settlement Strategy ID
    { strategyType = "0", settlementDelay = "<%= settings.bigCapSettlementDelay %>", settlementWindowDuration = "<%= settings.bigCapSettlementWindowDuration %>", priceVerificationContract = "<%= imports.pyth_erc7412_wrapper.contracts.PythERC7412Wrapper.address %>", feedId = "<%= settings.pythIcpFeedId %>", settlementReward = "<%= parseEther(settings.settlementReward) %>", disabled = false, commitmentPriceDelay = "<%= settings.commitmentPriceDelay %>" },
]
depends = [
    'provision.perpsLowCapFactory',
    'setting.perpsIcpMarketId',
    'invoke.addPerpsIcpSettlementStrategy',
    'provision.pyth_erc7412_wrapper',
    'setting.bigCapSettlementDelay',
    'setting.bigCapSettlementWindowDuration',
    'setting.pythIcpFeedId',
    'setting.settlementReward',
    'setting.commitmentPriceDelay',
]
[invoke.setPerpsIcpFundingParameters]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setFundingParameters"
args = [
    "<%= settings.perpsIcpMarketId %>",
    "<%= parseEther(settings.perpsIcpSkewScale) %>",
    "<%= parseEther(settings.perpsIcpMaxFundingVelocity) %>",
]
depends = ["invoke.createIcpPerpsMarket"]

[invoke.setPerpsIcpOrderFees]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setOrderFees"
args = [
    "<%= settings.perpsIcpMarketId %>",
    "<%= parseEther(settings.perpsIcpMakerFeeRatio) %>",
    "<%= parseEther(settings.perpsIcpTakerFeeRatio) %>",
]
depends = ["invoke.createIcpPerpsMarket"]

[invoke.setPerpsIcpMaxMarketSize]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketSize"
args = ["<%= settings.perpsIcpMarketId %>", "<%= parseEther(settings.perpsIcpMaxMarketSize) %>"]
depends = ["invoke.createIcpPerpsMarket"]

[invoke.setPerpsIcpMaxMarketValue]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketValue"
args = ["<%= settings.perpsIcpMarketId %>", "<%= parseEther(settings.perpsIcpMaxMarketValue) %>"]
depends = ["invoke.createIcpPerpsMarket"]

[invoke.setPerpsIcpMaxLiquidationParameters]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxLiquidationParameters"
args = [
    "<%= settings.perpsIcpMarketId %>",
    "<%= parseEther(settings.perpsIcpMaxLiquidationLimitAccumulationMultiplier) %>",
    "<%= settings.perpsIcpMaxSecondsInLiquidationWindow %>",
    "<%= parseEther(settings.perpsIcpMaxLiquidationPd) %>",
    "<%= settings.perpsIcpEndorsedLiquidator %>",
]
depends = ["invoke.createIcpPerpsMarket"]

[invoke.setPerpsIcpLiquidationParameters]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLiquidationParameters"
args = [
    "<%= settings.perpsIcpMarketId %>",
    "<%= parseEther(settings.perpsIcpInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsIcpMinimumInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsIcpMaintenanceMarginScalar) %>",
    "<%= parseEther(settings.perpsIcpFlagRewardRatioD18) %>",
    "<%= parseEther(settings.perpsIcpMinimumPositionMargin) %>",
]
depends = ["invoke.createIcpPerpsMarket"]

[invoke.setPerpsIcpLockedOiRatio]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLockedOiRatio"
args = ["<%= settings.perpsIcpMarketId %>", "<%= parseEther(settings.perpsIcpLockedOiRatio) %>"]
depends = ["invoke.createIcpPerpsMarket"]
