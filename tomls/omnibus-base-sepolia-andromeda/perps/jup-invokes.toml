[setting.perpsJupMarketId]

[setting.perpsJupSkewScale]

[setting.perpsJupMaxFundingVelocity]

[setting.perpsJupMakerFeeRatio]

[setting.perpsJupTakerFeeRatio]

[setting.perpsJupMaxMarketSize]

[setting.perpsJupInitialMarginRatio]

[setting.perpsJupMaintenanceMarginFraction]

[setting.perpsJupFlagRewardRatioD18]

[setting.perpsJupMaxLiquidationLimitAccumulationMultiplier]

[setting.perpsJupMaxSecondsInLiquidationWindow]

[setting.perpsJupMaxLiquidationPd]

[setting.perpsJupEndorsedLiquidator]

[setting.perpsJupMinimumPositionMargin]

[setting.perpsJupLockedOiRatio]

[invoke.createJupPerpsMarket]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "createMarket"
args = ["<%= settings.perpsJupMarketId %>", "Jupiter", "JUP"]

[invoke.setPerpsPriceJup]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "updatePriceData"
args = [
    "<%= settings.perpsJupMarketId %>",
    "<%= extras.jup_oracle_id %>",
    "<%= settings.bigCapStrictStalenessTolerance %>",
]
depends = ["invoke.createJupPerpsMarket"]

# Do not modify this step. Edit [invoke.setPerpsJupSettlementStrategy] instead.
[invoke.addPerpsJupSettlementStrategy]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "addSettlementStrategy"
args = [
    "<%= settings.perpsJupMarketId %>",
    { strategyType = "0", settlementDelay = "0", settlementWindowDuration = "1", priceVerificationContract = "0x0000000000000000000000000000000000000000", feedId = "0x0000000000000000000000000000000000000000000000000000000000000000", settlementReward = "0", disabled = false, commitmentPriceDelay = "0" },
]
extra.jup_pyth_settlement_strategy.event = "SettlementStrategyAdded"
extra.jup_pyth_settlement_strategy.arg = 2
depends = ["invoke.createJupPerpsMarket"]

[invoke.setPerpsJupSettlementStrategy]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setSettlementStrategy"
args = [
    "<%= settings.perpsJupMarketId %>",
    "<%= extras.jup_pyth_settlement_strategy %>",                                                                                                                                                                                                                                                                                                                                                                                                                         # Settlement Strategy ID
    { strategyType = "0", settlementDelay = "<%= settings.bigCapSettlementDelay %>", settlementWindowDuration = "<%= settings.bigCapSettlementWindowDuration %>", priceVerificationContract = "<%= imports.pyth_erc7412_wrapper.contracts.PythERC7412Wrapper.address %>", feedId = "<%= settings.pythJupFeedId %>", settlementReward = "<%= parseEther(settings.settlementReward) %>", disabled = false, commitmentPriceDelay = "<%= settings.commitmentPriceDelay %>" },
]
depends = [
    'provision.perpsLowCapFactory',
    'setting.perpsJupMarketId',
    'invoke.addPerpsJupSettlementStrategy',
    'provision.pyth_erc7412_wrapper',
    'setting.bigCapSettlementDelay',
    'setting.bigCapSettlementWindowDuration',
    'setting.pythJupFeedId',
    'setting.settlementReward',
    'setting.commitmentPriceDelay',
]
[invoke.setPerpsJupFundingParameters]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setFundingParameters"
args = [
    "<%= settings.perpsJupMarketId %>",
    "<%= parseEther(settings.perpsJupSkewScale) %>",
    "<%= parseEther(settings.perpsJupMaxFundingVelocity) %>",
]
depends = ["invoke.createJupPerpsMarket"]

[invoke.setPerpsJupOrderFees]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setOrderFees"
args = [
    "<%= settings.perpsJupMarketId %>",
    "<%= parseEther(settings.perpsJupMakerFeeRatio) %>",
    "<%= parseEther(settings.perpsJupTakerFeeRatio) %>",
]
depends = ["invoke.createJupPerpsMarket"]

[invoke.setPerpsJupMaxMarketSize]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketSize"
args = ["<%= settings.perpsJupMarketId %>", "<%= parseEther(settings.perpsJupMaxMarketSize) %>"]
depends = ["invoke.createJupPerpsMarket"]

[invoke.setPerpsJupMaxMarketValue]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketValue"
args = ["<%= settings.perpsJupMarketId %>", "<%= parseEther(settings.perpsJupMaxMarketValue) %>"]
depends = ["invoke.createJupPerpsMarket"]

[invoke.setPerpsJupMaxLiquidationParameters]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxLiquidationParameters"
args = [
    "<%= settings.perpsJupMarketId %>",
    "<%= parseEther(settings.perpsJupMaxLiquidationLimitAccumulationMultiplier) %>",
    "<%= settings.perpsJupMaxSecondsInLiquidationWindow %>",
    "<%= parseEther(settings.perpsJupMaxLiquidationPd) %>",
    "<%= settings.perpsJupEndorsedLiquidator %>",
]
depends = ["invoke.createJupPerpsMarket"]

[invoke.setPerpsJupLiquidationParameters]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLiquidationParameters"
args = [
    "<%= settings.perpsJupMarketId %>",
    "<%= parseEther(settings.perpsJupInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsJupMinimumInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsJupMaintenanceMarginScalar) %>",
    "<%= parseEther(settings.perpsJupFlagRewardRatioD18) %>",
    "<%= parseEther(settings.perpsJupMinimumPositionMargin) %>",
]
depends = ["invoke.createJupPerpsMarket"]

[invoke.setPerpsJupLockedOiRatio]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLockedOiRatio"
args = ["<%= settings.perpsJupMarketId %>", "<%= parseEther(settings.perpsJupLockedOiRatio) %>"]
depends = ["invoke.createJupPerpsMarket"]
