[setting.perpsMemeMarketId]

[setting.perpsMemeSkewScale]

[setting.perpsMemeMaxFundingVelocity]

[setting.perpsMemeMakerFeeRatio]

[setting.perpsMemeTakerFeeRatio]

[setting.perpsMemeMaxMarketSize]

[setting.perpsMemeInitialMarginRatio]

[setting.perpsMemeMaintenanceMarginFraction]

[setting.perpsMemeFlagRewardRatioD18]

[setting.perpsMemeMaxLiquidationLimitAccumulationMultiplier]

[setting.perpsMemeMaxSecondsInLiquidationWindow]

[setting.perpsMemeMaxLiquidationPd]

[setting.perpsMemeEndorsedLiquidator]

[setting.perpsMemeMinimumPositionMargin]

[setting.perpsMemeLockedOiRatio]

[invoke.createMemePerpsMarket]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "createMarket"
args = ["<%= settings.perpsMemeMarketId %>", "Meme coin", "MEME"]

[invoke.setPerpsPriceMeme]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "updatePriceData"
args = [
    "<%= settings.perpsMemeMarketId %>",
    "<%= extras.meme_oracle_id %>",
    "<%= settings.bigCapStrictStalenessTolerance %>",
]
depends = ["invoke.createMemePerpsMarket"]

# Do not modify this step. Edit [invoke.setPerpsMemeSettlementStrategy] instead.
[invoke.addPerpsMemeSettlementStrategy]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "addSettlementStrategy"
args = [
    "<%= settings.perpsMemeMarketId %>",
    { strategyType = "0", settlementDelay = "0", settlementWindowDuration = "1", priceVerificationContract = "0x0000000000000000000000000000000000000000", feedId = "0x0000000000000000000000000000000000000000000000000000000000000000", settlementReward = "0", disabled = false, commitmentPriceDelay = "0" },
]
extra.meme_pyth_settlement_strategy.event = "SettlementStrategyAdded"
extra.meme_pyth_settlement_strategy.arg = 2
depends = ["invoke.createMemePerpsMarket"]

[invoke.setPerpsMemeSettlementStrategy]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setSettlementStrategy"
args = [
    "<%= settings.perpsMemeMarketId %>",
    "<%= extras.meme_pyth_settlement_strategy %>",                                                                                                                                                                                                                                                                                                                                                                                                                         # Settlement Strategy ID
    { strategyType = "0", settlementDelay = "<%= settings.bigCapSettlementDelay %>", settlementWindowDuration = "<%= settings.bigCapSettlementWindowDuration %>", priceVerificationContract = "<%= imports.pyth_erc7412_wrapper.contracts.PythERC7412Wrapper.address %>", feedId = "<%= settings.pythMemeFeedId %>", settlementReward = "<%= parseEther(settings.settlementReward) %>", disabled = false, commitmentPriceDelay = "<%= settings.commitmentPriceDelay %>" },
]
depends = [
    'provision.perpsLowCapFactory',
    'setting.perpsMemeMarketId',
    'invoke.addPerpsMemeSettlementStrategy',
    'provision.pyth_erc7412_wrapper',
    'setting.bigCapSettlementDelay',
    'setting.bigCapSettlementWindowDuration',
    'setting.pythMemeFeedId',
    'setting.settlementReward',
    'setting.commitmentPriceDelay',
]
[invoke.setPerpsMemeFundingParameters]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setFundingParameters"
args = [
    "<%= settings.perpsMemeMarketId %>",
    "<%= parseEther(settings.perpsMemeSkewScale) %>",
    "<%= parseEther(settings.perpsMemeMaxFundingVelocity) %>",
]
depends = ["invoke.createMemePerpsMarket"]

[invoke.setPerpsMemeOrderFees]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setOrderFees"
args = [
    "<%= settings.perpsMemeMarketId %>",
    "<%= parseEther(settings.perpsMemeMakerFeeRatio) %>",
    "<%= parseEther(settings.perpsMemeTakerFeeRatio) %>",
]
depends = ["invoke.createMemePerpsMarket"]

[invoke.setPerpsMemeMaxMarketSize]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketSize"
args = ["<%= settings.perpsMemeMarketId %>", "<%= parseEther(settings.perpsMemeMaxMarketSize) %>"]
depends = ["invoke.createMemePerpsMarket"]

[invoke.setPerpsMemeMaxMarketValue]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketValue"
args = ["<%= settings.perpsMemeMarketId %>", "<%= parseEther(settings.perpsMemeMaxMarketValue) %>"]
depends = ["invoke.createMemePerpsMarket"]

[invoke.setPerpsMemeMaxLiquidationParameters]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxLiquidationParameters"
args = [
    "<%= settings.perpsMemeMarketId %>",
    "<%= parseEther(settings.perpsMemeMaxLiquidationLimitAccumulationMultiplier) %>",
    "<%= settings.perpsMemeMaxSecondsInLiquidationWindow %>",
    "<%= parseEther(settings.perpsMemeMaxLiquidationPd) %>",
    "<%= settings.perpsMemeEndorsedLiquidator %>",
]
depends = ["invoke.createMemePerpsMarket"]

[invoke.setPerpsMemeLiquidationParameters]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLiquidationParameters"
args = [
    "<%= settings.perpsMemeMarketId %>",
    "<%= parseEther(settings.perpsMemeInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsMemeMinimumInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsMemeMaintenanceMarginScalar) %>",
    "<%= parseEther(settings.perpsMemeFlagRewardRatioD18) %>",
    "<%= parseEther(settings.perpsMemeMinimumPositionMargin) %>",
]
depends = ["invoke.createMemePerpsMarket"]

[invoke.setPerpsMemeLockedOiRatio]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLockedOiRatio"
args = ["<%= settings.perpsMemeMarketId %>", "<%= parseEther(settings.perpsMemeLockedOiRatio) %>"]
depends = ["invoke.createMemePerpsMarket"]
