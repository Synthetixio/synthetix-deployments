[setting.perpsBchMarketId]

[setting.perpsBchSkewScale]

[setting.perpsBchMaxFundingVelocity]

[setting.perpsBchMakerFeeRatio]

[setting.perpsBchTakerFeeRatio]

[setting.perpsBchMaxMarketSize]

[setting.perpsBchInitialMarginRatio]

[setting.perpsBchMaintenanceMarginFraction]

[setting.perpsBchFlagRewardRatioD18]

[setting.perpsBchMaxLiquidationLimitAccumulationMultiplier]

[setting.perpsBchMaxSecondsInLiquidationWindow]

[setting.perpsBchMaxLiquidationPd]

[setting.perpsBchEndorsedLiquidator]

[setting.perpsBchMinimumPositionMargin]

[setting.perpsBchLockedOiRatio]

[invoke.createBchPerpsMarket]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "createMarket"
args = ["<%= settings.perpsBchMarketId %>", "Bitcoin Cash", "BCH"]

[invoke.setPerpsPriceBch]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "updatePriceData"
args = [
    "<%= settings.perpsBchMarketId %>",
    "<%= extras.bch_oracle_id %>",
    "<%= settings.bigCapStrictStalenessTolerance %>",
]
depends = ["invoke.createBchPerpsMarket"]

# Do not modify this step. Edit [invoke.setPerpsBchSettlementStrategy] instead.
[invoke.addPerpsBchSettlementStrategy]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "addSettlementStrategy"
args = [
    "<%= settings.perpsBchMarketId %>",
    { strategyType = "0", settlementDelay = "0", settlementWindowDuration = "1", priceVerificationContract = "0x0000000000000000000000000000000000000000", feedId = "0x0000000000000000000000000000000000000000000000000000000000000000", settlementReward = "0", disabled = false, commitmentPriceDelay = "0" },
]
extra.bch_pyth_settlement_strategy.event = "SettlementStrategyAdded"
extra.bch_pyth_settlement_strategy.arg = 2
depends = ["invoke.createBchPerpsMarket"]

[invoke.setPerpsBchSettlementStrategy]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setSettlementStrategy"
args = [
    "<%= settings.perpsBchMarketId %>",
    "<%= extras.bch_pyth_settlement_strategy %>",                                                                                                                                                                                                                                                                                                                                                                                                                         # Settlement Strategy ID
    { strategyType = "0", settlementDelay = "<%= settings.bigCapSettlementDelay %>", settlementWindowDuration = "<%= settings.bigCapSettlementWindowDuration %>", priceVerificationContract = "<%= imports.pyth_erc7412_wrapper.contracts.PythERC7412Wrapper.address %>", feedId = "<%= settings.pythBchFeedId %>", settlementReward = "<%= parseEther(settings.settlementReward) %>", disabled = false, commitmentPriceDelay = "<%= settings.commitmentPriceDelay %>" },
]
depends = [
    'provision.perpsLowCapFactory',
    'setting.perpsBchMarketId',
    'invoke.addPerpsBchSettlementStrategy',
    'provision.pyth_erc7412_wrapper',
    'setting.bigCapSettlementDelay',
    'setting.bigCapSettlementWindowDuration',
    'setting.pythBchFeedId',
    'setting.settlementReward',
    'setting.commitmentPriceDelay',
]
[invoke.setPerpsBchFundingParameters]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setFundingParameters"
args = [
    "<%= settings.perpsBchMarketId %>",
    "<%= parseEther(settings.perpsBchSkewScale) %>",
    "<%= parseEther(settings.perpsBchMaxFundingVelocity) %>",
]
depends = ["invoke.createBchPerpsMarket"]

[invoke.setPerpsBchOrderFees]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setOrderFees"
args = [
    "<%= settings.perpsBchMarketId %>",
    "<%= parseEther(settings.perpsBchMakerFeeRatio) %>",
    "<%= parseEther(settings.perpsBchTakerFeeRatio) %>",
]
depends = ["invoke.createBchPerpsMarket"]

[invoke.setPerpsBchMaxMarketSize]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketSize"
args = ["<%= settings.perpsBchMarketId %>", "<%= parseEther(settings.perpsBchMaxMarketSize) %>"]
depends = ["invoke.createBchPerpsMarket"]

[invoke.setPerpsBchMaxMarketValue]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketValue"
args = ["<%= settings.perpsBchMarketId %>", "<%= parseEther(settings.perpsBchMaxMarketValue) %>"]
depends = ["invoke.createBchPerpsMarket"]

[invoke.setPerpsBchMaxLiquidationParameters]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxLiquidationParameters"
args = [
    "<%= settings.perpsBchMarketId %>",
    "<%= parseEther(settings.perpsBchMaxLiquidationLimitAccumulationMultiplier) %>",
    "<%= settings.perpsBchMaxSecondsInLiquidationWindow %>",
    "<%= parseEther(settings.perpsBchMaxLiquidationPd) %>",
    "<%= settings.perpsBchEndorsedLiquidator %>",
]
depends = ["invoke.createBchPerpsMarket"]

[invoke.setPerpsBchLiquidationParameters]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLiquidationParameters"
args = [
    "<%= settings.perpsBchMarketId %>",
    "<%= parseEther(settings.perpsBchInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsBchMinimumInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsBchMaintenanceMarginScalar) %>",
    "<%= parseEther(settings.perpsBchFlagRewardRatioD18) %>",
    "<%= parseEther(settings.perpsBchMinimumPositionMargin) %>",
]
depends = ["invoke.createBchPerpsMarket"]

[invoke.setPerpsBchLockedOiRatio]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLockedOiRatio"
args = ["<%= settings.perpsBchMarketId %>", "<%= parseEther(settings.perpsBchLockedOiRatio) %>"]
depends = ["invoke.createBchPerpsMarket"]
