[setting.perpsImxMarketId]

[setting.perpsImxSkewScale]

[setting.perpsImxMaxFundingVelocity]

[setting.perpsImxMakerFeeRatio]

[setting.perpsImxTakerFeeRatio]

[setting.perpsImxMaxMarketSize]

[setting.perpsImxInitialMarginRatio]

[setting.perpsImxMaintenanceMarginFraction]

[setting.perpsImxFlagRewardRatioD18]

[setting.perpsImxMaxLiquidationLimitAccumulationMultiplier]

[setting.perpsImxMaxSecondsInLiquidationWindow]

[setting.perpsImxMaxLiquidationPd]

[setting.perpsImxEndorsedLiquidator]

[setting.perpsImxMinimumPositionMargin]

[setting.perpsImxLockedOiRatio]

[invoke.createImxPerpsMarket]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "createMarket"
args = ["<%= settings.perpsImxMarketId %>", "Immutable", "IMX"]

[invoke.setPerpsPriceImx]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "updatePriceData"
args = [
    "<%= settings.perpsImxMarketId %>",
    "<%= extras.imx_oracle_id %>",
    "<%= settings.bigCapStrictStalenessTolerance %>",
]
depends = ["invoke.createImxPerpsMarket"]

# Do not modify this step. Edit [invoke.setPerpsImxSettlementStrategy] instead.
[invoke.addPerpsImxSettlementStrategy]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "addSettlementStrategy"
args = [
    "<%= settings.perpsImxMarketId %>",
    { strategyType = "0", settlementDelay = "0", settlementWindowDuration = "1", priceVerificationContract = "0x0000000000000000000000000000000000000000", feedId = "0x0000000000000000000000000000000000000000000000000000000000000000", settlementReward = "0", disabled = false, commitmentPriceDelay = "0" },
]
extra.imx_pyth_settlement_strategy.event = "SettlementStrategyAdded"
extra.imx_pyth_settlement_strategy.arg = 2
depends = ["invoke.createImxPerpsMarket"]

[invoke.setPerpsImxSettlementStrategy]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setSettlementStrategy"
args = [
    "<%= settings.perpsImxMarketId %>",
    "<%= extras.imx_pyth_settlement_strategy %>",                                                                                                                                                                                                                                                                                                                                                                                                                         # Settlement Strategy ID
    { strategyType = "0", settlementDelay = "<%= settings.bigCapSettlementDelay %>", settlementWindowDuration = "<%= settings.bigCapSettlementWindowDuration %>", priceVerificationContract = "<%= imports.pyth_erc7412_wrapper.contracts.PythERC7412Wrapper.address %>", feedId = "<%= settings.pythImxFeedId %>", settlementReward = "<%= parseEther(settings.settlementReward) %>", disabled = false, commitmentPriceDelay = "<%= settings.commitmentPriceDelay %>" },
]
depends = [
    'provision.perpsLowCapFactory',
    'setting.perpsImxMarketId',
    'invoke.addPerpsImxSettlementStrategy',
    'provision.pyth_erc7412_wrapper',
    'setting.bigCapSettlementDelay',
    'setting.bigCapSettlementWindowDuration',
    'setting.pythImxFeedId',
    'setting.settlementReward',
    'setting.commitmentPriceDelay',
]
[invoke.setPerpsImxFundingParameters]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setFundingParameters"
args = [
    "<%= settings.perpsImxMarketId %>",
    "<%= parseEther(settings.perpsImxSkewScale) %>",
    "<%= parseEther(settings.perpsImxMaxFundingVelocity) %>",
]
depends = ["invoke.createImxPerpsMarket"]

[invoke.setPerpsImxOrderFees]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setOrderFees"
args = [
    "<%= settings.perpsImxMarketId %>",
    "<%= parseEther(settings.perpsImxMakerFeeRatio) %>",
    "<%= parseEther(settings.perpsImxTakerFeeRatio) %>",
]
depends = ["invoke.createImxPerpsMarket"]

[invoke.setPerpsImxMaxMarketSize]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketSize"
args = ["<%= settings.perpsImxMarketId %>", "<%= parseEther(settings.perpsImxMaxMarketSize) %>"]
depends = ["invoke.createImxPerpsMarket"]

[invoke.setPerpsImxMaxMarketValue]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketValue"
args = ["<%= settings.perpsImxMarketId %>", "<%= parseEther(settings.perpsImxMaxMarketValue) %>"]
depends = ["invoke.createImxPerpsMarket"]

[invoke.setPerpsImxMaxLiquidationParameters]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxLiquidationParameters"
args = [
    "<%= settings.perpsImxMarketId %>",
    "<%= parseEther(settings.perpsImxMaxLiquidationLimitAccumulationMultiplier) %>",
    "<%= settings.perpsImxMaxSecondsInLiquidationWindow %>",
    "<%= parseEther(settings.perpsImxMaxLiquidationPd) %>",
    "<%= settings.perpsImxEndorsedLiquidator %>",
]
depends = ["invoke.createImxPerpsMarket"]

[invoke.setPerpsImxLiquidationParameters]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLiquidationParameters"
args = [
    "<%= settings.perpsImxMarketId %>",
    "<%= parseEther(settings.perpsImxInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsImxMinimumInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsImxMaintenanceMarginScalar) %>",
    "<%= parseEther(settings.perpsImxFlagRewardRatioD18) %>",
    "<%= parseEther(settings.perpsImxMinimumPositionMargin) %>",
]
depends = ["invoke.createImxPerpsMarket"]

[invoke.setPerpsImxLockedOiRatio]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLockedOiRatio"
args = ["<%= settings.perpsImxMarketId %>", "<%= parseEther(settings.perpsImxLockedOiRatio) %>"]
depends = ["invoke.createImxPerpsMarket"]
