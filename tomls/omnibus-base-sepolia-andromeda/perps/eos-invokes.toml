[setting.perpsEosMarketId]

[setting.perpsEosSkewScale]

[setting.perpsEosMaxFundingVelocity]

[setting.perpsEosMakerFeeRatio]

[setting.perpsEosTakerFeeRatio]

[setting.perpsEosMaxMarketSize]

[setting.perpsEosInitialMarginRatio]

[setting.perpsEosMaintenanceMarginFraction]

[setting.perpsEosFlagRewardRatioD18]

[setting.perpsEosMaxLiquidationLimitAccumulationMultiplier]

[setting.perpsEosMaxSecondsInLiquidationWindow]

[setting.perpsEosMaxLiquidationPd]

[setting.perpsEosEndorsedLiquidator]

[setting.perpsEosMinimumPositionMargin]

[setting.perpsEosLockedOiRatio]

[invoke.createEosPerpsMarket]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "createMarket"
args = ["<%= settings.perpsEosMarketId %>", "Eos", "EOS"]

[invoke.setPerpsPriceEos]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "updatePriceData"
args = [
    "<%= settings.perpsEosMarketId %>",
    "<%= extras.eos_oracle_id %>",
    "<%= settings.bigCapStrictStalenessTolerance %>",
]
depends = ["invoke.createEosPerpsMarket"]

# Do not modify this step. Edit [invoke.setPerpsEosSettlementStrategy] instead.
[invoke.addPerpsEosSettlementStrategy]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "addSettlementStrategy"
args = [
    "<%= settings.perpsEosMarketId %>",
    { strategyType = "0", settlementDelay = "0", settlementWindowDuration = "1", priceVerificationContract = "0x0000000000000000000000000000000000000000", feedId = "0x0000000000000000000000000000000000000000000000000000000000000000", settlementReward = "0", disabled = false, commitmentPriceDelay = "0" },
]
extra.eos_pyth_settlement_strategy.event = "SettlementStrategyAdded"
extra.eos_pyth_settlement_strategy.arg = 2
depends = ["invoke.createEosPerpsMarket"]

[invoke.setPerpsEosSettlementStrategy]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setSettlementStrategy"
args = [
    "<%= settings.perpsEosMarketId %>",
    "<%= extras.eos_pyth_settlement_strategy %>",                                                                                                                                                                                                                                                                                                                                                                                                                         # Settlement Strategy ID
    { strategyType = "0", settlementDelay = "<%= settings.bigCapSettlementDelay %>", settlementWindowDuration = "<%= settings.bigCapSettlementWindowDuration %>", priceVerificationContract = "<%= imports.pyth_erc7412_wrapper.contracts.PythERC7412Wrapper.address %>", feedId = "<%= settings.pythEosFeedId %>", settlementReward = "<%= parseEther(settings.settlementReward) %>", disabled = false, commitmentPriceDelay = "<%= settings.commitmentPriceDelay %>" },
]
depends = [
    'provision.perpsLowCapFactory',
    'setting.perpsEosMarketId',
    'invoke.addPerpsEosSettlementStrategy',
    'provision.pyth_erc7412_wrapper',
    'setting.bigCapSettlementDelay',
    'setting.bigCapSettlementWindowDuration',
    'setting.pythEosFeedId',
    'setting.settlementReward',
    'setting.commitmentPriceDelay',
]
[invoke.setPerpsEosFundingParameters]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setFundingParameters"
args = [
    "<%= settings.perpsEosMarketId %>",
    "<%= parseEther(settings.perpsEosSkewScale) %>",
    "<%= parseEther(settings.perpsEosMaxFundingVelocity) %>",
]
depends = ["invoke.createEosPerpsMarket"]

[invoke.setPerpsEosOrderFees]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setOrderFees"
args = [
    "<%= settings.perpsEosMarketId %>",
    "<%= parseEther(settings.perpsEosMakerFeeRatio) %>",
    "<%= parseEther(settings.perpsEosTakerFeeRatio) %>",
]
depends = ["invoke.createEosPerpsMarket"]

[invoke.setPerpsEosMaxMarketSize]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketSize"
args = ["<%= settings.perpsEosMarketId %>", "<%= parseEther(settings.perpsEosMaxMarketSize) %>"]
depends = ["invoke.createEosPerpsMarket"]

[invoke.setPerpsEosMaxMarketValue]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketValue"
args = ["<%= settings.perpsEosMarketId %>", "<%= parseEther(settings.perpsEosMaxMarketValue) %>"]
depends = ["invoke.createEosPerpsMarket"]

[invoke.setPerpsEosMaxLiquidationParameters]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxLiquidationParameters"
args = [
    "<%= settings.perpsEosMarketId %>",
    "<%= parseEther(settings.perpsEosMaxLiquidationLimitAccumulationMultiplier) %>",
    "<%= settings.perpsEosMaxSecondsInLiquidationWindow %>",
    "<%= parseEther(settings.perpsEosMaxLiquidationPd) %>",
    "<%= settings.perpsEosEndorsedLiquidator %>",
]
depends = ["invoke.createEosPerpsMarket"]

[invoke.setPerpsEosLiquidationParameters]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLiquidationParameters"
args = [
    "<%= settings.perpsEosMarketId %>",
    "<%= parseEther(settings.perpsEosInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsEosMinimumInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsEosMaintenanceMarginScalar) %>",
    "<%= parseEther(settings.perpsEosFlagRewardRatioD18) %>",
    "<%= parseEther(settings.perpsEosMinimumPositionMargin) %>",
]
depends = ["invoke.createEosPerpsMarket"]

[invoke.setPerpsEosLockedOiRatio]
target = ["perpsLowCapFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLockedOiRatio"
args = ["<%= settings.perpsEosMarketId %>", "<%= parseEther(settings.perpsEosLockedOiRatio) %>"]
depends = ["invoke.createEosPerpsMarket"]
