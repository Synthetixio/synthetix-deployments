[setting.perpsXlmMarketId]

[setting.perpsXlmSkewScale]

[setting.perpsXlmMaxFundingVelocity]

[setting.perpsXlmMakerFeeRatio]

[setting.perpsXlmTakerFeeRatio]

[setting.perpsXlmMaxMarketSize]

[setting.perpsXlmInitialMarginRatio]

[setting.perpsXlmMaintenanceMarginFraction]

[setting.perpsXlmFlagRewardRatioD18]

[setting.perpsXlmMaxLiquidationLimitAccumulationMultiplier]

[setting.perpsXlmMaxSecondsInLiquidationWindow]

[setting.perpsXlmMaxLiquidationPd]

[setting.perpsXlmEndorsedLiquidator]

[setting.perpsXlmMinimumPositionMargin]

[setting.perpsXlmLockedOiRatio]

[invoke.createXlmPerpsMarket]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "createMarket"
args = ["<%= settings.perpsXlmMarketId %>", "Stellar", "XLM"]

[invoke.setPerpsPriceXlm]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "updatePriceData"
args = [
    "<%= settings.perpsXlmMarketId %>",
    "<%= extras.xlm_oracle_id %>",
    "<%= settings.bigCapStrictStalenessTolerance %>",
]
depends = ["invoke.createXlmPerpsMarket"]

# Do not modify this step. Edit [invoke.setPerpsXlmSettlementStrategy] instead.
[invoke.addPerpsXlmSettlementStrategy]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "addSettlementStrategy"
args = [
    "<%= settings.perpsXlmMarketId %>",
    { strategyType = "0", settlementDelay = "0", settlementWindowDuration = "1", priceVerificationContract = "0x0000000000000000000000000000000000000000", feedId = "0x0000000000000000000000000000000000000000000000000000000000000000", settlementReward = "0", disabled = false, commitmentPriceDelay = "0" },
]
extra.xlm_pyth_settlement_strategy.event = "SettlementStrategyAdded"
extra.xlm_pyth_settlement_strategy.arg = 2
depends = ["invoke.createXlmPerpsMarket"]

[invoke.setPerpsXlmSettlementStrategy]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setSettlementStrategy"
args = [
    "<%= settings.perpsXlmMarketId %>",
    "<%= extras.xlm_pyth_settlement_strategy %>",                                                                                                                                                                                                                                                                                                                                                                                                                         # Settlement Strategy ID
    { strategyType = "0", settlementDelay = "<%= settings.bigCapSettlementDelay %>", settlementWindowDuration = "<%= settings.bigCapSettlementWindowDuration %>", priceVerificationContract = "<%= imports.pyth_erc7412_wrapper.contracts.PythERC7412Wrapper.address %>", feedId = "<%= settings.pythXlmFeedId %>", settlementReward = "<%= parseEther(settings.settlementReward) %>", disabled = false, commitmentPriceDelay = "<%= settings.commitmentPriceDelay %>" },
]
depends = [
    'provision.perpsFactory',
    'setting.perpsXlmMarketId',
    'invoke.addPerpsXlmSettlementStrategy',
    'provision.pyth_erc7412_wrapper',
    'setting.bigCapSettlementDelay',
    'setting.bigCapSettlementWindowDuration',
    'setting.pythXlmFeedId',
    'setting.settlementReward',
    'setting.commitmentPriceDelay',
]
[invoke.setPerpsXlmFundingParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setFundingParameters"
args = [
    "<%= settings.perpsXlmMarketId %>",
    "<%= parseEther(settings.perpsXlmSkewScale) %>",
    "<%= parseEther(settings.perpsXlmMaxFundingVelocity) %>",
]
depends = ["invoke.createXlmPerpsMarket"]

[invoke.setPerpsXlmOrderFees]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setOrderFees"
args = [
    "<%= settings.perpsXlmMarketId %>",
    "<%= parseEther(settings.perpsXlmMakerFeeRatio) %>",
    "<%= parseEther(settings.perpsXlmTakerFeeRatio) %>",
]
depends = ["invoke.createXlmPerpsMarket"]

[invoke.setPerpsXlmMaxMarketSize]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketSize"
args = ["<%= settings.perpsXlmMarketId %>", "<%= parseEther(settings.perpsXlmMaxMarketSize) %>"]
depends = ["invoke.createXlmPerpsMarket"]

[invoke.setPerpsXlmMaxMarketValue]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketValue"
args = ["<%= settings.perpsXlmMarketId %>", "<%= parseEther(settings.perpsXlmMaxMarketValue) %>"]
depends = ["invoke.createXlmPerpsMarket"]

[invoke.setPerpsXlmMaxLiquidationParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxLiquidationParameters"
args = [
    "<%= settings.perpsXlmMarketId %>",
    "<%= parseEther(settings.perpsXlmMaxLiquidationLimitAccumulationMultiplier) %>",
    "<%= settings.perpsXlmMaxSecondsInLiquidationWindow %>",
    "<%= parseEther(settings.perpsXlmMaxLiquidationPd) %>",
    "<%= settings.perpsXlmEndorsedLiquidator %>",
]
depends = ["invoke.createXlmPerpsMarket"]

[invoke.setPerpsXlmLiquidationParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLiquidationParameters"
args = [
    "<%= settings.perpsXlmMarketId %>",
    "<%= parseEther(settings.perpsXlmInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsXlmMinimumInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsXlmMaintenanceMarginScalar) %>",
    "<%= parseEther(settings.perpsXlmFlagRewardRatioD18) %>",
    "<%= parseEther(settings.perpsXlmMinimumPositionMargin) %>",
]
depends = ["invoke.createXlmPerpsMarket"]

[invoke.setPerpsXlmLockedOiRatio]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLockedOiRatio"
args = ["<%= settings.perpsXlmMarketId %>", "<%= parseEther(settings.perpsXlmLockedOiRatio) %>"]
depends = ["invoke.createXlmPerpsMarket"]
