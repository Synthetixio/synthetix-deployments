[setting.perpsUniMarketId]

[setting.perpsUniSkewScale]

[setting.perpsUniMaxFundingVelocity]

[setting.perpsUniMakerFeeRatio]

[setting.perpsUniTakerFeeRatio]

[setting.perpsUniMaxMarketSize]

[setting.perpsUniInitialMarginRatio]

[setting.perpsUniMaintenanceMarginFraction]

[setting.perpsUniFlagRewardRatioD18]

[setting.perpsUniMaxLiquidationLimitAccumulationMultiplier]

[setting.perpsUniMaxSecondsInLiquidationWindow]

[setting.perpsUniMaxLiquidationPd]

[setting.perpsUniEndorsedLiquidator]

[setting.perpsUniMinimumPositionMargin]

[setting.perpsUniLockedOiRatio]

[invoke.createUniPerpsMarket]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "createMarket"
args = ["<%= settings.perpsUniMarketId %>", "Uniswap", "UNI"]

[invoke.setPerpsPriceUni]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "updatePriceData"
args = [
    "<%= settings.perpsUniMarketId %>",
    "<%= extras.uni_oracle_id %>",
    "<%= settings.bigCapStrictStalenessTolerance %>",
]
depends = ["invoke.createUniPerpsMarket"]

# Do not modify this step. Edit [invoke.setPerpsUniSettlementStrategy] instead.
[invoke.addPerpsUniSettlementStrategy]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "addSettlementStrategy"
args = [
    "<%= settings.perpsUniMarketId %>",
    { strategyType = "0", settlementDelay = "0", settlementWindowDuration = "1", priceVerificationContract = "0x0000000000000000000000000000000000000000", feedId = "0x0000000000000000000000000000000000000000000000000000000000000000", settlementReward = "0", disabled = false, commitmentPriceDelay = "0" },
]
extra.uni_pyth_settlement_strategy.event = "SettlementStrategyAdded"
extra.uni_pyth_settlement_strategy.arg = 2
depends = ["invoke.createUniPerpsMarket"]

[invoke.setPerpsUniSettlementStrategy]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setSettlementStrategy"
args = [
    "<%= settings.perpsUniMarketId %>",
    "<%= extras.uni_pyth_settlement_strategy %>",                                                                                                                                                                                                                                                                                                                                                                                                                         # Settlement Strategy ID
    { strategyType = "0", settlementDelay = "<%= settings.bigCapSettlementDelay %>", settlementWindowDuration = "<%= settings.bigCapSettlementWindowDuration %>", priceVerificationContract = "<%= imports.pyth_erc7412_wrapper.contracts.PythERC7412Wrapper.address %>", feedId = "<%= settings.pythUniFeedId %>", settlementReward = "<%= parseEther(settings.settlementReward) %>", disabled = false, commitmentPriceDelay = "<%= settings.commitmentPriceDelay %>" },
]
depends = [
    'provision.perpsFactory',
    'setting.perpsUniMarketId',
    'invoke.addPerpsUniSettlementStrategy',
    'provision.pyth_erc7412_wrapper',
    'setting.bigCapSettlementDelay',
    'setting.bigCapSettlementWindowDuration',
    'setting.pythUniFeedId',
    'setting.settlementReward',
    'setting.commitmentPriceDelay',
]
[invoke.setPerpsUniFundingParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setFundingParameters"
args = [
    "<%= settings.perpsUniMarketId %>",
    "<%= parseEther(settings.perpsUniSkewScale) %>",
    "<%= parseEther(settings.perpsUniMaxFundingVelocity) %>",
]
depends = ["invoke.createUniPerpsMarket"]

[invoke.setPerpsUniOrderFees]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setOrderFees"
args = [
    "<%= settings.perpsUniMarketId %>",
    "<%= parseEther(settings.perpsUniMakerFeeRatio) %>",
    "<%= parseEther(settings.perpsUniTakerFeeRatio) %>",
]
depends = ["invoke.createUniPerpsMarket"]

[invoke.setPerpsUniMaxMarketSize]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketSize"
args = ["<%= settings.perpsUniMarketId %>", "<%= parseEther(settings.perpsUniMaxMarketSize) %>"]
depends = ["invoke.createUniPerpsMarket"]

[invoke.setPerpsUniMaxMarketValue]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketValue"
args = ["<%= settings.perpsUniMarketId %>", "<%= parseEther(settings.perpsUniMaxMarketValue) %>"]
depends = ["invoke.createUniPerpsMarket"]

[invoke.setPerpsUniMaxLiquidationParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxLiquidationParameters"
args = [
    "<%= settings.perpsUniMarketId %>",
    "<%= parseEther(settings.perpsUniMaxLiquidationLimitAccumulationMultiplier) %>",
    "<%= settings.perpsUniMaxSecondsInLiquidationWindow %>",
    "<%= parseEther(settings.perpsUniMaxLiquidationPd) %>",
    "<%= settings.perpsUniEndorsedLiquidator %>",
]
depends = ["invoke.createUniPerpsMarket"]

[invoke.setPerpsUniLiquidationParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLiquidationParameters"
args = [
    "<%= settings.perpsUniMarketId %>",
    "<%= parseEther(settings.perpsUniInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsUniMinimumInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsUniMaintenanceMarginScalar) %>",
    "<%= parseEther(settings.perpsUniFlagRewardRatioD18) %>",
    "<%= parseEther(settings.perpsUniMinimumPositionMargin) %>",
]
depends = ["invoke.createUniPerpsMarket"]

[invoke.setPerpsUniLockedOiRatio]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLockedOiRatio"
args = ["<%= settings.perpsUniMarketId %>", "<%= parseEther(settings.perpsUniLockedOiRatio) %>"]
depends = ["invoke.createUniPerpsMarket"]
