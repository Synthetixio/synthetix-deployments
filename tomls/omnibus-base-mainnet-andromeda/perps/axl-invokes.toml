[invoke.createAxlPerpsMarket]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "createMarket"
args = ["<%= settings.perpsAxlMarketId %>", "Axelar", "AXL"]

[invoke.setPerpsPriceAxl]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "updatePriceData"
args = [
    "<%= settings.perpsAxlMarketId %>",
    "<%= extras.axl_oracle_id %>",
    "<%= settings.bigCapStrictStalenessTolerance %>",
]
depends = ["invoke.createAxlPerpsMarket"]

# Do not modify this step. Edit [invoke.setPerpsAxlSettlementStrategy] instead.
[invoke.addPerpsAxlSettlementStrategy]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "addSettlementStrategy"
args = [
    "<%= settings.perpsAxlMarketId %>",
    { strategyType = "0", settlementDelay = "0", settlementWindowDuration = "1", priceVerificationContract = "0x0000000000000000000000000000000000000000", feedId = "0x0000000000000000000000000000000000000000000000000000000000000000", settlementReward = "0", disabled = false, commitmentPriceDelay = "0" },
]
extra.axl_pyth_settlement_strategy.event = "SettlementStrategyAdded"
extra.axl_pyth_settlement_strategy.arg = 2
depends = ["invoke.createAxlPerpsMarket"]

[invoke.setPerpsAxlSettlementStrategy]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setSettlementStrategy"
args = [
    "<%= settings.perpsAxlMarketId %>",
    "<%= extras.axl_pyth_settlement_strategy %>",                                                                                                                                                                                                                                                                                                                                                                                                                         # Settlement Strategy ID
    { strategyType = "0", settlementDelay = "<%= settings.bigCapSettlementDelay %>", settlementWindowDuration = "<%= settings.bigCapSettlementWindowDuration %>", priceVerificationContract = "<%= imports.pyth_erc7412_wrapper.contracts.PythERC7412Wrapper.address %>", feedId = "<%= settings.pythAxlFeedId %>", settlementReward = "<%= parseEther(settings.settlementReward) %>", disabled = false, commitmentPriceDelay = "<%= settings.commitmentPriceDelay %>" },
]
depends = [
    'provision.perpsFactory',
    'setting.perpsAxlMarketId',
    'invoke.addPerpsAxlSettlementStrategy',
    'provision.pyth_erc7412_wrapper',
    'setting.bigCapSettlementDelay',
    'setting.bigCapSettlementWindowDuration',
    'setting.pythAxlFeedId',
    'setting.settlementReward',
    'setting.commitmentPriceDelay',
]
[invoke.setPerpsAxlFundingParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setFundingParameters"
args = [
    "<%= settings.perpsAxlMarketId %>",
    "<%= parseEther(settings.perpsAxlSkewScale) %>",
    "<%= parseEther(settings.perpsAxlMaxFundingVelocity) %>",
]
depends = ["invoke.createAxlPerpsMarket"]

[invoke.setPerpsAxlOrderFees]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setOrderFees"
args = [
    "<%= settings.perpsAxlMarketId %>",
    "<%= parseEther(settings.perpsAxlMakerFeeRatio) %>",
    "<%= parseEther(settings.perpsAxlTakerFeeRatio) %>",
]
depends = ["invoke.createAxlPerpsMarket"]

[invoke.setPerpsAxlMaxMarketSize]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketSize"
args = ["<%= settings.perpsAxlMarketId %>", "<%= parseEther(settings.perpsAxlMaxMarketSize) %>"]
depends = ["invoke.createAxlPerpsMarket"]

[invoke.setPerpsAxlMaxMarketValue]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketValue"
args = ["<%= settings.perpsAxlMarketId %>", "<%= parseEther(settings.perpsAxlMaxMarketValue) %>"]
depends = ["invoke.createAxlPerpsMarket"]

[invoke.setPerpsAxlMaxLiquidationParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxLiquidationParameters"
args = [
    "<%= settings.perpsAxlMarketId %>",
    "<%= parseEther(settings.perpsAxlMaxLiquidationLimitAccumulationMultiplier) %>",
    "<%= settings.perpsAxlMaxSecondsInLiquidationWindow %>",
    "<%= parseEther(settings.perpsAxlMaxLiquidationPd) %>",
    "<%= settings.perpsAxlEndorsedLiquidator %>",
]
depends = ["invoke.createAxlPerpsMarket"]

[invoke.setPerpsAxlLiquidationParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLiquidationParameters"
args = [
    "<%= settings.perpsAxlMarketId %>",
    "<%= parseEther(settings.perpsAxlInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsAxlMinimumInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsAxlMaintenanceMarginScalar) %>",
    "<%= parseEther(settings.perpsAxlFlagRewardRatioD18) %>",
    "<%= parseEther(settings.perpsAxlMinimumPositionMargin) %>",
]
depends = ["invoke.createAxlPerpsMarket"]

[invoke.setPerpsAxlLockedOiRatio]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLockedOiRatio"
args = ["<%= settings.perpsAxlMarketId %>", "<%= parseEther(settings.perpsAxlLockedOiRatio) %>"]
depends = ["invoke.createAxlPerpsMarket"]
