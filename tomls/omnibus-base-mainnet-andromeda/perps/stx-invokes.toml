[invoke.createStxPerpsMarket]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "createMarket"
args = ["<%= settings.perpsStxMarketId %>", "Stacks", "STX"]

[invoke.setPerpsPriceStx]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "updatePriceData"
args = [
    "<%= settings.perpsStxMarketId %>",
    "<%= extras.stx_oracle_id %>",
    "<%= settings.bigCapStrictStalenessTolerance %>",
]
depends = ["invoke.createStxPerpsMarket"]

# Do not modify this step. Edit [invoke.setPerpsStxSettlementStrategy] instead.
[invoke.addPerpsStxSettlementStrategy]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "addSettlementStrategy"
args = [
    "<%= settings.perpsStxMarketId %>",
    { strategyType = "0", settlementDelay = "0", settlementWindowDuration = "1", priceVerificationContract = "0x0000000000000000000000000000000000000000", feedId = "0x0000000000000000000000000000000000000000000000000000000000000000", settlementReward = "0", disabled = false, commitmentPriceDelay = "0" },
]
extra.stx_pyth_settlement_strategy.event = "SettlementStrategyAdded"
extra.stx_pyth_settlement_strategy.arg = 2
depends = ["invoke.createStxPerpsMarket"]

[invoke.setPerpsStxSettlementStrategy]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setSettlementStrategy"
args = [
    "<%= settings.perpsStxMarketId %>",
    "<%= extras.stx_pyth_settlement_strategy %>",                                                                                                                                                                                                                                                                                                                                                                                                                         # Settlement Strategy ID
    { strategyType = "0", settlementDelay = "<%= settings.bigCapSettlementDelay %>", settlementWindowDuration = "<%= settings.bigCapSettlementWindowDuration %>", priceVerificationContract = "<%= imports.pyth_erc7412_wrapper.contracts.PythERC7412Wrapper.address %>", feedId = "<%= settings.pythStxFeedId %>", settlementReward = "<%= parseEther(settings.settlementReward) %>", disabled = false, commitmentPriceDelay = "<%= settings.commitmentPriceDelay %>" },
]
depends = [
    'provision.perpsFactory',
    'setting.perpsStxMarketId',
    'invoke.addPerpsStxSettlementStrategy',
    'provision.pyth_erc7412_wrapper',
    'setting.bigCapSettlementDelay',
    'setting.bigCapSettlementWindowDuration',
    'setting.pythStxFeedId',
    'setting.settlementReward',
    'setting.commitmentPriceDelay',
]
[invoke.setPerpsStxFundingParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setFundingParameters"
args = [
    "<%= settings.perpsStxMarketId %>",
    "<%= parseEther(settings.perpsStxSkewScale) %>",
    "<%= parseEther(settings.perpsStxMaxFundingVelocity) %>",
]
depends = ["invoke.createStxPerpsMarket"]

[invoke.setPerpsStxOrderFees]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setOrderFees"
args = [
    "<%= settings.perpsStxMarketId %>",
    "<%= parseEther(settings.perpsStxMakerFeeRatio) %>",
    "<%= parseEther(settings.perpsStxTakerFeeRatio) %>",
]
depends = ["invoke.createStxPerpsMarket"]

[invoke.setPerpsStxMaxMarketSize]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketSize"
args = ["<%= settings.perpsStxMarketId %>", "<%= parseEther(settings.perpsStxMaxMarketSize) %>"]
depends = ["invoke.createStxPerpsMarket"]

[invoke.setPerpsStxMaxMarketValue]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketValue"
args = ["<%= settings.perpsStxMarketId %>", "<%= parseEther(settings.perpsStxMaxMarketValue) %>"]
depends = ["invoke.createStxPerpsMarket"]

[invoke.setPerpsStxMaxLiquidationParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxLiquidationParameters"
args = [
    "<%= settings.perpsStxMarketId %>",
    "<%= parseEther(settings.perpsStxMaxLiquidationLimitAccumulationMultiplier) %>",
    "<%= settings.perpsStxMaxSecondsInLiquidationWindow %>",
    "<%= parseEther(settings.perpsStxMaxLiquidationPd) %>",
    "<%= settings.perpsStxEndorsedLiquidator %>",
]
depends = ["invoke.createStxPerpsMarket"]

[invoke.setPerpsStxLiquidationParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLiquidationParameters"
args = [
    "<%= settings.perpsStxMarketId %>",
    "<%= parseEther(settings.perpsStxInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsStxMinimumInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsStxMaintenanceMarginScalar) %>",
    "<%= parseEther(settings.perpsStxFlagRewardRatioD18) %>",
    "<%= parseEther(settings.perpsStxMinimumPositionMargin) %>",
]
depends = ["invoke.createStxPerpsMarket"]

[invoke.setPerpsStxLockedOiRatio]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLockedOiRatio"
args = ["<%= settings.perpsStxMarketId %>", "<%= parseEther(settings.perpsStxLockedOiRatio) %>"]
depends = ["invoke.createStxPerpsMarket"]
