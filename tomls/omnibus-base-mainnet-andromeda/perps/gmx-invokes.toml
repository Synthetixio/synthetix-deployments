[setting.perpsGmxMarketId]

[setting.perpsGmxSkewScale]

[setting.perpsGmxMaxFundingVelocity]

[setting.perpsGmxMakerFeeRatio]

[setting.perpsGmxTakerFeeRatio]

[setting.perpsGmxMaxMarketSize]

[setting.perpsGmxInitialMarginRatio]

[setting.perpsGmxMaintenanceMarginFraction]

[setting.perpsGmxFlagRewardRatioD18]

[setting.perpsGmxMaxLiquidationLimitAccumulationMultiplier]

[setting.perpsGmxMaxSecondsInLiquidationWindow]

[setting.perpsGmxMaxLiquidationPd]

[setting.perpsGmxEndorsedLiquidator]

[setting.perpsGmxMinimumPositionMargin]

[setting.perpsGmxLockedOiRatio]

[invoke.createGmxPerpsMarket]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "createMarket"
args = ["<%= settings.perpsGmxMarketId %>", "GMX", "GMX"]

[invoke.setPerpsPriceGmx]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "updatePriceData"
args = [
    "<%= settings.perpsGmxMarketId %>",
    "<%= extras.gmx_oracle_id %>",
    "<%= settings.bigCapStrictStalenessTolerance %>",
]
depends = ["invoke.createGmxPerpsMarket"]

# Do not modify this step. Edit [invoke.setPerpsGmxSettlementStrategy] instead.
[invoke.addPerpsGmxSettlementStrategy]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "addSettlementStrategy"
args = [
    "<%= settings.perpsGmxMarketId %>",
    { strategyType = "0", settlementDelay = "0", settlementWindowDuration = "1", priceVerificationContract = "0x0000000000000000000000000000000000000000", feedId = "0x0000000000000000000000000000000000000000000000000000000000000000", settlementReward = "0", disabled = false, commitmentPriceDelay = "0" },
]
extra.gmx_pyth_settlement_strategy.event = "SettlementStrategyAdded"
extra.gmx_pyth_settlement_strategy.arg = 2
depends = ["invoke.createGmxPerpsMarket"]

[invoke.setPerpsGmxSettlementStrategy]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setSettlementStrategy"
args = [
    "<%= settings.perpsGmxMarketId %>",
    "<%= extras.gmx_pyth_settlement_strategy %>",                                                                                                                                                                                                                                                                                                                                                                                                                         # Settlement Strategy ID
    { strategyType = "0", settlementDelay = "<%= settings.bigCapSettlementDelay %>", settlementWindowDuration = "<%= settings.bigCapSettlementWindowDuration %>", priceVerificationContract = "<%= imports.pyth_erc7412_wrapper.contracts.PythERC7412Wrapper.address %>", feedId = "<%= settings.pythGmxFeedId %>", settlementReward = "<%= parseEther(settings.settlementReward) %>", disabled = false, commitmentPriceDelay = "<%= settings.commitmentPriceDelay %>" },
]
depends = [
    'provision.perpsFactory',
    'setting.perpsGmxMarketId',
    'invoke.addPerpsGmxSettlementStrategy',
    'provision.pyth_erc7412_wrapper',
    'setting.bigCapSettlementDelay',
    'setting.bigCapSettlementWindowDuration',
    'setting.pythGmxFeedId',
    'setting.settlementReward',
    'setting.commitmentPriceDelay',
]
[invoke.setPerpsGmxFundingParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setFundingParameters"
args = [
    "<%= settings.perpsGmxMarketId %>",
    "<%= parseEther(settings.perpsGmxSkewScale) %>",
    "<%= parseEther(settings.perpsGmxMaxFundingVelocity) %>",
]
depends = ["invoke.createGmxPerpsMarket"]

[invoke.setPerpsGmxOrderFees]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setOrderFees"
args = [
    "<%= settings.perpsGmxMarketId %>",
    "<%= parseEther(settings.perpsGmxMakerFeeRatio) %>",
    "<%= parseEther(settings.perpsGmxTakerFeeRatio) %>",
]
depends = ["invoke.createGmxPerpsMarket"]

[invoke.setPerpsGmxMaxMarketSize]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketSize"
args = ["<%= settings.perpsGmxMarketId %>", "<%= parseEther(settings.perpsGmxMaxMarketSize) %>"]
depends = ["invoke.createGmxPerpsMarket"]

[invoke.setPerpsGmxMaxMarketValue]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketValue"
args = ["<%= settings.perpsGmxMarketId %>", "<%= parseEther(settings.perpsGmxMaxMarketValue) %>"]
depends = ["invoke.createGmxPerpsMarket"]

[invoke.setPerpsGmxMaxLiquidationParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxLiquidationParameters"
args = [
    "<%= settings.perpsGmxMarketId %>",
    "<%= parseEther(settings.perpsGmxMaxLiquidationLimitAccumulationMultiplier) %>",
    "<%= settings.perpsGmxMaxSecondsInLiquidationWindow %>",
    "<%= parseEther(settings.perpsGmxMaxLiquidationPd) %>",
    "<%= settings.perpsGmxEndorsedLiquidator %>",
]
depends = ["invoke.createGmxPerpsMarket"]

[invoke.setPerpsGmxLiquidationParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLiquidationParameters"
args = [
    "<%= settings.perpsGmxMarketId %>",
    "<%= parseEther(settings.perpsGmxInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsGmxMinimumInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsGmxMaintenanceMarginScalar) %>",
    "<%= parseEther(settings.perpsGmxFlagRewardRatioD18) %>",
    "<%= parseEther(settings.perpsGmxMinimumPositionMargin) %>",
]
depends = ["invoke.createGmxPerpsMarket"]

[invoke.setPerpsGmxLockedOiRatio]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLockedOiRatio"
args = ["<%= settings.perpsGmxMarketId %>", "<%= parseEther(settings.perpsGmxLockedOiRatio) %>"]
depends = ["invoke.createGmxPerpsMarket"]
