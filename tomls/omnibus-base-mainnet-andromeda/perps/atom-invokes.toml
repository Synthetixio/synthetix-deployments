[setting.perpsAtomMarketId]

[setting.perpsAtomSkewScale]

[setting.perpsAtomMaxFundingVelocity]

[setting.perpsAtomMakerFeeRatio]

[setting.perpsAtomTakerFeeRatio]

[setting.perpsAtomMaxMarketSize]

[setting.perpsAtomInitialMarginRatio]

[setting.perpsAtomMaintenanceMarginFraction]

[setting.perpsAtomFlagRewardRatioD18]

[setting.perpsAtomMaxLiquidationLimitAccumulationMultiplier]

[setting.perpsAtomMaxSecondsInLiquidationWindow]

[setting.perpsAtomMaxLiquidationPd]

[setting.perpsAtomEndorsedLiquidator]

[setting.perpsAtomMinimumPositionMargin]

[setting.perpsAtomLockedOiRatio]

[invoke.createAtomPerpsMarket]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "createMarket"
args = ["<%= settings.perpsAtomMarketId %>", "Cosmos", "ATOM"]

[invoke.setPerpsPriceAtom]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "updatePriceData"
args = [
    "<%= settings.perpsAtomMarketId %>",
    "<%= extras.atom_oracle_id %>",
    "<%= settings.bigCapStrictStalenessTolerance %>",
]
depends = ["invoke.createAtomPerpsMarket"]

# Do not modify this step. Edit [invoke.setPerpsAtomSettlementStrategy] instead.
[invoke.addPerpsAtomSettlementStrategy]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "addSettlementStrategy"
args = [
    "<%= settings.perpsAtomMarketId %>",
    { strategyType = "0", settlementDelay = "0", settlementWindowDuration = "1", priceVerificationContract = "0x0000000000000000000000000000000000000000", feedId = "0x0000000000000000000000000000000000000000000000000000000000000000", settlementReward = "0", disabled = false, commitmentPriceDelay = "0" },
]
extra.atom_pyth_settlement_strategy.event = "SettlementStrategyAdded"
extra.atom_pyth_settlement_strategy.arg = 2
depends = ["invoke.createAtomPerpsMarket"]

[invoke.setPerpsAtomSettlementStrategy]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setSettlementStrategy"
args = [
    "<%= settings.perpsAtomMarketId %>",
    "<%= extras.atom_pyth_settlement_strategy %>",                                                                                                                                                                                                                                                                                                                                                                                                                         # Settlement Strategy ID
    { strategyType = "0", settlementDelay = "<%= settings.bigCapSettlementDelay %>", settlementWindowDuration = "<%= settings.bigCapSettlementWindowDuration %>", priceVerificationContract = "<%= imports.pyth_erc7412_wrapper.contracts.PythERC7412Wrapper.address %>", feedId = "<%= settings.pythAtomFeedId %>", settlementReward = "<%= parseEther(settings.settlementReward) %>", disabled = false, commitmentPriceDelay = "<%= settings.commitmentPriceDelay %>" },
]
depends = [
    'provision.perpsFactory',
    'setting.perpsAtomMarketId',
    'invoke.addPerpsAtomSettlementStrategy',
    'provision.pyth_erc7412_wrapper',
    'setting.bigCapSettlementDelay',
    'setting.bigCapSettlementWindowDuration',
    'setting.pythAtomFeedId',
    'setting.settlementReward',
    'setting.commitmentPriceDelay',
]
[invoke.setPerpsAtomFundingParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setFundingParameters"
args = [
    "<%= settings.perpsAtomMarketId %>",
    "<%= parseEther(settings.perpsAtomSkewScale) %>",
    "<%= parseEther(settings.perpsAtomMaxFundingVelocity) %>",
]
depends = ["invoke.createAtomPerpsMarket"]

[invoke.setPerpsAtomOrderFees]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setOrderFees"
args = [
    "<%= settings.perpsAtomMarketId %>",
    "<%= parseEther(settings.perpsAtomMakerFeeRatio) %>",
    "<%= parseEther(settings.perpsAtomTakerFeeRatio) %>",
]
depends = ["invoke.createAtomPerpsMarket"]

[invoke.setPerpsAtomMaxMarketSize]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketSize"
args = ["<%= settings.perpsAtomMarketId %>", "<%= parseEther(settings.perpsAtomMaxMarketSize) %>"]
depends = ["invoke.createAtomPerpsMarket"]

[invoke.setPerpsAtomMaxMarketValue]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketValue"
args = ["<%= settings.perpsAtomMarketId %>", "<%= parseEther(settings.perpsAtomMaxMarketValue) %>"]
depends = ["invoke.createAtomPerpsMarket"]

[invoke.setPerpsAtomMaxLiquidationParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxLiquidationParameters"
args = [
    "<%= settings.perpsAtomMarketId %>",
    "<%= parseEther(settings.perpsAtomMaxLiquidationLimitAccumulationMultiplier) %>",
    "<%= settings.perpsAtomMaxSecondsInLiquidationWindow %>",
    "<%= parseEther(settings.perpsAtomMaxLiquidationPd) %>",
    "<%= settings.perpsAtomEndorsedLiquidator %>",
]
depends = ["invoke.createAtomPerpsMarket"]

[invoke.setPerpsAtomLiquidationParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLiquidationParameters"
args = [
    "<%= settings.perpsAtomMarketId %>",
    "<%= parseEther(settings.perpsAtomInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsAtomMinimumInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsAtomMaintenanceMarginScalar) %>",
    "<%= parseEther(settings.perpsAtomFlagRewardRatioD18) %>",
    "<%= parseEther(settings.perpsAtomMinimumPositionMargin) %>",
]
depends = ["invoke.createAtomPerpsMarket"]

[invoke.setPerpsAtomLockedOiRatio]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLockedOiRatio"
args = ["<%= settings.perpsAtomMarketId %>", "<%= parseEther(settings.perpsAtomLockedOiRatio) %>"]
depends = ["invoke.createAtomPerpsMarket"]
