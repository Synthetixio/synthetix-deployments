[invoke.createBalPerpsMarket]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "createMarket"
args = ["<%= settings.perpsBalMarketId %>", "Balancer", "BAL"]

[invoke.setPerpsPriceBal]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "updatePriceData"
args = [
    "<%= settings.perpsBalMarketId %>",
    "<%= extras.bal_oracle_id %>",
    "<%= settings.bigCapStrictStalenessTolerance %>",
]
depends = ["invoke.createBalPerpsMarket"]

# Do not modify this step. Edit [invoke.setPerpsBalSettlementStrategy] instead.
[invoke.addPerpsBalSettlementStrategy]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "addSettlementStrategy"
args = [
    "<%= settings.perpsBalMarketId %>",
    { strategyType = "0", settlementDelay = "0", settlementWindowDuration = "1", priceVerificationContract = "0x0000000000000000000000000000000000000000", feedId = "0x0000000000000000000000000000000000000000000000000000000000000000", settlementReward = "0", disabled = false, commitmentPriceDelay = "0" },
]
extra.bal_pyth_settlement_strategy.event = "SettlementStrategyAdded"
extra.bal_pyth_settlement_strategy.arg = 2
depends = ["invoke.createBalPerpsMarket"]

[invoke.setPerpsBalSettlementStrategy]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setSettlementStrategy"
args = [
    "<%= settings.perpsBalMarketId %>",
    "<%= extras.bal_pyth_settlement_strategy %>",                                                                                                                                                                                                                                                                                                                                                                                                                         # Settlement Strategy ID
    { strategyType = "0", settlementDelay = "<%= settings.bigCapSettlementDelay %>", settlementWindowDuration = "<%= settings.bigCapSettlementWindowDuration %>", priceVerificationContract = "<%= imports.pyth_erc7412_wrapper.contracts.PythERC7412Wrapper.address %>", feedId = "<%= settings.pythBalFeedId %>", settlementReward = "<%= parseEther(settings.settlementReward) %>", disabled = false, commitmentPriceDelay = "<%= settings.commitmentPriceDelay %>" },
]
depends = [
    'provision.perpsFactory',
    'setting.perpsBalMarketId',
    'invoke.addPerpsBalSettlementStrategy',
    'provision.pyth_erc7412_wrapper',
    'setting.bigCapSettlementDelay',
    'setting.bigCapSettlementWindowDuration',
    'setting.pythBalFeedId',
    'setting.settlementReward',
    'setting.commitmentPriceDelay',
]
[invoke.setPerpsBalFundingParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setFundingParameters"
args = [
    "<%= settings.perpsBalMarketId %>",
    "<%= parseEther(settings.perpsBalSkewScale) %>",
    "<%= parseEther(settings.perpsBalMaxFundingVelocity) %>",
]
depends = ["invoke.createBalPerpsMarket"]

[invoke.setPerpsBalOrderFees]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setOrderFees"
args = [
    "<%= settings.perpsBalMarketId %>",
    "<%= parseEther(settings.perpsBalMakerFeeRatio) %>",
    "<%= parseEther(settings.perpsBalTakerFeeRatio) %>",
]
depends = ["invoke.createBalPerpsMarket"]

[invoke.setPerpsBalMaxMarketSize]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketSize"
args = ["<%= settings.perpsBalMarketId %>", "<%= parseEther(settings.perpsBalMaxMarketSize) %>"]
depends = ["invoke.createBalPerpsMarket"]

[invoke.setPerpsBalMaxMarketValue]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketValue"
args = ["<%= settings.perpsBalMarketId %>", "<%= parseEther(settings.perpsBalMaxMarketValue) %>"]
depends = ["invoke.createBalPerpsMarket"]

[invoke.setPerpsBalMaxLiquidationParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxLiquidationParameters"
args = [
    "<%= settings.perpsBalMarketId %>",
    "<%= parseEther(settings.perpsBalMaxLiquidationLimitAccumulationMultiplier) %>",
    "<%= settings.perpsBalMaxSecondsInLiquidationWindow %>",
    "<%= parseEther(settings.perpsBalMaxLiquidationPd) %>",
    "<%= settings.perpsBalEndorsedLiquidator %>",
]
depends = ["invoke.createBalPerpsMarket"]

[invoke.setPerpsBalLiquidationParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLiquidationParameters"
args = [
    "<%= settings.perpsBalMarketId %>",
    "<%= parseEther(settings.perpsBalInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsBalMinimumInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsBalMaintenanceMarginScalar) %>",
    "<%= parseEther(settings.perpsBalFlagRewardRatioD18) %>",
    "<%= parseEther(settings.perpsBalMinimumPositionMargin) %>",
]
depends = ["invoke.createBalPerpsMarket"]

[invoke.setPerpsBalLockedOiRatio]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLockedOiRatio"
args = ["<%= settings.perpsBalMarketId %>", "<%= parseEther(settings.perpsBalLockedOiRatio) %>"]
depends = ["invoke.createBalPerpsMarket"]
