[invoke.createDydxPerpsMarket]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "createMarket"
args = ["<%= settings.perpsDydxMarketId %>", "Dydx", "DYDX"]

[invoke.setPerpsPriceDydx]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "updatePriceData"
args = [
    "<%= settings.perpsDydxMarketId %>",
    "<%= extras.dydx_oracle_id %>",
    "<%= settings.bigCapStrictStalenessTolerance %>",
]
depends = ["invoke.createDydxPerpsMarket"]

# Do not modify this step. Edit [invoke.setPerpsDydxSettlementStrategy] instead.
[invoke.addPerpsDydxSettlementStrategy]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "addSettlementStrategy"
args = [
    "<%= settings.perpsDydxMarketId %>",
    { strategyType = "0", settlementDelay = "0", settlementWindowDuration = "1", priceVerificationContract = "0x0000000000000000000000000000000000000000", feedId = "0x0000000000000000000000000000000000000000000000000000000000000000", settlementReward = "0", disabled = false, commitmentPriceDelay = "0" },
]
extra.dydx_pyth_settlement_strategy.event = "SettlementStrategyAdded"
extra.dydx_pyth_settlement_strategy.arg = 2
depends = ["invoke.createDydxPerpsMarket"]

[invoke.setPerpsDydxSettlementStrategy]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setSettlementStrategy"
args = [
    "<%= settings.perpsDydxMarketId %>",
    "<%= extras.dydx_pyth_settlement_strategy %>",                                                                                                                                                                                                                                                                                                                                                                                                                         # Settlement Strategy ID
    { strategyType = "0", settlementDelay = "<%= settings.bigCapSettlementDelay %>", settlementWindowDuration = "<%= settings.bigCapSettlementWindowDuration %>", priceVerificationContract = "<%= imports.pyth_erc7412_wrapper.contracts.PythERC7412Wrapper.address %>", feedId = "<%= settings.pythDydxFeedId %>", settlementReward = "<%= parseEther(settings.settlementReward) %>", disabled = false, commitmentPriceDelay = "<%= settings.commitmentPriceDelay %>" },
]
depends = [
    'provision.perpsFactory',
    'setting.perpsDydxMarketId',
    'invoke.addPerpsDydxSettlementStrategy',
    'provision.pyth_erc7412_wrapper',
    'setting.bigCapSettlementDelay',
    'setting.bigCapSettlementWindowDuration',
    'setting.pythDydxFeedId',
    'setting.settlementReward',
    'setting.commitmentPriceDelay',
]
[invoke.setPerpsDydxFundingParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setFundingParameters"
args = [
    "<%= settings.perpsDydxMarketId %>",
    "<%= parseEther(settings.perpsDydxSkewScale) %>",
    "<%= parseEther(settings.perpsDydxMaxFundingVelocity) %>",
]
depends = ["invoke.createDydxPerpsMarket"]

[invoke.setPerpsDydxOrderFees]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setOrderFees"
args = [
    "<%= settings.perpsDydxMarketId %>",
    "<%= parseEther(settings.perpsDydxMakerFeeRatio) %>",
    "<%= parseEther(settings.perpsDydxTakerFeeRatio) %>",
]
depends = ["invoke.createDydxPerpsMarket"]

[invoke.setPerpsDydxMaxMarketSize]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketSize"
args = ["<%= settings.perpsDydxMarketId %>", "<%= parseEther(settings.perpsDydxMaxMarketSize) %>"]
depends = ["invoke.createDydxPerpsMarket"]

[invoke.setPerpsDydxMaxMarketValue]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketValue"
args = ["<%= settings.perpsDydxMarketId %>", "<%= parseEther(settings.perpsDydxMaxMarketValue) %>"]
depends = ["invoke.createDydxPerpsMarket"]

[invoke.setPerpsDydxMaxLiquidationParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxLiquidationParameters"
args = [
    "<%= settings.perpsDydxMarketId %>",
    "<%= parseEther(settings.perpsDydxMaxLiquidationLimitAccumulationMultiplier) %>",
    "<%= settings.perpsDydxMaxSecondsInLiquidationWindow %>",
    "<%= parseEther(settings.perpsDydxMaxLiquidationPd) %>",
    "<%= settings.perpsDydxEndorsedLiquidator %>",
]
depends = ["invoke.createDydxPerpsMarket"]

[invoke.setPerpsDydxLiquidationParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLiquidationParameters"
args = [
    "<%= settings.perpsDydxMarketId %>",
    "<%= parseEther(settings.perpsDydxInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsDydxMinimumInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsDydxMaintenanceMarginScalar) %>",
    "<%= parseEther(settings.perpsDydxFlagRewardRatioD18) %>",
    "<%= parseEther(settings.perpsDydxMinimumPositionMargin) %>",
]
depends = ["invoke.createDydxPerpsMarket"]

[invoke.setPerpsDydxLockedOiRatio]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLockedOiRatio"
args = ["<%= settings.perpsDydxMarketId %>", "<%= parseEther(settings.perpsDydxLockedOiRatio) %>"]
depends = ["invoke.createDydxPerpsMarket"]
