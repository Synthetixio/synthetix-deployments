[invoke.createFtmPerpsMarket]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "createMarket"
args = ["<%= settings.perpsFtmMarketId %>", "Fantom", "FTM"]

[invoke.setPerpsPriceFtm]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "updatePriceData"
args = [
    "<%= settings.perpsFtmMarketId %>",
    "<%= extras.ftm_oracle_id %>",
    "<%= settings.bigCapStrictStalenessTolerance %>",
]
depends = ["invoke.createFtmPerpsMarket"]

# Do not modify this step. Edit [invoke.setPerpsFtmSettlementStrategy] instead.
[invoke.addPerpsFtmSettlementStrategy]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "addSettlementStrategy"
args = [
    "<%= settings.perpsFtmMarketId %>",
    { strategyType = "0", settlementDelay = "0", settlementWindowDuration = "1", priceVerificationContract = "0x0000000000000000000000000000000000000000", feedId = "0x0000000000000000000000000000000000000000000000000000000000000000", settlementReward = "0", disabled = false, commitmentPriceDelay = "0" },
]
extra.ftm_pyth_settlement_strategy.event = "SettlementStrategyAdded"
extra.ftm_pyth_settlement_strategy.arg = 2
depends = ["invoke.createFtmPerpsMarket"]

[invoke.setPerpsFtmSettlementStrategy]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setSettlementStrategy"
args = [
    "<%= settings.perpsFtmMarketId %>",
    "<%= extras.ftm_pyth_settlement_strategy %>",                                                                                                                                                                                                                                                                                                                                                                                                                         # Settlement Strategy ID
    { strategyType = "0", settlementDelay = "<%= settings.bigCapSettlementDelay %>", settlementWindowDuration = "<%= settings.bigCapSettlementWindowDuration %>", priceVerificationContract = "<%= imports.pyth_erc7412_wrapper.contracts.PythERC7412Wrapper.address %>", feedId = "<%= settings.pythFtmFeedId %>", settlementReward = "<%= parseEther(settings.settlementReward) %>", disabled = false, commitmentPriceDelay = "<%= settings.commitmentPriceDelay %>" },
]
depends = [
    'provision.perpsFactory',
    'setting.perpsFtmMarketId',
    'invoke.addPerpsFtmSettlementStrategy',
    'provision.pyth_erc7412_wrapper',
    'setting.bigCapSettlementDelay',
    'setting.bigCapSettlementWindowDuration',
    'setting.pythFtmFeedId',
    'setting.settlementReward',
    'setting.commitmentPriceDelay',
]
[invoke.setPerpsFtmFundingParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setFundingParameters"
args = [
    "<%= settings.perpsFtmMarketId %>",
    "<%= parseEther(settings.perpsFtmSkewScale) %>",
    "<%= parseEther(settings.perpsFtmMaxFundingVelocity) %>",
]
depends = ["invoke.createFtmPerpsMarket"]

[invoke.setPerpsFtmOrderFees]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setOrderFees"
args = [
    "<%= settings.perpsFtmMarketId %>",
    "<%= parseEther(settings.perpsFtmMakerFeeRatio) %>",
    "<%= parseEther(settings.perpsFtmTakerFeeRatio) %>",
]
depends = ["invoke.createFtmPerpsMarket"]

[invoke.setPerpsFtmMaxMarketSize]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketSize"
args = ["<%= settings.perpsFtmMarketId %>", "<%= parseEther(settings.perpsFtmMaxMarketSize) %>"]
depends = ["invoke.createFtmPerpsMarket"]

[invoke.setPerpsFtmMaxMarketValue]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketValue"
args = ["<%= settings.perpsFtmMarketId %>", "<%= parseEther(settings.perpsFtmMaxMarketValue) %>"]
depends = ["invoke.createFtmPerpsMarket"]

[invoke.setPerpsFtmMaxLiquidationParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxLiquidationParameters"
args = [
    "<%= settings.perpsFtmMarketId %>",
    "<%= parseEther(settings.perpsFtmMaxLiquidationLimitAccumulationMultiplier) %>",
    "<%= settings.perpsFtmMaxSecondsInLiquidationWindow %>",
    "<%= parseEther(settings.perpsFtmMaxLiquidationPd) %>",
    "<%= settings.perpsFtmEndorsedLiquidator %>",
]
depends = ["invoke.createFtmPerpsMarket"]

[invoke.setPerpsFtmLiquidationParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLiquidationParameters"
args = [
    "<%= settings.perpsFtmMarketId %>",
    "<%= parseEther(settings.perpsFtmInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsFtmMinimumInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsFtmMaintenanceMarginScalar) %>",
    "<%= parseEther(settings.perpsFtmFlagRewardRatioD18) %>",
    "<%= parseEther(settings.perpsFtmMinimumPositionMargin) %>",
]
depends = ["invoke.createFtmPerpsMarket"]

[invoke.setPerpsFtmLockedOiRatio]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLockedOiRatio"
args = ["<%= settings.perpsFtmMarketId %>", "<%= parseEther(settings.perpsFtmLockedOiRatio) %>"]
depends = ["invoke.createFtmPerpsMarket"]
