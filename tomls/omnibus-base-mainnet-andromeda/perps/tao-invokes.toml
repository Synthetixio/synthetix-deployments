[setting.perpsTaoMarketId]

[setting.perpsTaoSkewScale]

[setting.perpsTaoMaxFundingVelocity]

[setting.perpsTaoMakerFeeRatio]

[setting.perpsTaoTakerFeeRatio]

[setting.perpsTaoMaxMarketSize]

[setting.perpsTaoInitialMarginRatio]

[setting.perpsTaoMaintenanceMarginFraction]

[setting.perpsTaoFlagRewardRatioD18]

[setting.perpsTaoMaxLiquidationLimitAccumulationMultiplier]

[setting.perpsTaoMaxSecondsInLiquidationWindow]

[setting.perpsTaoMaxLiquidationPd]

[setting.perpsTaoEndorsedLiquidator]

[setting.perpsTaoMinimumPositionMargin]

[setting.perpsTaoLockedOiRatio]

[invoke.createTaoPerpsMarket]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "createMarket"
args = ["<%= settings.perpsTaoMarketId %>", "Bittensor", "TAO"]

[invoke.setPerpsPriceTao]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "updatePriceData"
args = [
    "<%= settings.perpsTaoMarketId %>",
    "<%= extras.tao_oracle_id %>",
    "<%= settings.bigCapStrictStalenessTolerance %>",
]
depends = ["invoke.createTaoPerpsMarket"]

# Do not modify this step. Edit [invoke.setPerpsTaoSettlementStrategy] instead.
[invoke.addPerpsTaoSettlementStrategy]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "addSettlementStrategy"
args = [
    "<%= settings.perpsTaoMarketId %>",
    { strategyType = "0", settlementDelay = "0", settlementWindowDuration = "1", priceVerificationContract = "0x0000000000000000000000000000000000000000", feedId = "0x0000000000000000000000000000000000000000000000000000000000000000", settlementReward = "0", disabled = false, commitmentPriceDelay = "0" },
]
extra.tao_pyth_settlement_strategy.event = "SettlementStrategyAdded"
extra.tao_pyth_settlement_strategy.arg = 2
depends = ["invoke.createTaoPerpsMarket"]

[invoke.setPerpsTaoSettlementStrategy]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setSettlementStrategy"
args = [
    "<%= settings.perpsTaoMarketId %>",
    "<%= extras.tao_pyth_settlement_strategy %>",                                                                                                                                                                                                                                                                                                                                                                                                                         # Settlement Strategy ID
    { strategyType = "0", settlementDelay = "<%= settings.bigCapSettlementDelay %>", settlementWindowDuration = "<%= settings.bigCapSettlementWindowDuration %>", priceVerificationContract = "<%= imports.pyth_erc7412_wrapper.contracts.PythERC7412Wrapper.address %>", feedId = "<%= settings.pythTaoFeedId %>", settlementReward = "<%= parseEther(settings.settlementReward) %>", disabled = false, commitmentPriceDelay = "<%= settings.commitmentPriceDelay %>" },
]
depends = [
    'provision.perpsFactory',
    'setting.perpsTaoMarketId',
    'invoke.addPerpsTaoSettlementStrategy',
    'provision.pyth_erc7412_wrapper',
    'setting.bigCapSettlementDelay',
    'setting.bigCapSettlementWindowDuration',
    'setting.pythTaoFeedId',
    'setting.settlementReward',
    'setting.commitmentPriceDelay',
]
[invoke.setPerpsTaoFundingParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setFundingParameters"
args = [
    "<%= settings.perpsTaoMarketId %>",
    "<%= parseEther(settings.perpsTaoSkewScale) %>",
    "<%= parseEther(settings.perpsTaoMaxFundingVelocity) %>",
]
depends = ["invoke.createTaoPerpsMarket"]

[invoke.setPerpsTaoOrderFees]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setOrderFees"
args = [
    "<%= settings.perpsTaoMarketId %>",
    "<%= parseEther(settings.perpsTaoMakerFeeRatio) %>",
    "<%= parseEther(settings.perpsTaoTakerFeeRatio) %>",
]
depends = ["invoke.createTaoPerpsMarket"]

[invoke.setPerpsTaoMaxMarketSize]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketSize"
args = ["<%= settings.perpsTaoMarketId %>", "<%= parseEther(settings.perpsTaoMaxMarketSize) %>"]
depends = ["invoke.createTaoPerpsMarket"]

[invoke.setPerpsTaoMaxMarketValue]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketValue"
args = ["<%= settings.perpsTaoMarketId %>", "<%= parseEther(settings.perpsTaoMaxMarketValue) %>"]
depends = ["invoke.createTaoPerpsMarket"]

[invoke.setPerpsTaoMaxLiquidationParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxLiquidationParameters"
args = [
    "<%= settings.perpsTaoMarketId %>",
    "<%= parseEther(settings.perpsTaoMaxLiquidationLimitAccumulationMultiplier) %>",
    "<%= settings.perpsTaoMaxSecondsInLiquidationWindow %>",
    "<%= parseEther(settings.perpsTaoMaxLiquidationPd) %>",
    "<%= settings.perpsTaoEndorsedLiquidator %>",
]
depends = ["invoke.createTaoPerpsMarket"]

[invoke.setPerpsTaoLiquidationParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLiquidationParameters"
args = [
    "<%= settings.perpsTaoMarketId %>",
    "<%= parseEther(settings.perpsTaoInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsTaoMinimumInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsTaoMaintenanceMarginScalar) %>",
    "<%= parseEther(settings.perpsTaoFlagRewardRatioD18) %>",
    "<%= parseEther(settings.perpsTaoMinimumPositionMargin) %>",
]
depends = ["invoke.createTaoPerpsMarket"]

[invoke.setPerpsTaoLockedOiRatio]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLockedOiRatio"
args = ["<%= settings.perpsTaoMarketId %>", "<%= parseEther(settings.perpsTaoLockedOiRatio) %>"]
depends = ["invoke.createTaoPerpsMarket"]
