[invoke.createBnbPerpsMarket]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "createMarket"
args = ["<%= settings.perpsBnbMarketId %>", "BNB", "BNB"]

[invoke.setPerpsPriceBnb]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "updatePriceData"
args = [
    "<%= settings.perpsBnbMarketId %>",
    "<%= extras.bnb_oracle_id %>",
    "<%= settings.bigCapStrictStalenessTolerance %>",
]
depends = ["invoke.createBnbPerpsMarket"]

# Do not modify this step. Edit [invoke.setPerpsBnbSettlementStrategy] instead.
[invoke.addPerpsBnbSettlementStrategy]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "addSettlementStrategy"
args = [
    "<%= settings.perpsBnbMarketId %>",
    { strategyType = "0", settlementDelay = "0", settlementWindowDuration = "1", priceVerificationContract = "0x0000000000000000000000000000000000000000", feedId = "0x0000000000000000000000000000000000000000000000000000000000000000", settlementReward = "0", disabled = false, commitmentPriceDelay = "0" },
]
extra.bnb_pyth_settlement_strategy.event = "SettlementStrategyAdded"
extra.bnb_pyth_settlement_strategy.arg = 2
depends = ["invoke.createBnbPerpsMarket"]

[invoke.setPerpsBnbSettlementStrategy]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setSettlementStrategy"
args = [
    "<%= settings.perpsBnbMarketId %>",
    "<%= extras.bnb_pyth_settlement_strategy %>",                                                                                                                                                                                                                                                                                                                                                                                                                         # Settlement Strategy ID
    { strategyType = "0", settlementDelay = "<%= settings.bigCapSettlementDelay %>", settlementWindowDuration = "<%= settings.bigCapSettlementWindowDuration %>", priceVerificationContract = "<%= imports.pyth_erc7412_wrapper.contracts.PythERC7412Wrapper.address %>", feedId = "<%= settings.pythBnbFeedId %>", settlementReward = "<%= parseEther(settings.settlementReward) %>", disabled = false, commitmentPriceDelay = "<%= settings.commitmentPriceDelay %>" },
]
depends = [
    'provision.perpsFactory',
    'setting.perpsBnbMarketId',
    'invoke.addPerpsBnbSettlementStrategy',
    'provision.pyth_erc7412_wrapper',
    'setting.bigCapSettlementDelay',
    'setting.bigCapSettlementWindowDuration',
    'setting.pythBnbFeedId',
    'setting.settlementReward',
    'setting.commitmentPriceDelay',
]
[invoke.setPerpsBnbFundingParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setFundingParameters"
args = [
    "<%= settings.perpsBnbMarketId %>",
    "<%= parseEther(settings.perpsBnbSkewScale) %>",
    "<%= parseEther(settings.perpsBnbMaxFundingVelocity) %>",
]
depends = ["invoke.createBnbPerpsMarket"]

[invoke.setPerpsBnbOrderFees]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setOrderFees"
args = [
    "<%= settings.perpsBnbMarketId %>",
    "<%= parseEther(settings.perpsBnbMakerFeeRatio) %>",
    "<%= parseEther(settings.perpsBnbTakerFeeRatio) %>",
]
depends = ["invoke.createBnbPerpsMarket"]

[invoke.setPerpsBnbMaxMarketSize]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketSize"
args = ["<%= settings.perpsBnbMarketId %>", "<%= parseEther(settings.perpsBnbMaxMarketSize) %>"]
depends = ["invoke.createBnbPerpsMarket"]

[invoke.setPerpsBnbMaxMarketValue]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketValue"
args = ["<%= settings.perpsBnbMarketId %>", "<%= parseEther(settings.perpsBnbMaxMarketValue) %>"]
depends = ["invoke.createBnbPerpsMarket"]

[invoke.setPerpsBnbMaxLiquidationParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxLiquidationParameters"
args = [
    "<%= settings.perpsBnbMarketId %>",
    "<%= parseEther(settings.perpsBnbMaxLiquidationLimitAccumulationMultiplier) %>",
    "<%= settings.perpsBnbMaxSecondsInLiquidationWindow %>",
    "<%= parseEther(settings.perpsBnbMaxLiquidationPd) %>",
    "<%= settings.perpsBnbEndorsedLiquidator %>",
]
depends = ["invoke.createBnbPerpsMarket"]

[invoke.setPerpsBnbLiquidationParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLiquidationParameters"
args = [
    "<%= settings.perpsBnbMarketId %>",
    "<%= parseEther(settings.perpsBnbInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsBnbMinimumInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsBnbMaintenanceMarginScalar) %>",
    "<%= parseEther(settings.perpsBnbFlagRewardRatioD18) %>",
    "<%= parseEther(settings.perpsBnbMinimumPositionMargin) %>",
]
depends = ["invoke.createBnbPerpsMarket"]

[invoke.setPerpsBnbLockedOiRatio]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLockedOiRatio"
args = ["<%= settings.perpsBnbMarketId %>", "<%= parseEther(settings.perpsBnbLockedOiRatio) %>"]
depends = ["invoke.createBnbPerpsMarket"]
