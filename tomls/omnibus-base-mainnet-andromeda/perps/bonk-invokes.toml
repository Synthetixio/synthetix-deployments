[invoke.createBonkPerpsMarket]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "createMarket"
args = ["<%= settings.perpsBonkMarketId %>", "Bonk", "BONK"]

[invoke.setPerpsPriceBonk]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "updatePriceData"
args = [
    "<%= settings.perpsBonkMarketId %>",
    "<%= extras.bonk_oracle_id %>",
    "<%= settings.bigCapStrictStalenessTolerance %>",
]
depends = ["invoke.createBonkPerpsMarket"]

# Do not modify this step. Edit [invoke.setPerpsBonkSettlementStrategy] instead.
[invoke.addPerpsBonkSettlementStrategy]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "addSettlementStrategy"
args = [
    "<%= settings.perpsBonkMarketId %>",
    { strategyType = "0", settlementDelay = "0", settlementWindowDuration = "1", priceVerificationContract = "0x0000000000000000000000000000000000000000", feedId = "0x0000000000000000000000000000000000000000000000000000000000000000", settlementReward = "0", disabled = false, commitmentPriceDelay = "0" },
]
extra.bonk_pyth_settlement_strategy.event = "SettlementStrategyAdded"
extra.bonk_pyth_settlement_strategy.arg = 2
depends = ["invoke.createBonkPerpsMarket"]

[invoke.setPerpsBonkSettlementStrategy]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setSettlementStrategy"
args = [
    "<%= settings.perpsBonkMarketId %>",
    "<%= extras.bonk_pyth_settlement_strategy %>",                                                                                                                                                                                                                                                                                                                                                                                                                         # Settlement Strategy ID
    { strategyType = "0", settlementDelay = "<%= settings.bigCapSettlementDelay %>", settlementWindowDuration = "<%= settings.bigCapSettlementWindowDuration %>", priceVerificationContract = "<%= imports.pyth_erc7412_wrapper.contracts.PythERC7412Wrapper.address %>", feedId = "<%= settings.pythBonkFeedId %>", settlementReward = "<%= parseEther(settings.settlementReward) %>", disabled = false, commitmentPriceDelay = "<%= settings.commitmentPriceDelay %>" },
]
depends = [
    'provision.perpsFactory',
    'setting.perpsBonkMarketId',
    'invoke.addPerpsBonkSettlementStrategy',
    'provision.pyth_erc7412_wrapper',
    'setting.bigCapSettlementDelay',
    'setting.bigCapSettlementWindowDuration',
    'setting.pythBonkFeedId',
    'setting.settlementReward',
    'setting.commitmentPriceDelay',
]
[invoke.setPerpsBonkFundingParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setFundingParameters"
args = [
    "<%= settings.perpsBonkMarketId %>",
    "<%= parseEther(settings.perpsBonkSkewScale) %>",
    "<%= parseEther(settings.perpsBonkMaxFundingVelocity) %>",
]
depends = ["invoke.createBonkPerpsMarket"]

[invoke.setPerpsBonkOrderFees]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setOrderFees"
args = [
    "<%= settings.perpsBonkMarketId %>",
    "<%= parseEther(settings.perpsBonkMakerFeeRatio) %>",
    "<%= parseEther(settings.perpsBonkTakerFeeRatio) %>",
]
depends = ["invoke.createBonkPerpsMarket"]

[invoke.setPerpsBonkMaxMarketSize]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketSize"
args = ["<%= settings.perpsBonkMarketId %>", "<%= parseEther(settings.perpsBonkMaxMarketSize) %>"]
depends = ["invoke.createBonkPerpsMarket"]

[invoke.setPerpsBonkMaxMarketValue]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketValue"
args = ["<%= settings.perpsBonkMarketId %>", "<%= parseEther(settings.perpsBonkMaxMarketValue) %>"]
depends = ["invoke.createBonkPerpsMarket"]

[invoke.setPerpsBonkMaxLiquidationParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxLiquidationParameters"
args = [
    "<%= settings.perpsBonkMarketId %>",
    "<%= parseEther(settings.perpsBonkMaxLiquidationLimitAccumulationMultiplier) %>",
    "<%= settings.perpsBonkMaxSecondsInLiquidationWindow %>",
    "<%= parseEther(settings.perpsBonkMaxLiquidationPd) %>",
    "<%= settings.perpsBonkEndorsedLiquidator %>",
]
depends = ["invoke.createBonkPerpsMarket"]

[invoke.setPerpsBonkLiquidationParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLiquidationParameters"
args = [
    "<%= settings.perpsBonkMarketId %>",
    "<%= parseEther(settings.perpsBonkInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsBonkMinimumInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsBonkMaintenanceMarginScalar) %>",
    "<%= parseEther(settings.perpsBonkFlagRewardRatioD18) %>",
    "<%= parseEther(settings.perpsBonkMinimumPositionMargin) %>",
]
depends = ["invoke.createBonkPerpsMarket"]

[invoke.setPerpsBonkLockedOiRatio]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLockedOiRatio"
args = ["<%= settings.perpsBonkMarketId %>", "<%= parseEther(settings.perpsBonkLockedOiRatio) %>"]
depends = ["invoke.createBonkPerpsMarket"]
