[setting.perpsAlgoMarketId]

[setting.perpsAlgoSkewScale]

[setting.perpsAlgoMaxFundingVelocity]

[setting.perpsAlgoMakerFeeRatio]

[setting.perpsAlgoTakerFeeRatio]

[setting.perpsAlgoMaxMarketSize]

[setting.perpsAlgoInitialMarginRatio]

[setting.perpsAlgoMaintenanceMarginFraction]

[setting.perpsAlgoFlagRewardRatioD18]

[setting.perpsAlgoMaxLiquidationLimitAccumulationMultiplier]

[setting.perpsAlgoMaxSecondsInLiquidationWindow]

[setting.perpsAlgoMaxLiquidationPd]

[setting.perpsAlgoEndorsedLiquidator]

[setting.perpsAlgoMinimumPositionMargin]

[setting.perpsAlgoLockedOiRatio]

[invoke.createAlgoPerpsMarket]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "createMarket"
args = ["<%= settings.perpsAlgoMarketId %>", "Algorand", "ALGO"]

[invoke.setPerpsPriceAlgo]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "updatePriceData"
args = [
    "<%= settings.perpsAlgoMarketId %>",
    "<%= extras.algo_oracle_id %>",
    "<%= settings.bigCapStrictStalenessTolerance %>",
]
depends = ["invoke.createAlgoPerpsMarket"]

# Do not modify this step. Edit [invoke.setPerpsAlgoSettlementStrategy] instead.
[invoke.addPerpsAlgoSettlementStrategy]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "addSettlementStrategy"
args = [
    "<%= settings.perpsAlgoMarketId %>",
    { strategyType = "0", settlementDelay = "0", settlementWindowDuration = "1", priceVerificationContract = "0x0000000000000000000000000000000000000000", feedId = "0x0000000000000000000000000000000000000000000000000000000000000000", settlementReward = "0", disabled = false, commitmentPriceDelay = "0" },
]
extra.algo_pyth_settlement_strategy.event = "SettlementStrategyAdded"
extra.algo_pyth_settlement_strategy.arg = 2
depends = ["invoke.createAlgoPerpsMarket"]

[invoke.setPerpsAlgoSettlementStrategy]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setSettlementStrategy"
args = [
    "<%= settings.perpsAlgoMarketId %>",
    "<%= extras.algo_pyth_settlement_strategy %>",                                                                                                                                                                                                                                                                                                                                                                                                                         # Settlement Strategy ID
    { strategyType = "0", settlementDelay = "<%= settings.bigCapSettlementDelay %>", settlementWindowDuration = "<%= settings.bigCapSettlementWindowDuration %>", priceVerificationContract = "<%= imports.pyth_erc7412_wrapper.contracts.PythERC7412Wrapper.address %>", feedId = "<%= settings.pythAlgoFeedId %>", settlementReward = "<%= parseEther(settings.settlementReward) %>", disabled = false, commitmentPriceDelay = "<%= settings.commitmentPriceDelay %>" },
]
depends = [
    'provision.perpsFactory',
    'setting.perpsAlgoMarketId',
    'invoke.addPerpsAlgoSettlementStrategy',
    'provision.pyth_erc7412_wrapper',
    'setting.bigCapSettlementDelay',
    'setting.bigCapSettlementWindowDuration',
    'setting.pythAlgoFeedId',
    'setting.settlementReward',
    'setting.commitmentPriceDelay',
]
[invoke.setPerpsAlgoFundingParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setFundingParameters"
args = [
    "<%= settings.perpsAlgoMarketId %>",
    "<%= parseEther(settings.perpsAlgoSkewScale) %>",
    "<%= parseEther(settings.perpsAlgoMaxFundingVelocity) %>",
]
depends = ["invoke.createAlgoPerpsMarket"]

[invoke.setPerpsAlgoOrderFees]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setOrderFees"
args = [
    "<%= settings.perpsAlgoMarketId %>",
    "<%= parseEther(settings.perpsAlgoMakerFeeRatio) %>",
    "<%= parseEther(settings.perpsAlgoTakerFeeRatio) %>",
]
depends = ["invoke.createAlgoPerpsMarket"]

[invoke.setPerpsAlgoMaxMarketSize]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketSize"
args = ["<%= settings.perpsAlgoMarketId %>", "<%= parseEther(settings.perpsAlgoMaxMarketSize) %>"]
depends = ["invoke.createAlgoPerpsMarket"]

[invoke.setPerpsAlgoMaxMarketValue]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketValue"
args = ["<%= settings.perpsAlgoMarketId %>", "<%= parseEther(settings.perpsAlgoMaxMarketValue) %>"]
depends = ["invoke.createAlgoPerpsMarket"]

[invoke.setPerpsAlgoMaxLiquidationParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxLiquidationParameters"
args = [
    "<%= settings.perpsAlgoMarketId %>",
    "<%= parseEther(settings.perpsAlgoMaxLiquidationLimitAccumulationMultiplier) %>",
    "<%= settings.perpsAlgoMaxSecondsInLiquidationWindow %>",
    "<%= parseEther(settings.perpsAlgoMaxLiquidationPd) %>",
    "<%= settings.perpsAlgoEndorsedLiquidator %>",
]
depends = ["invoke.createAlgoPerpsMarket"]

[invoke.setPerpsAlgoLiquidationParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLiquidationParameters"
args = [
    "<%= settings.perpsAlgoMarketId %>",
    "<%= parseEther(settings.perpsAlgoInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsAlgoMinimumInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsAlgoMaintenanceMarginScalar) %>",
    "<%= parseEther(settings.perpsAlgoFlagRewardRatioD18) %>",
    "<%= parseEther(settings.perpsAlgoMinimumPositionMargin) %>",
]
depends = ["invoke.createAlgoPerpsMarket"]

[invoke.setPerpsAlgoLockedOiRatio]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLockedOiRatio"
args = ["<%= settings.perpsAlgoMarketId %>", "<%= parseEther(settings.perpsAlgoLockedOiRatio) %>"]
depends = ["invoke.createAlgoPerpsMarket"]
