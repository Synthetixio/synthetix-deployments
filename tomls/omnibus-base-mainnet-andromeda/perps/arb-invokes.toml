[invoke.createArbPerpsMarket]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "createMarket"
args = ["<%= settings.perpsArbMarketId %>", "Arbitrum", "ARB"]

[invoke.setPerpsPriceArb]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "updatePriceData"
args = [
    "<%= settings.perpsArbMarketId %>",
    "<%= extras.arb_oracle_id %>",
    "<%= settings.bigCapStrictStalenessTolerance %>",
]
depends = ["invoke.createArbPerpsMarket"]

# Do not modify this step. Edit [invoke.setPerpsArbSettlementStrategy] instead.
[invoke.addPerpsArbSettlementStrategy]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "addSettlementStrategy"
args = [
    "<%= settings.perpsArbMarketId %>",
    { strategyType = "0", settlementDelay = "0", settlementWindowDuration = "1", priceVerificationContract = "0x0000000000000000000000000000000000000000", feedId = "0x0000000000000000000000000000000000000000000000000000000000000000", settlementReward = "0", disabled = false, commitmentPriceDelay = "0" },
]
extra.arb_pyth_settlement_strategy.event = "SettlementStrategyAdded"
extra.arb_pyth_settlement_strategy.arg = 2
depends = ["invoke.createArbPerpsMarket"]

[invoke.setPerpsArbSettlementStrategy]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setSettlementStrategy"
args = [
    "<%= settings.perpsArbMarketId %>",
    "<%= extras.arb_pyth_settlement_strategy %>",                                                                                                                                                                                                                                                                                                                                                                                                                         # Settlement Strategy ID
    { strategyType = "0", settlementDelay = "<%= settings.bigCapSettlementDelay %>", settlementWindowDuration = "<%= settings.bigCapSettlementWindowDuration %>", priceVerificationContract = "<%= imports.pyth_erc7412_wrapper.contracts.PythERC7412Wrapper.address %>", feedId = "<%= settings.pythArbFeedId %>", settlementReward = "<%= parseEther(settings.settlementReward) %>", disabled = false, commitmentPriceDelay = "<%= settings.commitmentPriceDelay %>" },
]
depends = [
    'provision.perpsFactory',
    'setting.perpsArbMarketId',
    'invoke.addPerpsArbSettlementStrategy',
    'provision.pyth_erc7412_wrapper',
    'setting.bigCapSettlementDelay',
    'setting.bigCapSettlementWindowDuration',
    'setting.pythArbFeedId',
    'setting.settlementReward',
    'setting.commitmentPriceDelay',
]
[invoke.setPerpsArbFundingParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setFundingParameters"
args = [
    "<%= settings.perpsArbMarketId %>",
    "<%= parseEther(settings.perpsArbSkewScale) %>",
    "<%= parseEther(settings.perpsArbMaxFundingVelocity) %>",
]
depends = ["invoke.createArbPerpsMarket"]

[invoke.setPerpsArbOrderFees]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setOrderFees"
args = [
    "<%= settings.perpsArbMarketId %>",
    "<%= parseEther(settings.perpsArbMakerFeeRatio) %>",
    "<%= parseEther(settings.perpsArbTakerFeeRatio) %>",
]
depends = ["invoke.createArbPerpsMarket"]

[invoke.setPerpsArbMaxMarketSize]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketSize"
args = ["<%= settings.perpsArbMarketId %>", "<%= parseEther(settings.perpsArbMaxMarketSize) %>"]
depends = ["invoke.createArbPerpsMarket"]

[invoke.setPerpsArbMaxMarketValue]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketValue"
args = ["<%= settings.perpsArbMarketId %>", "<%= parseEther(settings.perpsArbMaxMarketValue) %>"]
depends = ["invoke.createArbPerpsMarket"]

[invoke.setPerpsArbMaxLiquidationParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxLiquidationParameters"
args = [
    "<%= settings.perpsArbMarketId %>",
    "<%= parseEther(settings.perpsArbMaxLiquidationLimitAccumulationMultiplier) %>",
    "<%= settings.perpsArbMaxSecondsInLiquidationWindow %>",
    "<%= parseEther(settings.perpsArbMaxLiquidationPd) %>",
    "<%= settings.perpsArbEndorsedLiquidator %>",
]
depends = ["invoke.createArbPerpsMarket"]

[invoke.setPerpsArbLiquidationParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLiquidationParameters"
args = [
    "<%= settings.perpsArbMarketId %>",
    "<%= parseEther(settings.perpsArbInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsArbMinimumInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsArbMaintenanceMarginScalar) %>",
    "<%= parseEther(settings.perpsArbFlagRewardRatioD18) %>",
    "<%= parseEther(settings.perpsArbMinimumPositionMargin) %>",
]
depends = ["invoke.createArbPerpsMarket"]

[invoke.setPerpsArbLockedOiRatio]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLockedOiRatio"
args = ["<%= settings.perpsArbMarketId %>", "<%= parseEther(settings.perpsArbLockedOiRatio) %>"]
depends = ["invoke.createArbPerpsMarket"]
