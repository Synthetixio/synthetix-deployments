[invoke.createLdoPerpsMarket]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "createMarket"
args = ["<%= settings.perpsLdoMarketId %>", "Lido dao", "LDO"]

[invoke.setPerpsPriceLdo]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "updatePriceData"
args = [
    "<%= settings.perpsLdoMarketId %>",
    "<%= extras.ldo_oracle_id %>",
    "<%= settings.bigCapStrictStalenessTolerance %>",
]
depends = ["invoke.createLdoPerpsMarket"]

# Do not modify this step. Edit [invoke.setPerpsLdoSettlementStrategy] instead.
[invoke.addPerpsLdoSettlementStrategy]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "addSettlementStrategy"
args = [
    "<%= settings.perpsLdoMarketId %>",
    { strategyType = "0", settlementDelay = "0", settlementWindowDuration = "1", priceVerificationContract = "0x0000000000000000000000000000000000000000", feedId = "0x0000000000000000000000000000000000000000000000000000000000000000", settlementReward = "0", disabled = false, commitmentPriceDelay = "0" },
]
extra.ldo_pyth_settlement_strategy.event = "SettlementStrategyAdded"
extra.ldo_pyth_settlement_strategy.arg = 2
depends = ["invoke.createLdoPerpsMarket"]

[invoke.setPerpsLdoSettlementStrategy]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setSettlementStrategy"
args = [
    "<%= settings.perpsLdoMarketId %>",
    "<%= extras.ldo_pyth_settlement_strategy %>",                                                                                                                                                                                                                                                                                                                                                                                                                         # Settlement Strategy ID
    { strategyType = "0", settlementDelay = "<%= settings.bigCapSettlementDelay %>", settlementWindowDuration = "<%= settings.bigCapSettlementWindowDuration %>", priceVerificationContract = "<%= imports.pyth_erc7412_wrapper.contracts.PythERC7412Wrapper.address %>", feedId = "<%= settings.pythLdoFeedId %>", settlementReward = "<%= parseEther(settings.settlementReward) %>", disabled = false, commitmentPriceDelay = "<%= settings.commitmentPriceDelay %>" },
]
depends = [
    'provision.perpsFactory',
    'setting.perpsLdoMarketId',
    'invoke.addPerpsLdoSettlementStrategy',
    'provision.pyth_erc7412_wrapper',
    'setting.bigCapSettlementDelay',
    'setting.bigCapSettlementWindowDuration',
    'setting.pythLdoFeedId',
    'setting.settlementReward',
    'setting.commitmentPriceDelay',
]
[invoke.setPerpsLdoFundingParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setFundingParameters"
args = [
    "<%= settings.perpsLdoMarketId %>",
    "<%= parseEther(settings.perpsLdoSkewScale) %>",
    "<%= parseEther(settings.perpsLdoMaxFundingVelocity) %>",
]
depends = ["invoke.createLdoPerpsMarket"]

[invoke.setPerpsLdoOrderFees]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setOrderFees"
args = [
    "<%= settings.perpsLdoMarketId %>",
    "<%= parseEther(settings.perpsLdoMakerFeeRatio) %>",
    "<%= parseEther(settings.perpsLdoTakerFeeRatio) %>",
]
depends = ["invoke.createLdoPerpsMarket"]

[invoke.setPerpsLdoMaxMarketSize]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketSize"
args = ["<%= settings.perpsLdoMarketId %>", "<%= parseEther(settings.perpsLdoMaxMarketSize) %>"]
depends = ["invoke.createLdoPerpsMarket"]

[invoke.setPerpsLdoMaxMarketValue]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketValue"
args = ["<%= settings.perpsLdoMarketId %>", "<%= parseEther(settings.perpsLdoMaxMarketValue) %>"]
depends = ["invoke.createLdoPerpsMarket"]

[invoke.setPerpsLdoMaxLiquidationParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxLiquidationParameters"
args = [
    "<%= settings.perpsLdoMarketId %>",
    "<%= parseEther(settings.perpsLdoMaxLiquidationLimitAccumulationMultiplier) %>",
    "<%= settings.perpsLdoMaxSecondsInLiquidationWindow %>",
    "<%= parseEther(settings.perpsLdoMaxLiquidationPd) %>",
    "<%= settings.perpsLdoEndorsedLiquidator %>",
]
depends = ["invoke.createLdoPerpsMarket"]

[invoke.setPerpsLdoLiquidationParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLiquidationParameters"
args = [
    "<%= settings.perpsLdoMarketId %>",
    "<%= parseEther(settings.perpsLdoInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsLdoMinimumInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsLdoMaintenanceMarginScalar) %>",
    "<%= parseEther(settings.perpsLdoFlagRewardRatioD18) %>",
    "<%= parseEther(settings.perpsLdoMinimumPositionMargin) %>",
]
depends = ["invoke.createLdoPerpsMarket"]

[invoke.setPerpsLdoLockedOiRatio]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLockedOiRatio"
args = ["<%= settings.perpsLdoMarketId %>", "<%= parseEther(settings.perpsLdoLockedOiRatio) %>"]
depends = ["invoke.createLdoPerpsMarket"]
