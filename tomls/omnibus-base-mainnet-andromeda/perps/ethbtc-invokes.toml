[invoke.createEthbtcPerpsMarket]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "createMarket"
args = ["<%= settings.perpsEthbtcMarketId %>", "Ether/Bitcoin Ratio", "ETHBTC"]

[invoke.setPerpsPriceEthbtc]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "updatePriceData"
args = [
    "<%= settings.perpsEthbtcMarketId %>",
    "<%= extras.ethbtc_oracle_id %>",
    "<%= settings.bigCapStrictStalenessTolerance %>",
]
depends = ["invoke.createEthbtcPerpsMarket"]

# Do not modify this step. Edit [invoke.setPerpsEthbtcSettlementStrategy] instead.
[invoke.addPerpsEthbtcSettlementStrategy]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "addSettlementStrategy"
args = [
    "<%= settings.perpsEthbtcMarketId %>",
    { strategyType = "0", settlementDelay = "0", settlementWindowDuration = "1", priceVerificationContract = "0x0000000000000000000000000000000000000000", feedId = "0x0000000000000000000000000000000000000000000000000000000000000000", settlementReward = "0", disabled = false, commitmentPriceDelay = "0" },
]
extra.ethbtc_pyth_settlement_strategy.event = "SettlementStrategyAdded"
extra.ethbtc_pyth_settlement_strategy.arg = 2
depends = ["invoke.createEthbtcPerpsMarket"]

[invoke.setPerpsEthbtcSettlementStrategy]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setSettlementStrategy"
args = [
    "<%= settings.perpsEthbtcMarketId %>",
    "<%= extras.ethbtc_pyth_settlement_strategy %>",                                                                                                                                                                                                                                                                                                                                                                                                                         # Settlement Strategy ID
    { strategyType = "0", settlementDelay = "<%= settings.bigCapSettlementDelay %>", settlementWindowDuration = "<%= settings.bigCapSettlementWindowDuration %>", priceVerificationContract = "<%= imports.pyth_erc7412_wrapper.contracts.PythERC7412Wrapper.address %>", feedId = "<%= settings.pythEthbtcFeedId %>", settlementReward = "<%= parseEther(settings.settlementReward) %>", disabled = false, commitmentPriceDelay = "<%= settings.commitmentPriceDelay %>" },
]
depends = [
    'provision.perpsFactory',
    'setting.perpsEthbtcMarketId',
    'invoke.addPerpsEthbtcSettlementStrategy',
    'provision.pyth_erc7412_wrapper',
    'setting.bigCapSettlementDelay',
    'setting.bigCapSettlementWindowDuration',
    'setting.pythEthbtcFeedId',
    'setting.settlementReward',
    'setting.commitmentPriceDelay',
]
[invoke.setPerpsEthbtcFundingParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setFundingParameters"
args = [
    "<%= settings.perpsEthbtcMarketId %>",
    "<%= parseEther(settings.perpsEthbtcSkewScale) %>",
    "<%= parseEther(settings.perpsEthbtcMaxFundingVelocity) %>",
]
depends = ["invoke.createEthbtcPerpsMarket"]

[invoke.setPerpsEthbtcOrderFees]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setOrderFees"
args = [
    "<%= settings.perpsEthbtcMarketId %>",
    "<%= parseEther(settings.perpsEthbtcMakerFeeRatio) %>",
    "<%= parseEther(settings.perpsEthbtcTakerFeeRatio) %>",
]
depends = ["invoke.createEthbtcPerpsMarket"]

[invoke.setPerpsEthbtcMaxMarketSize]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketSize"
args = [
    "<%= settings.perpsEthbtcMarketId %>",
    "<%= parseEther(settings.perpsEthbtcMaxMarketSize) %>",
]
depends = ["invoke.createEthbtcPerpsMarket"]

[invoke.setPerpsEthbtcMaxMarketValue]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketValue"
args = [
    "<%= settings.perpsEthbtcMarketId %>",
    "<%= parseEther(settings.perpsEthbtcMaxMarketValue) %>",
]
depends = ["invoke.createEthbtcPerpsMarket"]

[invoke.setPerpsEthbtcMaxLiquidationParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxLiquidationParameters"
args = [
    "<%= settings.perpsEthbtcMarketId %>",
    "<%= parseEther(settings.perpsEthbtcMaxLiquidationLimitAccumulationMultiplier) %>",
    "<%= settings.perpsEthbtcMaxSecondsInLiquidationWindow %>",
    "<%= parseEther(settings.perpsEthbtcMaxLiquidationPd) %>",
    "<%= settings.perpsEthbtcEndorsedLiquidator %>",
]
depends = ["invoke.createEthbtcPerpsMarket"]

[invoke.setPerpsEthbtcLiquidationParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLiquidationParameters"
args = [
    "<%= settings.perpsEthbtcMarketId %>",
    "<%= parseEther(settings.perpsEthbtcInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsEthbtcMinimumInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsEthbtcMaintenanceMarginScalar) %>",
    "<%= parseEther(settings.perpsEthbtcFlagRewardRatioD18) %>",
    "<%= parseEther(settings.perpsEthbtcMinimumPositionMargin) %>",
]
depends = ["invoke.createEthbtcPerpsMarket"]

[invoke.setPerpsEthbtcLockedOiRatio]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLockedOiRatio"
args = [
    "<%= settings.perpsEthbtcMarketId %>",
    "<%= parseEther(settings.perpsEthbtcLockedOiRatio) %>",
]
depends = ["invoke.createEthbtcPerpsMarket"]
