[invoke.createArkmPerpsMarket]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "createMarket"
args = ["<%= settings.perpsArkmMarketId %>", "Arkham", "ARKM"]

[invoke.setPerpsPriceArkm]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "updatePriceData"
args = [
    "<%= settings.perpsArkmMarketId %>",
    "<%= extras.arkm_oracle_id %>",
    "<%= settings.bigCapStrictStalenessTolerance %>",
]
depends = ["invoke.createArkmPerpsMarket"]

# Do not modify this step. Edit [invoke.setPerpsArkmSettlementStrategy] instead.
[invoke.addPerpsArkmSettlementStrategy]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "addSettlementStrategy"
args = [
    "<%= settings.perpsArkmMarketId %>",
    { strategyType = "0", settlementDelay = "0", settlementWindowDuration = "1", priceVerificationContract = "0x0000000000000000000000000000000000000000", feedId = "0x0000000000000000000000000000000000000000000000000000000000000000", settlementReward = "0", disabled = false, commitmentPriceDelay = "0" },
]
extra.arkm_pyth_settlement_strategy.event = "SettlementStrategyAdded"
extra.arkm_pyth_settlement_strategy.arg = 2
depends = ["invoke.createArkmPerpsMarket"]

[invoke.setPerpsArkmSettlementStrategy]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setSettlementStrategy"
args = [
    "<%= settings.perpsArkmMarketId %>",
    "<%= extras.arkm_pyth_settlement_strategy %>",                                                                                                                                                                                                                                                                                                                                                                                                                         # Settlement Strategy ID
    { strategyType = "0", settlementDelay = "<%= settings.bigCapSettlementDelay %>", settlementWindowDuration = "<%= settings.bigCapSettlementWindowDuration %>", priceVerificationContract = "<%= imports.pyth_erc7412_wrapper.contracts.PythERC7412Wrapper.address %>", feedId = "<%= settings.pythArkmFeedId %>", settlementReward = "<%= parseEther(settings.settlementReward) %>", disabled = false, commitmentPriceDelay = "<%= settings.commitmentPriceDelay %>" },
]
depends = [
    'provision.perpsFactory',
    'setting.perpsArkmMarketId',
    'invoke.addPerpsArkmSettlementStrategy',
    'provision.pyth_erc7412_wrapper',
    'setting.bigCapSettlementDelay',
    'setting.bigCapSettlementWindowDuration',
    'setting.pythArkmFeedId',
    'setting.settlementReward',
    'setting.commitmentPriceDelay',
]
[invoke.setPerpsArkmFundingParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setFundingParameters"
args = [
    "<%= settings.perpsArkmMarketId %>",
    "<%= parseEther(settings.perpsArkmSkewScale) %>",
    "<%= parseEther(settings.perpsArkmMaxFundingVelocity) %>",
]
depends = ["invoke.createArkmPerpsMarket"]

[invoke.setPerpsArkmOrderFees]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setOrderFees"
args = [
    "<%= settings.perpsArkmMarketId %>",
    "<%= parseEther(settings.perpsArkmMakerFeeRatio) %>",
    "<%= parseEther(settings.perpsArkmTakerFeeRatio) %>",
]
depends = ["invoke.createArkmPerpsMarket"]

[invoke.setPerpsArkmMaxMarketSize]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketSize"
args = ["<%= settings.perpsArkmMarketId %>", "<%= parseEther(settings.perpsArkmMaxMarketSize) %>"]
depends = ["invoke.createArkmPerpsMarket"]

[invoke.setPerpsArkmMaxMarketValue]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketValue"
args = ["<%= settings.perpsArkmMarketId %>", "<%= parseEther(settings.perpsArkmMaxMarketValue) %>"]
depends = ["invoke.createArkmPerpsMarket"]

[invoke.setPerpsArkmMaxLiquidationParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxLiquidationParameters"
args = [
    "<%= settings.perpsArkmMarketId %>",
    "<%= parseEther(settings.perpsArkmMaxLiquidationLimitAccumulationMultiplier) %>",
    "<%= settings.perpsArkmMaxSecondsInLiquidationWindow %>",
    "<%= parseEther(settings.perpsArkmMaxLiquidationPd) %>",
    "<%= settings.perpsArkmEndorsedLiquidator %>",
]
depends = ["invoke.createArkmPerpsMarket"]

[invoke.setPerpsArkmLiquidationParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLiquidationParameters"
args = [
    "<%= settings.perpsArkmMarketId %>",
    "<%= parseEther(settings.perpsArkmInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsArkmMinimumInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsArkmMaintenanceMarginScalar) %>",
    "<%= parseEther(settings.perpsArkmFlagRewardRatioD18) %>",
    "<%= parseEther(settings.perpsArkmMinimumPositionMargin) %>",
]
depends = ["invoke.createArkmPerpsMarket"]

[invoke.setPerpsArkmLockedOiRatio]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLockedOiRatio"
args = ["<%= settings.perpsArkmMarketId %>", "<%= parseEther(settings.perpsArkmLockedOiRatio) %>"]
depends = ["invoke.createArkmPerpsMarket"]
