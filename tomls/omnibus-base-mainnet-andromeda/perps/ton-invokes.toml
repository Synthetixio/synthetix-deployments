[invoke.createTonPerpsMarket]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "createMarket"
args = ["<%= settings.perpsTonMarketId %>", "Toncoin", "TON"]

[invoke.setPerpsPriceTon]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "updatePriceData"
args = [
    "<%= settings.perpsTonMarketId %>",
    "<%= extras.ton_oracle_id %>",
    "<%= settings.bigCapStrictStalenessTolerance %>",
]
depends = ["invoke.createTonPerpsMarket"]

# Do not modify this step. Edit [invoke.setPerpsTonSettlementStrategy] instead.
[invoke.addPerpsTonSettlementStrategy]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "addSettlementStrategy"
args = [
    "<%= settings.perpsTonMarketId %>",
    { strategyType = "0", settlementDelay = "0", settlementWindowDuration = "1", priceVerificationContract = "0x0000000000000000000000000000000000000000", feedId = "0x0000000000000000000000000000000000000000000000000000000000000000", settlementReward = "0", disabled = false, commitmentPriceDelay = "0" },
]
extra.ton_pyth_settlement_strategy.event = "SettlementStrategyAdded"
extra.ton_pyth_settlement_strategy.arg = 2
depends = ["invoke.createTonPerpsMarket"]

[invoke.setPerpsTonSettlementStrategy]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setSettlementStrategy"
args = [
    "<%= settings.perpsTonMarketId %>",
    "<%= extras.ton_pyth_settlement_strategy %>",                                                                                                                                                                                                                                                                                                                                                                                                                         # Settlement Strategy ID
    { strategyType = "0", settlementDelay = "<%= settings.bigCapSettlementDelay %>", settlementWindowDuration = "<%= settings.bigCapSettlementWindowDuration %>", priceVerificationContract = "<%= imports.pyth_erc7412_wrapper.contracts.PythERC7412Wrapper.address %>", feedId = "<%= settings.pythTonFeedId %>", settlementReward = "<%= parseEther(settings.settlementReward) %>", disabled = false, commitmentPriceDelay = "<%= settings.commitmentPriceDelay %>" },
]
depends = [
    'provision.perpsFactory',
    'setting.perpsTonMarketId',
    'invoke.addPerpsTonSettlementStrategy',
    'provision.pyth_erc7412_wrapper',
    'setting.bigCapSettlementDelay',
    'setting.bigCapSettlementWindowDuration',
    'setting.pythTonFeedId',
    'setting.settlementReward',
    'setting.commitmentPriceDelay',
]
[invoke.setPerpsTonFundingParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setFundingParameters"
args = [
    "<%= settings.perpsTonMarketId %>",
    "<%= parseEther(settings.perpsTonSkewScale) %>",
    "<%= parseEther(settings.perpsTonMaxFundingVelocity) %>",
]
depends = ["invoke.createTonPerpsMarket"]

[invoke.setPerpsTonOrderFees]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setOrderFees"
args = [
    "<%= settings.perpsTonMarketId %>",
    "<%= parseEther(settings.perpsTonMakerFeeRatio) %>",
    "<%= parseEther(settings.perpsTonTakerFeeRatio) %>",
]
depends = ["invoke.createTonPerpsMarket"]

[invoke.setPerpsTonMaxMarketSize]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketSize"
args = ["<%= settings.perpsTonMarketId %>", "<%= parseEther(settings.perpsTonMaxMarketSize) %>"]
depends = ["invoke.createTonPerpsMarket"]

[invoke.setPerpsTonMaxMarketValue]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketValue"
args = ["<%= settings.perpsTonMarketId %>", "<%= parseEther(settings.perpsTonMaxMarketValue) %>"]
depends = ["invoke.createTonPerpsMarket"]

[invoke.setPerpsTonMaxLiquidationParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxLiquidationParameters"
args = [
    "<%= settings.perpsTonMarketId %>",
    "<%= parseEther(settings.perpsTonMaxLiquidationLimitAccumulationMultiplier) %>",
    "<%= settings.perpsTonMaxSecondsInLiquidationWindow %>",
    "<%= parseEther(settings.perpsTonMaxLiquidationPd) %>",
    "<%= settings.perpsTonEndorsedLiquidator %>",
]
depends = ["invoke.createTonPerpsMarket"]

[invoke.setPerpsTonLiquidationParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLiquidationParameters"
args = [
    "<%= settings.perpsTonMarketId %>",
    "<%= parseEther(settings.perpsTonInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsTonMinimumInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsTonMaintenanceMarginScalar) %>",
    "<%= parseEther(settings.perpsTonFlagRewardRatioD18) %>",
    "<%= parseEther(settings.perpsTonMinimumPositionMargin) %>",
]
depends = ["invoke.createTonPerpsMarket"]

[invoke.setPerpsTonLockedOiRatio]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLockedOiRatio"
args = ["<%= settings.perpsTonMarketId %>", "<%= parseEther(settings.perpsTonLockedOiRatio) %>"]
depends = ["invoke.createTonPerpsMarket"]
