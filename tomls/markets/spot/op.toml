include = [
  "../spot-factory.toml",
]

[setting.op_aggregator_address]

[invoke.registerSynthOpOracleManager]
target = ["system.oracle_manager.Proxy"]
func = "registerNode"
args = [
   # 3 = chainop aggregator type
   3,
   # 3 parameters are: address of the chainop oracle
   "<%= defaultAbiCoder.encode(['address', 'uint256', 'uint8'], [settings.op_aggregator_address, 0, 8]) %>",
   []
]

extra.synth_op_oracle_id.event = "NodeRegistered"
extra.synth_op_oracle_id.arg = 0

depends = [
 "provision.system"
]

[invoke.createOpSynth]
target = ["spotFactory.SpotMarketProxy"]
fromCall.func = "owner"
func = "createSynth"
args = ["Synthetic Optimism Token", "snxOP", "<%= settings.owner %>"]

extra.synth_op_market_id.event = "SynthRegistered"
extra.synth_op_market_id.arg = 0

extra.synth_op_token_address.event = "SynthRegistered"
extra.synth_op_token_address.arg = 1

depends = ["provision.spotFactory"]

[invoke.setSynthPriceOp]
target = ["spotFactory.SpotMarketProxy"]
fromCall.func = "getMarketOwner"
fromCall.args = ["<%= extras.synth_op_market_id %>"]

func = "updatePriceData"
args = [
  "<%= extras.synth_op_market_id %>", 
  "<%= extras.synth_op_oracle_id %>", 
  "<%= extras.synth_op_oracle_id %>"
]

depends = ["invoke.createOpSynth", "invoke.registerSynthOpOracleManager"]
