include = [
    # TODO: this is a funny necessary dependency because the oracle manager is registering the same node twice
    # however, it will not emit "NodeRegistered" the second time because its an unnecessary call
    "../../oracles/eth.toml",
    "../common/bigcap-settings.toml",
]

[setting.ethPerpsMarketId]

[setting.perpsEthSkewScale]

[setting.perpsEthMaxFundingVelocity]

[setting.perpsEthMakerFeeRatio]

[setting.perpsEthTakerFeeRatio]

[setting.perpsEthMaxMarketSize]

[setting.perpsEthInitialMarginRatio]

[setting.perpsEthMaintenanceMarginFraction]

[setting.perpsEthFlagRewardRatioD18]

[setting.perpsEthMaxLiquidationLimitAccumulationMultiplier]

[setting.perpsEthMaxSecondsInLiquidationWindow]

[setting.perpsEthMaxLiquidationPd]

[setting.perpsEthEndorsedLiquidator]

[setting.perpsEthMinimumPositionMargin]

[setting.perpsEthLockedOiRatio]

[invoke.createEthPerpsMarket]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "createMarket"
args = ["<%= settings.ethPerpsMarketId %>", "Ethereum", "ETH"]
depends = ["provision.perpsFactory"]

[invoke.setPerpsPriceEth]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "updatePriceData"
args = [
    "<%= settings.ethPerpsMarketId %>",
    "<%= extras.eth_oracle_id %>",
    "<%= settings.bigCapStrictStalenessTolerance %>",
]
depends = ["invoke.createEthPerpsMarket", "invoke.registerEthOracleNode"]

# Do not modify this step. Edit [invoke.setPerpsEthSettlementStrategy] instead.
[invoke.addPerpsEthSettlementStrategy]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "addSettlementStrategy"
args = [
    "<%= settings.ethPerpsMarketId %>",
    { strategyType = "0", settlementDelay = "0", settlementWindowDuration = "1", priceVerificationContract = "0x0000000000000000000000000000000000000000", feedId = "0x0000000000000000000000000000000000000000000000000000000000000000", settlementReward = "0", disabled = false, commitmentPriceDelay = "0" },
]
extra.eth_pyth_settlement_strategy.event = "SettlementStrategyAdded"
extra.eth_pyth_settlement_strategy.arg = 2
depends = ["invoke.createEthPerpsMarket"]

[invoke.setPerpsEthSettlementStrategy]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setSettlementStrategy"
args = [
    "<%= settings.ethPerpsMarketId %>",
    "<%= extras.eth_pyth_settlement_strategy %>",                                                                                                                                                                                                                                                                                                                                                                                                                         # Settlement Strategy ID
    { strategyType = "0", settlementDelay = "<%= settings.bigCapSettlementDelay %>", settlementWindowDuration = "<%= settings.bigCapSettlementWindowDuration %>", priceVerificationContract = "<%= imports.pyth_erc7412_wrapper.contracts.PythERC7412Wrapper.address %>", feedId = "<%= settings.pythEthFeedId %>", settlementReward = "<%= parseEther(settings.settlementReward) %>", disabled = false, commitmentPriceDelay = "<%= settings.commitmentPriceDelay %>" },
]
depends = ["invoke.addPerpsEthSettlementStrategy"]

[invoke.setPerpsEthFundingParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setFundingParameters"
args = [
    "<%= settings.ethPerpsMarketId %>",
    "<%= parseEther(settings.perpsEthSkewScale) %>",
    "<%= parseEther(settings.perpsEthMaxFundingVelocity) %>",
]
depends = ["invoke.createEthPerpsMarket"]

[invoke.setPerpsEthOrderFees]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setOrderFees"
args = [
    "<%= settings.ethPerpsMarketId %>",
    "<%= parseEther(settings.perpsEthMakerFeeRatio) %>",
    "<%= parseEther(settings.perpsEthTakerFeeRatio) %>",
]
depends = ["invoke.createEthPerpsMarket"]

[invoke.setPerpsEthMaxMarketSize]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketSize"
args = ["<%= settings.ethPerpsMarketId %>", "<%= parseEther(settings.perpsEthMaxMarketSize) %>"]
depends = ["invoke.createEthPerpsMarket"]

[invoke.setPerpsEthMaxLiquidationParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxLiquidationParameters"
args = [
    "<%= settings.ethPerpsMarketId %>",
    "<%= parseEther(settings.perpsEthMaxLiquidationLimitAccumulationMultiplier) %>",
    "<%= settings.perpsEthMaxSecondsInLiquidationWindow %>",
    "<%= parseEther(settings.perpsEthMaxLiquidationPd) %>",
    "<%= settings.perpsEthEndorsedLiquidator %>",
]
depends = ["invoke.createEthPerpsMarket"]

[invoke.setPerpsEthLiquidationParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLiquidationParameters"
args = [
    "<%= settings.ethPerpsMarketId %>",
    "<%= parseEther(settings.perpsEthInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsEthMinimumInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsEthMaintenanceMarginScalar) %>",
    "<%= parseEther(settings.perpsEthFlagRewardRatioD18) %>",
    "<%= parseEther(settings.perpsEthMinimumPositionMargin) %>",
]
depends = ["invoke.createEthPerpsMarket"]

[invoke.setPerpsEthLockedOiRatio]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLockedOiRatio"
args = ["<%= settings.ethPerpsMarketId %>", "<%= parseEther(settings.perpsEthLockedOiRatio) %>"]
depends = ["invoke.createEthPerpsMarket"]
