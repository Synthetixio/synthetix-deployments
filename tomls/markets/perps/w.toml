include = [
    # TODO: this is a funny necessary dependency because the oracle manager is registering the same node twice
    # however, it will not emit "NodeRegistered" the second time because its an unnecessary call
    "../../oracles/pyth-w.toml",
    "../common/bigcap-settings.toml",
]

[setting.perpsWMarketId]

[setting.perpsWSkewScale]

[setting.perpsWMaxFundingVelocity]

[setting.perpsWMakerFeeRatio]

[setting.perpsWTakerFeeRatio]

[setting.perpsWMaxMarketSize]

[setting.perpsWInitialMarginRatio]

[setting.perpsWMaintenanceMarginFraction]

[setting.perpsWFlagRewardRatioD18]

[setting.perpsWMaxLiquidationLimitAccumulationMultiplier]

[setting.perpsWMaxSecondsInLiquidationWindow]

[setting.perpsWMaxLiquidationPd]

[setting.perpsWEndorsedLiquidator]

[setting.perpsWMinimumPositionMargin]

[setting.perpsWLockedOiRatio]

[invoke.createWPerpsMarket]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "createMarket"
args = ["<%= settings.perpsWMarketId %>", "Wormhole", "W"]

[invoke.setPerpsPriceW]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "updatePriceData"
args = [
    "<%= settings.perpsWMarketId %>",
    "<%= extras.w_oracle_id %>",
    "<%= settings.bigCapStrictStalenessTolerance %>",
]

[invoke.setPerpsWSettlementStrategy]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setSettlementStrategy"
args = [
    "<%= settings.perpsWMarketId %>",
    "0",                                                                                                                                                                                                                                                                                                                                                                                                                                                                # Settlement Strategy ID
    { strategyType = "0", settlementDelay = "<%= settings.bigCapSettlementDelay %>", settlementWindowDuration = "<%= settings.bigCapSettlementWindowDuration %>", priceVerificationContract = "<%= imports.pyth_erc7412_wrapper.contracts.PythERC7412Wrapper.address %>", feedId = "<%= settings.pythWFeedId %>", settlementReward = "<%= parseEther(settings.settlementReward) %>", disabled = false, commitmentPriceDelay = "<%= settings.commitmentPriceDelay %>" },
]
depends = [
    'provision.perpsFactory',
    'setting.perpsWMarketId',
    'provision.pyth_erc7412_wrapper',
    'setting.bigCapSettlementDelay',
    'setting.bigCapSettlementWindowDuration',
    'setting.pythWFeedId',
    'setting.settlementReward',
    'setting.commitmentPriceDelay',
]

[invoke.setPerpsWFundingParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setFundingParameters"
args = [
    "<%= settings.perpsWMarketId %>",
    "<%= parseEther(settings.perpsWSkewScale) %>",
    "<%= parseEther(settings.perpsWMaxFundingVelocity) %>",
]

[invoke.setPerpsWOrderFees]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setOrderFees"
args = [
    "<%= settings.perpsWMarketId %>",
    "<%= parseEther(settings.perpsWMakerFeeRatio) %>",
    "<%= parseEther(settings.perpsWTakerFeeRatio) %>",
]

[invoke.setPerpsWMaxMarketSize]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketSize"
args = ["<%= settings.perpsWMarketId %>", "<%= parseEther(settings.perpsWMaxMarketSize) %>"]

[invoke.setPerpsWMaxLiquidationParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxLiquidationParameters"
args = [
    "<%= settings.perpsWMarketId %>",
    "<%= parseEther(settings.perpsWMaxLiquidationLimitAccumulationMultiplier) %>",
    "<%= settings.perpsWMaxSecondsInLiquidationWindow %>",
    "<%= parseEther(settings.perpsWMaxLiquidationPd) %>",
    "<%= settings.perpsWEndorsedLiquidator %>",
]

[invoke.setPerpsWLiquidationParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLiquidationParameters"
args = [
    "<%= settings.perpsWMarketId %>",
    "<%= parseEther(settings.perpsWInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsWMinimumInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsWMaintenanceMarginScalar) %>",
    "<%= parseEther(settings.perpsWFlagRewardRatioD18) %>",
    "<%= parseEther(settings.perpsWMinimumPositionMargin) %>",
]

[invoke.setPerpsWLockedOiRatio]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLockedOiRatio"
args = ["<%= settings.perpsWMarketId %>", "<%= parseEther(settings.perpsWLockedOiRatio) %>"]
