include = [
  "../perps-factory.toml",
  "../../oracles/btc.toml",
  "../common/bigcap-settings.toml",
]

[setting.pythBtcFeedId]

[setting.btcPerpsMarketId]

[setting.perpsBtcSkewScale]

[setting.perpsBtcMaxFundingVelocity]

[setting.perpsBtcMakerFeeRatio]

[setting.perpsBtcTakerFeeRatio]

[setting.perpsBtcMaxMarketSize]

[setting.perpsBtcInitialMarginRatio]

[setting.perpsBtcMaintenanceMarginFraction]

[setting.perpsBtcLiquidationRewardRatioD18]

[setting.perpsBtcMaxLiquidationLimitAccumulationMultiplier]

[setting.perpsBtcMaxSecondsInLiquidationWindow]

[setting.perpsBtcMinimumPositionMargin]

[setting.perpsBtcLockedOiRatio]

# strategy type for Perps markets is 0, for spot markets is 1
[setting.strategyType]
defaultValue = "0"

[invoke.createBtcPerpsMarket]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "createMarket"
args = ["<%= settings.btcPerpsMarketId %>", "Bitcoin", "BTC"]
depends = ["provision.perpsFactory"]

[invoke.setPerpsPriceBtc]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "updatePriceData"
args = [
  "<%= settings.btcPerpsMarketId %>", 
  "<%= extras.btc_oracle_id %>"
]
depends = ["invoke.createBtcPerpsMarket", "invoke.registerBtcOracleNode"]

[invoke.setPerpsBtcSettlementStrategy]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "addSettlementStrategy"
args = [
  "<%= settings.btcPerpsMarketId %>", 
  { strategyType = "<%= settings.strategyType %>", settlementDelay = "<%= settings.bigCapSettlementDelay %>", settlementWindowDuration = "<%= settings.bigCapSettlementWindowDuration %>", priceWindowDuration = "<%= settings.bigCapPriceWindowDuration %>", priceVerificationContract = "<%= settings.pythPriceVerificationAddress %>", feedId = "<%= settings.pythBtcFeedId %>",  url = "<%= settings.pythFeedUrl %>", settlementReward = "<%= settings.settlementReward %>", priceDeviationTolerance = "<%= parseEther(settings.bigCapSettlementDeviationTolerance) %>", disabled = false }
]
depends = ["invoke.createBtcPerpsMarket"]

[invoke.setPerpsBtcFundingParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setFundingParameters"
args = [
  "<%= settings.btcPerpsMarketId %>", 
  "<%= parseEther(settings.perpsBtcSkewScale) %>",
  "<%= parseEther(settings.perpsBtcMaxFundingVelocity) %>"
]
depends = ["invoke.createBtcPerpsMarket"]

[invoke.setPerpsBtcOrderFees]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setOrderFees"
args = [
  "<%= settings.btcPerpsMarketId %>", 
  "<%= parseEther(settings.perpsBtcMakerFeeRatio) %>",
  "<%= parseEther(settings.perpsBtcTakerFeeRatio) %>"
]
depends = ["invoke.createBtcPerpsMarket"]

[invoke.setPerpsBtcMaxMarketSize]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketSize"
args = [
  "<%= settings.btcPerpsMarketId %>", 
  "<%= parseEther(settings.perpsBtcMaxMarketSize) %>"
]
depends = ["invoke.createBtcPerpsMarket"]

[invoke.setPerpsBtcLiquidationParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLiquidationParameters"
args = [
  "<%= settings.btcPerpsMarketId %>", 
  "<%= parseEther(settings.perpsBtcInitialMarginRatio) %>",
  "<%= parseEther(settings.perpsBtcMinimumInitialMarginRatio) %>",
  "<%= parseEther(settings.perpsBtcMaintenanceMarginScalar) %>",
  "<%= parseEther(settings.perpsBtcLiquidationRewardRatioD18) %>",
  "<%= parseEther(settings.perpsBtcMaxLiquidationLimitAccumulationMultiplier) %>",
  "<%= parseEther(settings.perpsBtcMaxSecondsInLiquidationWindow) %>",
  "<%= parseEther(settings.perpsBtcMinimumPositionMargin) %>"
]
depends = ["invoke.createBtcPerpsMarket"]

[invoke.setPerpsBtcLockedOiRatio]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLockedOiRatio"
args = [
  "<%= settings.btcPerpsMarketId %>", 
  "<%= parseEther(settings.perpsBtcLockedOiRatio) %>"
]
depends = ["invoke.createBtcPerpsMarket"]

[invoke.setMaxCollateralAmountBtc]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxCollateralAmount"
args = [
	"<%= extras.synth_btc_market_id %>",
	"<%= settings.perpsBtcSynthMaxCollateralAmount %>",
]
depends = ["invoke.createBtcSynth", "provision.perpsFactory"]
