include = ["../../oracles/pyth-link.toml", "../common/bigcap-settings.toml"]

[setting.linkPerpsMarketId]

[setting.perpsLinkSkewScale]

[setting.perpsLinkMaxFundingVelocity]

[setting.perpsLinkMakerFeeRatio]

[setting.perpsLinkTakerFeeRatio]

[setting.perpsLinkMaxMarketSize]

[setting.perpsLinkInitialMarginRatio]

[setting.perpsLinkMaintenanceMarginFraction]

[setting.perpsLinkFlagRewardRatioD18]

[setting.perpsLinkMaxLiquidationLimitAccumulationMultiplier]

[setting.perpsLinkMaxSecondsInLiquidationWindow]

[setting.perpsLinkMinimumPositionMargin]

[setting.perpsLinkLockedOiRatio]

[setting.pythLinkFeedId]

[invoke.createLinkPerpsMarket]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "createMarket"
args = ["<%= settings.linkPerpsMarketId %>", "Chainlink Token", "LINK"]
depends = ["provision.perpsFactory"]

[invoke.setPerpsPriceLink]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "updatePriceData"
args = [
    "<%= settings.linkPerpsMarketId %>",
    "<%= extras.link_oracle_id %>",
    "<%= settings.bigCapStrictStalenessTolerance %>",
]
depends = ["invoke.createLinkPerpsMarket", "invoke.registerLinkOracleNode"]

# Do not modify this step. Edit [invoke.setPerpsLinkSettlementStrategy] instead.
[invoke.addPerpsLinkSettlementStrategy]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "addSettlementStrategy"
args = [
    "<%= settings.linkPerpsMarketId %>",
    { strategyType = "0", settlementDelay = "<%= settings.bigCapSettlementDelay %>", settlementWindowDuration = "<%= settings.bigCapSettlementWindowDuration %>", priceVerificationContract = "<%= imports.pyth_erc7412_wrapper.contracts.PythERC7412Wrapper.address %>", feedId = "<%= settings.pythLinkFeedId %>", settlementReward = "<%= parseEther(settings.settlementReward) %>", disabled = false, commitmentPriceDelay = "<%= settings.commitmentPriceDelay %>" },
]
extra.link_pyth_settlement_strategy.event = "SettlementStrategyAdded"
extra.link_pyth_settlement_strategy.arg = 2
depends = ["invoke.createLinkPerpsMarket"]

[invoke.setPerpsLinkSettlementStrategy]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setSettlementStrategy"
args = [
    "<%= settings.linkPerpsMarketId %>",
    "<%= extras.link_pyth_settlement_strategy %>",                                                                                                                                                                                                                                                                                                                                                                                                                         # Settlement Strategy ID
    { strategyType = "0", settlementDelay = "<%= settings.bigCapSettlementDelay %>", settlementWindowDuration = "<%= settings.bigCapSettlementWindowDuration %>", priceVerificationContract = "<%= imports.pyth_erc7412_wrapper.contracts.PythERC7412Wrapper.address %>", feedId = "<%= settings.pythLinkFeedId %>", settlementReward = "<%= parseEther(settings.settlementReward) %>", disabled = false, commitmentPriceDelay = "<%= settings.commitmentPriceDelay %>" },
]
depends = ["invoke.addPerpsLinkSettlementStrategy"]

[invoke.setPerpsLinkFundingParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setFundingParameters"
args = [
    "<%= settings.linkPerpsMarketId %>",
    "<%= parseEther(settings.perpsLinkSkewScale) %>",
    "<%= parseEther(settings.perpsLinkMaxFundingVelocity) %>",
]
depends = ["invoke.createLinkPerpsMarket"]

[invoke.setPerpsLinkOrderFees]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setOrderFees"
args = [
    "<%= settings.linkPerpsMarketId %>",
    "<%= parseEther(settings.perpsLinkMakerFeeRatio) %>",
    "<%= parseEther(settings.perpsLinkTakerFeeRatio) %>",
]
depends = ["invoke.createLinkPerpsMarket"]

[invoke.setPerpsLinkMaxMarketSize]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxMarketSize"
args = ["<%= settings.linkPerpsMarketId %>", "<%= parseEther(settings.perpsLinkMaxMarketSize) %>"]
depends = ["invoke.createLinkPerpsMarket"]

[invoke.setPerpsLinkMaxLiquidationParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setMaxLiquidationParameters"
args = [
    "<%= settings.linkPerpsMarketId %>",
    "<%= parseEther(settings.perpsLinkMaxLiquidationLimitAccumulationMultiplier) %>",
    "<%= settings.perpsLinkMaxSecondsInLiquidationWindow %>",
    "<%= parseEther(settings.perpsLinkMaxLiquidationPd) %>",
    "<%= settings.perpsLinkEndorsedLiquidator %>",
]
depends = ["invoke.createLinkPerpsMarket"]

[invoke.setPerpsLinkLiquidationParameters]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLiquidationParameters"
args = [
    "<%= settings.linkPerpsMarketId %>",
    "<%= parseEther(settings.perpsLinkInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsLinkMinimumInitialMarginRatio) %>",
    "<%= parseEther(settings.perpsLinkMaintenanceMarginScalar) %>",
    "<%= parseEther(settings.perpsLinkFlagRewardRatioD18) %>",
    "<%= parseEther(settings.perpsLinkMinimumPositionMargin) %>",
]
depends = ["invoke.createLinkPerpsMarket"]

[invoke.setPerpsLinkLockedOiRatio]
target = ["perpsFactory.PerpsMarketProxy"]
fromCall.func = "owner"
func = "setLockedOiRatio"
args = ["<%= settings.linkPerpsMarketId %>", "<%= parseEther(settings.perpsLinkLockedOiRatio) %>"]
depends = ["invoke.createLinkPerpsMarket"]
